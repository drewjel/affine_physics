-----------------------------------------------
Using LLVM_SRC_PATH = /llvm
Using LLVM_BUILD_PATH = /llvm/build
Using LLVM_BIN_PATH = /llvm/build/bin
-----------------------------------------------
g++ -O0 -g -Wall `/llvm/build/bin/llvm-config --cxxflags` -I/llvm/tools/clang/include -I/llvm/build/tools/clang/include AST.cpp Interpretation.cpp Oracle.cpp Checker.cpp ASTToCoords.cpp Coords.cpp CoordsToDomain.cpp main.cpp Domain.cpp \
	-Wl,--start-group -lclangAST -lclangASTMatchers -lclangAnalysis -lclangBasic -lclangDriver -lclangEdit -lclangFrontend -lclangFrontendTool -lclangLex -lclangParse -lclangSema -lclangEdit -lclangRewrite -lclangRewriteFrontend -lclangStaticAnalyzerFrontend -lclangStaticAnalyzerCheckers -lclangStaticAnalyzerCore -lclangCrossTU -lclangIndex -lclangSerialization -lclangToolingCore -lclangTooling -lclangFormat -Wl,--end-group `/llvm/build/bin/llvm-config --ldflags --libs --system-libs` -o ../build/ASTMatcher
In file included from Oracle.h:7:0,
                 from Interpretation.h:8,
                 from Interpretation.cpp:13:
Domain.h:51:65: error: expected unqualified-id before '--' token
  VecExpr* mkVecVarExpr(Space& s, const coords::VecLitExpr* e);  -- KEVIN
                                                                 ^~
Domain.h:61:33: error: 'VecDef' in namespace 'coords' does not name a type
  VecDef& mkVecDef(const coords::VecDef* vardecl, const VecIdent* identifier, const VecExpr* expression);
                                 ^~~~~~
Domain.h:101:2: error: 'ToCoordscoords' does not name a type; did you mean 'ToCoords'?
  ToCoordscoords::Coords *c) : coords_(c) {}
  ^~~~~~~~~~~~~~
  ToCoords
Domain.h:105:2: error: expected ';' after class definition
 }
  ^
  ;
Domain.h:111:32: error: expected class-name before '{' token
 class VecIdent : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecIdent::VecIdent(domain::Space&, const coords::VecIdent*)':
Domain.h:113:54: error: type 'domain::ToCoords' is not a direct base of 'domain::VecIdent'
  VecIdent(Space& space, const coords::VecIdent* c) : ToCoords(c), space_(&space) {}
                                                      ^~~~~~~~
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:21: error: expected '<' before '<:' token
   return static_cast<:VecIdent*>getBaseCoords();
                     ^~
Domain.h:116:21: error: expected type-specifier before '<:' token
Domain.h:116:21: error: expected '>' before '<:' token
Domain.h:116:21: error: expected '(' before '<:' token
Domain.h:116:23: error: capture of non-variable 'domain::VecIdent::VecIdent' 
   return static_cast<:VecIdent*>getBaseCoords();
                       ^~~~~~~~
Domain.h:111:32: note: 'class domain::VecIdent domain::VecIdent::VecIdent' declared here
 class VecIdent : public ToCode {
                                ^
Domain.h:116:31: error: expected ',' before '*' token
   return static_cast<:VecIdent*>getBaseCoords();
                               ^
Domain.h:116:31: error: expected identifier before '*' token
Domain.h:116:48: error: expected ']' before ';' token
   return static_cast<:VecIdent*>getBaseCoords();
                                                ^
Domain.h: In lambda function:
Domain.h:116:48: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:48: error: expected ')' before ';' token
Domain.h: At global scope:
Domain.h:125:32: error: expected class-name before '{' token
 class VecExpr  : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)':
Domain.h:127:57: error: type 'domain::ToCoords' is not a direct base of 'domain::VecExpr'
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
                                                         ^~~~~~~~
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:21: error: expected '<' before '<:' token
   return static_cast<:VecExpr*>getBaseCoords();
                     ^~
Domain.h:129:21: error: expected type-specifier before '<:' token
Domain.h:129:21: error: expected '>' before '<:' token
Domain.h:129:21: error: expected '(' before '<:' token
Domain.h:129:23: error: capture of non-variable 'domain::VecExpr::VecExpr' 
   return static_cast<:VecExpr*>getBaseCoords();
                       ^~~~~~~
Domain.h:125:32: note: 'class domain::VecExpr domain::VecExpr::VecExpr' declared here
 class VecExpr  : public ToCode {
                                ^
Domain.h:129:30: error: expected ',' before '*' token
   return static_cast<:VecExpr*>getBaseCoords();
                              ^
Domain.h:129:30: error: expected identifier before '*' token
Domain.h:129:47: error: expected ']' before ';' token
   return static_cast<:VecExpr*>getBaseCoords();
                                               ^
Domain.h: In lambda function:
Domain.h:129:47: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:47: error: expected ')' before ';' token
Domain.h: In member function 'virtual std::__cxx11::string domain::VecExpr::toString() const':
Domain.h:133:7: error: 'ast_' was not declared in this scope
   if (ast_ != NULL) {
       ^~~~
Domain.h:133:7: note: suggested alternative: 'asin'
   if (ast_ != NULL) {
       ^~~~
       asin
Domain.h: At global scope:
Domain.h:147:37: error: expected ';' after class definition
 class VecLitExpr : public VecExpr {}
                                     ^
                                     ;
Domain.h: In member function 'virtual std::__cxx11::string domain::VecVarExpr::toString() const':
Domain.h:154:16: error: 'ast_' was not declared in this scope
   return "(" + ast_->toString() + " )";
                ^~~~
Domain.h:154:16: note: suggested alternative: 'asin'
   return "(" + ast_->toString() + " )";
                ^~~~
                asin
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVarExpr::getCoords()':
Domain.h:157:34: error: expected '(' before 'coords_'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
Domain.h:157:34: error: 'coords_' was not declared in this scope
Domain.h:157:34: note: suggested alternative: 'Coords'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
                                  Coords
Domain.h:157:41: error: expected ')' before ';' token
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                         ^
Domain.h: At global scope:
Domain.h:166:33: error: 'VecAddAddExpr' in namespace 'coords' does not name a type
         Space& s, const coords::VecAddAddExpr* c, domain::VecExpr *mem, domain::VecExpr *arg) :
                                 ^~~~~~~~~~~~~
Domain.h: In constructor 'domain::VecVecAddExpr::VecVecAddExpr(domain::Space&, const int*, domain::VecExpr*, domain::VecExpr*)':
Domain.h:167:46: error: no matching function for call to 'domain::VecExpr::VecExpr(domain::Space&, const int*&)'
    domain::VecExpr(s, c), arg_(arg), mem_(mem) {
                                              ^
Domain.h:127:5: note: candidate: domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
     ^~~~~~~
Domain.h:127:5: note:   no known conversion for argument 2 from 'const int*' to 'const coords::VecExpr*'
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(const domain::VecExpr&)
 class VecExpr  : public ToCode {
       ^~~~~~~
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(domain::VecExpr&&)
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVecAddExpr::getCoords()':
Domain.h:172:37: error: expected '(' before 'coords_'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
Domain.h:172:37: error: 'coords_' was not declared in this scope
Domain.h:172:37: note: suggested alternative: 'Coords'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
                                     Coords
Domain.h:172:44: error: expected ')' before ';' token
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                            ^
Domain.h: At global scope:
Domain.h:188:32: error: expected class-name before '{' token
 class Vector : public ToCode   {
                                ^
Domain.h:190:55: error: 'VecCtorType' has not been declared
  Vector(const Space& s, const coords::Vector* coords, VecCtorType tag) :
                                                       ^~~~~~~~~~~
Domain.h:207:2: error: 'VecCtorType' does not name a type; did you mean 'Vector'?
  VecCtorType tag_;
  ^~~~~~~~~~~
  Vector
Domain.h: In constructor 'domain::Vector::Vector(const domain::Space&, const coords::Vector*, int)':
Domain.h:191:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector'
   ToCoords(c), space_(&s), tag_(tag) {
   ^~~~~~~~
Domain.h:191:12: error: 'c' was not declared in this scope
   ToCoords(c), space_(&s), tag_(tag) {
            ^
Domain.h:191:28: error: class 'domain::Vector' does not have any field named 'tag_'
   ToCoords(c), space_(&s), tag_(tag) {
                            ^~~~
Domain.h: In member function 'bool domain::Vector::isLit()':
Domain.h:193:25: error: 'tag_' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
Domain.h:193:25: note: suggested alternative: 'tanl'
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
                         tanl
Domain.h:193:33: error: 'VEC_LIT' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                                 ^~~~~~~
Domain.h: In member function 'bool domain::Vector::isExpr()':
Domain.h:194:26: error: 'tag_' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
Domain.h:194:26: note: suggested alternative: 'tanl'
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
                          tanl
Domain.h:194:34: error: 'VEC_EXPR' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                                  ^~~~~~~~
Domain.h: In member function 'bool domain::Vector::isVar()':
Domain.h:195:25: error: 'tag_' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
Domain.h:195:25: note: suggested alternative: 'tanl'
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
                         tanl
Domain.h:195:33: error: 'VEC_VAR' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                                 ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector::getCoords() const':
Domain.h:200:30: error: expected '(' before 'coords_'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
Domain.h:200:30: error: 'coords_' was not declared in this scope
Domain.h:200:30: note: suggested alternative: 'ToCoords'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
                              ToCoords
Domain.h:200:37: error: expected ')' before ';' token
   return static_cast<Vector*>coords_;
                                     ^
Domain.h: In constructor 'domain::Vector_Lit::Vector_Lit(const domain::Space&, const coords::Vector*)':
Domain.h:215:16: error: 'VEC_LIT' was not declared in this scope
   Vector(s, c, VEC_LIT) {
                ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Lit::getCoords() const':
Domain.h:218:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
Domain.h:218:34: error: 'coords_' was not declared in this scope
Domain.h:218:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:218:41: error: expected ')' before ';' token
   return static_cast<Vector_Lit*>coords_;
                                         ^
Domain.h: In constructor 'domain::Vector_Expr::Vector_Expr(const domain::Space&, const coords::Vector*, domain::VecExpr*)':
Domain.h:234:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Expr'
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
   ^~~~~~~~
Domain.h:234:32: error: expected primary-expression before ',' token
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                ^
Domain.h:234:34: error: 'VEC_EXPR' was not declared in this scope
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                  ^~~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Expr::getCoords() const':
Domain.h:238:35: error: expected '(' before 'coords_'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
Domain.h:238:35: error: 'coords_' was not declared in this scope
Domain.h:238:35: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
                                   ToCoords
Domain.h:238:42: error: expected ')' before ';' token
   return static_cast<Vector_Expr*>coords_;
                                          ^
Domain.h: At global scope:
Domain.h:248:36: error: expected ';' after class definition
 class Vector_Var : public Vector {}
                                    ^
                                    ;
Domain.h:255:35: error: expected class-name before '{' token
 class Vector_Def : public ToCode  {
                                   ^
Domain.h:257:27: error: 'VecDef' in namespace 'coords' does not name a type
  Vector_Def(const coords::VecDef* c, const domain::VecIdent* identifier, const domain::VecExpr* expr):
                           ^~~~~~
Domain.h:259:16: error: 'VecDef' in namespace 'coords' does not name a type
  const coords::VecDef* getVarDecl() const {return ast_wrapper_; }
                ^~~~~~
Domain.h:269:16: error: 'VecDef' in namespace 'coords' does not name a type
  const coords::VecDef* ast_wrapper_;
                ^~~~~~
Domain.h: In constructor 'domain::Vector_Def::Vector_Def(const int*, const domain::VecIdent*, const domain::VecExpr*)':
Domain.h:258:4: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Def'
    ToCoords(c), identifier_(identifier), expr_(expr) {}
    ^~~~~~~~
Domain.h: In member function 'const coords::Vector_Def* domain::Vector_Def::getCoords() const':
Domain.h:263:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
Domain.h:263:34: error: 'coords_' was not declared in this scope
Domain.h:263:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:263:41: error: expected ')' before ';' token
   return static_cast<Vector_Def*>coords_;
                                         ^
In file included from Interpretation.h:10:0,
                 from Interpretation.cpp:13:
CoordsToDomain.h: At global scope:
CoordsToDomain.h:62:51: error: expected ',' or '...' before 'const'
  coords::Vector *getVector(domain::Vector_Expr* d const);
                                                   ^~~~~
CoordsToDomain.h:66:29: error: 'coords::VecDef' has not been declared
  void putVector_Def(coords::VecDef *vardecl_wrapper, domain::VecDef *b);
                             ^~~~~~
CoordsToDomain.h:67:22: error: expected ';' at end of member declaration
  domain::Vector_Def *getVecDef(coords::VecDef* c) const;
                      ^~~~~~~~~
CoordsToDomain.h:67:46: error: expected ')' before '*' token
  domain::Vector_Def *getVecDef(coords::VecDef* c) const;
                                              ^
CoordsToDomain.h:68:51: error: 'coords::Vector_Def* coords2domain::CoordsToDomain::getVecDef(domain::VecDef*) const' conflicts with a previous declaration
  coords::Vector_Def *getVecDef(domain::VecDef* d) const;
                                                   ^~~~~
CoordsToDomain.h:67:40: note: previous declaration 'domain::Vector_Def* coords2domain::CoordsToDomain::getVecDef'
  domain::Vector_Def *getVecDef(coords::VecDef* c) const;
                                        ^~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Interpretation.h:5,
                 from Interpretation.cpp:13:
/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of 'struct std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher>':
/usr/include/c++/7/type_traits:143:12:   required from 'struct std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> >'
/usr/include/c++/7/type_traits:154:31:   required from 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecIdent, domain::VecIdent*, coords::CoordsHasher>'
CoordsToDomain.h:85:81:   required from here
/usr/include/c++/7/bits/hashtable_policy.h:87:34: error: no match for call to '(const coords::CoordsHasher) (const coords::VecIdent&)'
  noexcept(declval<const _Hash&>()(declval<const _Key&>()))>
           ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/ios:39,
                 from /usr/include/c++/7/ostream:38,
                 from /usr/include/c++/7/iostream:39,
                 from Interpretation.h:4,
                 from Interpretation.cpp:13:
/usr/include/c++/7/type_traits: In instantiation of 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >':
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecIdent, domain::VecIdent*, coords::CoordsHasher>'
CoordsToDomain.h:85:81:   required from here
/usr/include/c++/7/type_traits:154:31: error: 'value' is not a member of 'std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> >'
     : public __bool_constant<!bool(_Pp::value)>
                               ^~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Interpretation.h:5,
                 from Interpretation.cpp:13:
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<coords::VecIdent, domain::VecIdent*, coords::CoordsHasher>':
CoordsToDomain.h:85:81:   required from here
/usr/include/c++/7/bits/unordered_map.h:103:66: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
                                                                  ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:110:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_type key_type;
                                             ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:111:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::value_type value_type;
                                               ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:112:48: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:113:43: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::hasher hasher;
                                           ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:114:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_equal key_equal;
                                              ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:115:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::allocator_type allocator_type;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:120:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::pointer  pointer;
                                             ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:121:50: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_pointer const_pointer;
                                                  ^~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:122:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::reference  reference;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:123:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_reference const_reference;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:124:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::iterator  iterator;
                                              ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:125:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_iterator const_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:126:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::local_iterator local_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:127:57: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_local_iterator const_local_iterator;
                                                         ^~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:128:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::size_type  size_type;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:129:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::difference_type difference_type;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:288:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       operator=(initializer_list<value_type> __l)
       ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:386:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  emplace(_Args&&... __args)
  ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:578:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:584:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(value_type&& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:591:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  insert(_Pair&& __x)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:657:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:953:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x)
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:957:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x) const
       ^~~~~~~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Interpretation.h:5,
                 from Interpretation.cpp:13:
/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of 'struct std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher>':
/usr/include/c++/7/type_traits:143:12:   required from 'struct std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> >'
/usr/include/c++/7/type_traits:154:31:   required from 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>'
CoordsToDomain.h:86:79:   required from here
/usr/include/c++/7/bits/hashtable_policy.h:87:34: error: no match for call to '(const coords::CoordsHasher) (const coords::VecExpr&)'
  noexcept(declval<const _Hash&>()(declval<const _Key&>()))>
           ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/ios:39,
                 from /usr/include/c++/7/ostream:38,
                 from /usr/include/c++/7/iostream:39,
                 from Interpretation.h:4,
                 from Interpretation.cpp:13:
/usr/include/c++/7/type_traits: In instantiation of 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >':
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>'
CoordsToDomain.h:86:79:   required from here
/usr/include/c++/7/type_traits:154:31: error: 'value' is not a member of 'std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> >'
     : public __bool_constant<!bool(_Pp::value)>
                               ^~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Interpretation.h:5,
                 from Interpretation.cpp:13:
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>':
CoordsToDomain.h:86:79:   required from here
/usr/include/c++/7/bits/unordered_map.h:103:66: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
                                                                  ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:110:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_type key_type;
                                             ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:111:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::value_type value_type;
                                               ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:112:48: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:113:43: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::hasher hasher;
                                           ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:114:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_equal key_equal;
                                              ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:115:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::allocator_type allocator_type;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:120:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::pointer  pointer;
                                             ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:121:50: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_pointer const_pointer;
                                                  ^~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:122:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::reference  reference;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:123:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_reference const_reference;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:124:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::iterator  iterator;
                                              ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:125:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_iterator const_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:126:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::local_iterator local_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:127:57: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_local_iterator const_local_iterator;
                                                         ^~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:128:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::size_type  size_type;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:129:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::difference_type difference_type;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:288:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       operator=(initializer_list<value_type> __l)
       ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:386:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
  emplace(_Args&&... __args)
  ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:578:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       insert(const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:584:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       insert(value_type&& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:591:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
  insert(_Pair&& __x)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:657:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       insert(initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:953:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       equal_range(const key_type& __x)
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:957:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       equal_range(const key_type& __x) const
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<coords::VecIdent, domain::Vector*, coords::CoordsHasher>':
CoordsToDomain.h:87:79:   required from here
/usr/include/c++/7/bits/unordered_map.h:103:66: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
                                                                  ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:110:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_type key_type;
                                             ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:111:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::value_type value_type;
                                               ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:112:48: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:113:43: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::hasher hasher;
                                           ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:114:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_equal key_equal;
                                              ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:115:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::allocator_type allocator_type;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:120:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::pointer  pointer;
                                             ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:121:50: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_pointer const_pointer;
                                                  ^~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:122:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::reference  reference;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:123:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_reference const_reference;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:124:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::iterator  iterator;
                                              ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:125:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_iterator const_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:126:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::local_iterator local_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:127:57: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_local_iterator const_local_iterator;
                                                         ^~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:128:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::size_type  size_type;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:129:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::difference_type difference_type;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:288:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       operator=(initializer_list<value_type> __l)
       ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:386:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  emplace(_Args&&... __args)
  ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:578:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:584:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(value_type&& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:591:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  insert(_Pair&& __x)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:657:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:953:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x)
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:957:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x) const
       ^~~~~~~~~~~
In file included from Interpretation.h:10:0,
                 from Interpretation.cpp:13:
CoordsToDomain.h:88:29: error: 'VecDef' is not a member of 'coords'
  std::unordered_map<coords::VecDef, domain::VecDef *, coords::CoordsHasher> interpVecDef;
                             ^~~~~~
CoordsToDomain.h:88:29: note: suggested alternative: 'Vector'
  std::unordered_map<coords::VecDef, domain::VecDef *, coords::CoordsHasher> interpVecDef;
                             ^~~~~~
                             Vector
CoordsToDomain.h:88:29: error: 'VecDef' is not a member of 'coords'
CoordsToDomain.h:88:29: note: suggested alternative: 'Vector'
  std::unordered_map<coords::VecDef, domain::VecDef *, coords::CoordsHasher> interpVecDef;
                             ^~~~~~
                             Vector
CoordsToDomain.h:88:75: error: template argument 1 is invalid
  std::unordered_map<coords::VecDef, domain::VecDef *, coords::CoordsHasher> interpVecDef;
                                                                           ^
CoordsToDomain.h:88:75: error: template argument 4 is invalid
CoordsToDomain.h:88:75: error: template argument 5 is invalid
In file included from Interpretation.cpp:13:0:
Interpretation.h: In member function 'domain::VecExpr* interp::Interpretation::getVecExpr(ast::VecExpr*)':
Interpretation.h:37:64: error: no matching function for call to 'coords::VecExpr::VecExpr(ast::VecExpr*&)'
         const coords::VecExpr *coords = new coords::VecExpr(ast);
                                                                ^
In file included from Interpretation.h:6:0,
                 from Interpretation.cpp:13:
Coords.h:82:3: note: candidate: coords::VecExpr::VecExpr(clang::Expr)
   VecExpr(const clang::Expr v);
   ^~~~~~~
Coords.h:82:3: note:   no known conversion for argument 1 from 'ast::VecExpr* {aka const clang::Expr*}' to 'clang::Expr'
Coords.h:80:7: note: candidate: constexpr coords::VecExpr::VecExpr(const coords::VecExpr&)
 class VecExpr : public Coords {
       ^~~~~~~
Coords.h:80:7: note:   no known conversion for argument 1 from 'ast::VecExpr* {aka const clang::Expr*}' to 'const coords::VecExpr&'
Coords.h:80:7: note: candidate: constexpr coords::VecExpr::VecExpr(coords::VecExpr&&)
Coords.h:80:7: note:   no known conversion for argument 1 from 'ast::VecExpr* {aka const clang::Expr*}' to 'coords::VecExpr&&'
In file included from Interpretation.cpp:13:0:
Interpretation.h:38:62: error: invalid conversion from 'const coords::VecExpr*' to 'coords::VecExpr*' [-fpermissive]
         domain::VecExpr* dom = coords2dom_->getVecExpr(coords);
                                                              ^
In file included from Interpretation.h:10:0,
                 from Interpretation.cpp:13:
CoordsToDomain.h:39:19: note:   initializing argument 1 of 'domain::VecExpr* coords2domain::CoordsToDomain::getVecExpr(coords::VecExpr*)'
  domain::VecExpr *getVecExpr(coords::VecExpr* c);
                   ^~~~~~~~~~
Interpretation.cpp: In member function 'void interp::Interpretation::mkVecIdent(ast::VecIdent*)':
Interpretation.cpp:37:41: error: invalid conversion from 'const coords::VecIdent*' to 'coords::VecIdent*' [-fpermissive]
     coords2dom_->putVecIdent(coords, dom);
                                         ^
In file included from Interpretation.h:10:0,
                 from Interpretation.cpp:13:
CoordsToDomain.h:33:7: note:   initializing argument 1 of 'void coords2domain::CoordsToDomain::putVecIdent(coords::VecIdent*, domain::VecIdent*)'
  void putVecIdent(coords::VecIdent *key, domain::VecIdent *i);
       ^~~~~~~~~~~
Interpretation.cpp: In member function 'void interp::Interpretation::mkVecVarExpr(ast::VecVarExpr*, clang::ASTContext*)':
Interpretation.cpp:54:37: error: 'class oracle::Oracle' has no member named 'getSpaceForVecVarExpr'; did you mean 'getSpaceForVecVarExp'?
     domain::Space& space = oracle_->getSpaceForVecVarExpr(ast);
                                     ^~~~~~~~~~~~~~~~~~~~~
                                     getSpaceForVecVarExp
Interpretation.cpp:55:71: error: no matching function for call to 'domain::Domain::mkVecVarExpr(domain::Space&, domain::VecVarExpr*&)'
     domain::VecVarExpr *dom_var = domain_->mkVecVarExpr(space, dom_var);
                                                                       ^
In file included from Oracle.h:7:0,
                 from Interpretation.h:8,
                 from Interpretation.cpp:13:
Domain.h:46:11: note: candidate: domain::VecExpr* domain::Domain::mkVecVarExpr(domain::Space&, const coords::VecVarExpr*)
  VecExpr* mkVecVarExpr(Space& s, const coords::VecVarExpr* ast);
           ^~~~~~~~~~~~
Domain.h:46:11: note:   no known conversion for argument 2 from 'domain::VecVarExpr*' to 'const coords::VecVarExpr*'
Domain.h:51:11: note: candidate: domain::VecExpr* domain::Domain::mkVecVarExpr(domain::Space&, const coords::VecLitExpr*)
  VecExpr* mkVecVarExpr(Space& s, const coords::VecLitExpr* e);  -- KEVIN
           ^~~~~~~~~~~~
Domain.h:51:11: note:   no known conversion for argument 2 from 'domain::VecVarExpr*' to 'const coords::VecLitExpr*'
Interpretation.cpp: In member function 'void interp::Interpretation::mkVecVecAddExpr(ast::VecVecAddExpr*, domain::VecExpr*, domain::VecExpr*)':
Interpretation.cpp:72:44: error: 'class domain::VecExpr' has no member named 'getCoords'; did you mean 'Coords'?
   const coords::VecExpr *mem_coords = mem->getCoords();
                                            ^~~~~~~~~
                                            Coords
Interpretation.cpp:73:44: error: 'class domain::VecExpr' has no member named 'getCoords'; did you mean 'Coords'?
   const coords::VecExpr *arg_coords = arg->getCoords();
                                            ^~~~~~~~~
                                            Coords
Interpretation.cpp:81:58: error: invalid conversion from 'const coords::Coords*' to 'coords::Coords*' [-fpermissive]
     new coords::VecVecAddExpr(ast, mem_coords, arg_coords);
                                                          ^
In file included from Interpretation.h:6:0,
                 from Interpretation.cpp:13:
Coords.h:107:3: note:   initializing argument 2 of 'coords::VecVecAddExpr::VecVecAddExpr(const clang::CXXMemberCallExpr*, coords::Coords*, coords::Coords*)'
   VecVecAddExpr(const clang::CXXMemberCallExpr *mce, coords::Coords *mem, coords::Coords *arg);
   ^~~~~~~~~~~~~
Interpretation.cpp:81:58: error: invalid conversion from 'const coords::Coords*' to 'coords::Coords*' [-fpermissive]
     new coords::VecVecAddExpr(ast, mem_coords, arg_coords);
                                                          ^
In file included from Interpretation.h:6:0,
                 from Interpretation.cpp:13:
Coords.h:107:3: note:   initializing argument 3 of 'coords::VecVecAddExpr::VecVecAddExpr(const clang::CXXMemberCallExpr*, coords::Coords*, coords::Coords*)'
   VecVecAddExpr(const clang::CXXMemberCallExpr *mce, coords::Coords *mem, coords::Coords *arg);
   ^~~~~~~~~~~~~
Interpretation.cpp:83:45: error: 'void ast2coords::ASTToCoords::overrideStmt(const clang::Stmt*, coords::Coords*)' is private within this context
   ast2coords_->overrideStmt(ast, stmt_coords);
                                             ^
In file included from Interpretation.h:7:0,
                 from Interpretation.cpp:13:
ASTToCoords.h:56:10: note: declared private here
     void overrideStmt(const clang::Stmt *s, coords::Coords *c);
          ^~~~~~~~~~~~
Interpretation.cpp:85:44: error: 'class domain::Domain' has no member named 'mkVecVecAddExpr'; did you mean 'mkVecVarExpr'?
   domain::VecExpr *dom_add_expr = domain_->mkVecVecAddExpr(space, stmt_coords, mem, arg);
                                            ^~~~~~~~~~~~~~~
                                            mkVecVarExpr
Interpretation.cpp:86:58: error: no matching function for call to 'coords2domain::CoordsToDomain::PutVecVecAddExpr(coords::VecVecAddExpr*&, domain::VecExpr*&)'
   coords2dom_->PutVecVecAddExpr(stmt_coords, dom_add_expr);
                                                          ^
In file included from Interpretation.h:10:0,
                 from Interpretation.cpp:13:
CoordsToDomain.h:50:7: note: candidate: void coords2domain::CoordsToDomain::PutVecVecAddExpr(coords::VecVarExpr*, domain::VecVecAddExpr*)
  void PutVecVecAddExpr(coords::VecVarExpr *n, domain::VecVecAddExpr *e);
       ^~~~~~~~~~~~~~~~
CoordsToDomain.h:50:7: note:   no known conversion for argument 1 from 'coords::VecVecAddExpr*' to 'coords::VecVarExpr*'
Interpretation.cpp: In member function 'void interp::Interpretation::mkVector_Lit(ast::Vector_Lit*, clang::ASTContext*)':
Interpretation.cpp:109:13: error: 'Space' is not a member of 'oracle'
     oracle::Space& space = oracle_->getSpaceForVector_Lit(ast); // infer?
             ^~~~~
Interpretation.cpp:109:13: note: suggested alternative: 'Oracle'
     oracle::Space& space = oracle_->getSpaceForVector_Lit(ast); // infer?
             ^~~~~
             Oracle
Interpretation.cpp:109:20: error: 'space' was not declared in this scope
     oracle::Space& space = oracle_->getSpaceForVector_Lit(ast); // infer?
                    ^~~~~
Interpretation.cpp:109:20: note: suggested alternative: 'isspace'
     oracle::Space& space = oracle_->getSpaceForVector_Lit(ast); // infer?
                    ^~~~~
                    isspace
Interpretation.cpp:109:37: error: 'class oracle::Oracle' has no member named 'getSpaceForVector_Lit'; did you mean 'getSpaceForVector'?
     oracle::Space& space = oracle_->getSpaceForVector_Lit(ast); // infer?
                                     ^~~~~~~~~~~~~~~~~~~~~
                                     getSpaceForVector
Interpretation.cpp:111:18: error: 'class coords2domain::CoordsToDomain' has no member named 'PutVecExpr'; did you mean 'getVecExpr'?
     coords2dom_->PutVecExpr(var_coords, dom_var);
                  ^~~~~~~~~~
                  getVecExpr
Interpretation.cpp: At global scope:
Interpretation.cpp:116:59: error: expected identifier before ',' token
 void Interpretation::mkVector_Expr(ast::Vector_Expr *ast, , domain::VecExpr* expr, clang::ASTContext *c) {
                                                           ^
Interpretation.cpp:116:6: error: prototype for 'void interp::Interpretation::mkVector_Expr(ast::Vector_Expr*, int, domain::VecExpr*, clang::ASTContext*)' does not match any in class 'interp::Interpretation'
 void Interpretation::mkVector_Expr(ast::Vector_Expr *ast, , domain::VecExpr* expr, clang::ASTContext *c) {
      ^~~~~~~~~~~~~~
In file included from Interpretation.cpp:13:0:
Interpretation.h:26:10: error: candidate is: void interp::Interpretation::mkVector_Expr(ast::VecLitExpr*, clang::ASTContext*)
     void mkVector_Expr(ast::VecLitExpr *ast, clang::ASTContext *context);
          ^~~~~~~~~~~~~
Interpretation.cpp: In member function 'void interp::Interpretation::mkVecDef(ast::VecDef*, domain::VecIdent*, domain::VecExpr*)':
Interpretation.cpp:128:10: warning: the address of 'double exp(double)' will never be NULL [-Waddress]
     if (!exp || !id) { std::cerr << "Interpretation::mkVecDef: null arg\n"; }
          ^~~
Interpretation.cpp:133:46: error: 'class domain::VecExpr' has no member named 'getCoords'; did you mean 'Coords'?
     const coords::VecExpr *vec_coords = vec->getCoords();
                                              ^~~~~~~~~
                                              Coords
Interpretation.cpp:134:13: error: 'VecDef' is not a member of 'coords'
     coords::VecDef *def_coords = new coords::VecDef(ast, id_coords, vec_coords);
             ^~~~~~
Interpretation.cpp:134:13: note: suggested alternative: 'Vector'
     coords::VecDef *def_coords = new coords::VecDef(ast, id_coords, vec_coords);
             ^~~~~~
             Vector
Interpretation.cpp:134:21: error: 'def_coords' was not declared in this scope
     coords::VecDef *def_coords = new coords::VecDef(ast, id_coords, vec_coords);
                     ^~~~~~~~~~
Interpretation.cpp:134:21: note: suggested alternative: 'vec_coords'
     coords::VecDef *def_coords = new coords::VecDef(ast, id_coords, vec_coords);
                     ^~~~~~~~~~
                     vec_coords
Interpretation.cpp:134:38: error: expected type-specifier
     coords::VecDef *def_coords = new coords::VecDef(ast, id_coords, vec_coords);
                                      ^~~~~~
Interpretation.cpp:137:40: error: 'class domain::Domain' has no member named 'putVector_Def'; did you mean 'mkVector_Lit'?
     domain::VecDef *vec_def = domain_->putVector_Def(bind_coords, id, exp);
                                        ^~~~~~~~~~~~~
                                        mkVector_Lit
Interpretation.cpp:137:54: error: 'bind_coords' was not declared in this scope
     domain::VecDef *vec_def = domain_->putVector_Def(bind_coords, id, exp);
                                                      ^~~~~~~~~~~
Interpretation.cpp:137:54: note: suggested alternative: 'id_coords'
     domain::VecDef *vec_def = domain_->putVector_Def(bind_coords, id, exp);
                                                      ^~~~~~~~~~~
                                                      id_coords
Interpretation.cpp:142:62: error: 'const class coords::VecIdent' has no member named 'get'
             << " wrapped addr is " << std::hex << id_coords->get() << "\n";
                                                              ^~~
Interpretation.cpp:144:16: error: 'const class coords::VecIdent' has no member named 'get'
     id_coords->get()->dump();
                ^~~
Interpretation.cpp:133:28: warning: unused variable 'vec_coords' [-Wunused-variable]
     const coords::VecExpr *vec_coords = vec->getCoords();
                            ^~~~~~~~~~
Interpretation.cpp: In member function 'const coords::VecExpr* interp::Interpretation::getCoords(ast::VecExpr*)':
Interpretation.cpp:153:25: error: 'class ast2coords::ASTToCoords' has no member named 'getCoords'; did you mean 'ASTToCoords'?
     return ast2coords_->getCoords(expr);
                         ^~~~~~~~~
                         ASTToCoords
In file included from /usr/include/c++/7/vector:64:0,
                 from /llvm/include/llvm/ADT/ArrayRef.h:25,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Interpretation.h:5,
                 from Interpretation.cpp:13:
/usr/include/c++/7/bits/stl_vector.h: In instantiation of 'std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = domain::VecDef; _Alloc = std::allocator<domain::VecDef>]':
/usr/include/c++/7/bits/stl_vector.h:263:15:   required from 'std::vector<_Tp, _Alloc>::vector() [with _Tp = domain::VecDef; _Alloc = std::allocator<domain::VecDef>]'
Domain.h:38:7:   required from here
/usr/include/c++/7/bits/stl_vector.h:163:9: error: invalid use of incomplete type 'class domain::VecDef'
       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         - this->_M_impl._M_start); }
         ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from Oracle.h:7:0,
                 from Interpretation.h:8,
                 from Interpretation.cpp:13:
Domain.h:34:7: note: forward declaration of 'class domain::VecDef'
 class VecDef;
       ^~~~~~
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Interpretation.h:5,
                 from Interpretation.cpp:13:
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = domain::VecDef*]':
/usr/include/c++/7/bits/stl_construct.h:206:15:   required from 'void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = domain::VecDef*; _Tp = domain::VecDef]'
/usr/include/c++/7/bits/stl_vector.h:434:22:   required from 'std::vector<_Tp, _Alloc>::~vector() [with _Tp = domain::VecDef; _Alloc = std::allocator<domain::VecDef>]'
Domain.h:38:7:   required from here
/usr/include/c++/7/bits/stl_construct.h:133:7: error: static assertion failed: value type is destructible
       static_assert(is_destructible<_Value_type>::value,
       ^~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_construct.h:137:11: error: invalid use of incomplete type 'std::iterator_traits<domain::VecDef*>::value_type {aka class domain::VecDef}'
       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  __destroy(__first, __last);
  ~~~~~~~~~^~~~~~~~~~~~~~~~~
In file included from Oracle.h:7:0,
                 from Interpretation.h:8,
                 from Interpretation.cpp:13:
Domain.h:34:7: note: forward declaration of 'std::iterator_traits<domain::VecDef*>::value_type {aka class domain::VecDef}'
 class VecDef;
       ^~~~~~
In file included from Oracle.h:7:0,
                 from Oracle.cpp:4:
Domain.h:51:65: error: expected unqualified-id before '--' token
  VecExpr* mkVecVarExpr(Space& s, const coords::VecLitExpr* e);  -- KEVIN
                                                                 ^~
Domain.h:61:33: error: 'VecDef' in namespace 'coords' does not name a type
  VecDef& mkVecDef(const coords::VecDef* vardecl, const VecIdent* identifier, const VecExpr* expression);
                                 ^~~~~~
Domain.h:101:2: error: 'ToCoordscoords' does not name a type; did you mean 'ToCoords'?
  ToCoordscoords::Coords *c) : coords_(c) {}
  ^~~~~~~~~~~~~~
  ToCoords
Domain.h:105:2: error: expected ';' after class definition
 }
  ^
  ;
Domain.h:111:32: error: expected class-name before '{' token
 class VecIdent : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecIdent::VecIdent(domain::Space&, const coords::VecIdent*)':
Domain.h:113:54: error: type 'domain::ToCoords' is not a direct base of 'domain::VecIdent'
  VecIdent(Space& space, const coords::VecIdent* c) : ToCoords(c), space_(&space) {}
                                                      ^~~~~~~~
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:21: error: expected '<' before '<:' token
   return static_cast<:VecIdent*>getBaseCoords();
                     ^~
Domain.h:116:21: error: expected type-specifier before '<:' token
Domain.h:116:21: error: expected '>' before '<:' token
Domain.h:116:21: error: expected '(' before '<:' token
Domain.h:116:23: error: capture of non-variable 'domain::VecIdent::VecIdent' 
   return static_cast<:VecIdent*>getBaseCoords();
                       ^~~~~~~~
Domain.h:111:32: note: 'class domain::VecIdent domain::VecIdent::VecIdent' declared here
 class VecIdent : public ToCode {
                                ^
Domain.h:116:31: error: expected ',' before '*' token
   return static_cast<:VecIdent*>getBaseCoords();
                               ^
Domain.h:116:31: error: expected identifier before '*' token
Domain.h:116:48: error: expected ']' before ';' token
   return static_cast<:VecIdent*>getBaseCoords();
                                                ^
Domain.h: In lambda function:
Domain.h:116:48: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:48: error: expected ')' before ';' token
Domain.h: At global scope:
Domain.h:125:32: error: expected class-name before '{' token
 class VecExpr  : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)':
Domain.h:127:57: error: type 'domain::ToCoords' is not a direct base of 'domain::VecExpr'
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
                                                         ^~~~~~~~
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:21: error: expected '<' before '<:' token
   return static_cast<:VecExpr*>getBaseCoords();
                     ^~
Domain.h:129:21: error: expected type-specifier before '<:' token
Domain.h:129:21: error: expected '>' before '<:' token
Domain.h:129:21: error: expected '(' before '<:' token
Domain.h:129:23: error: capture of non-variable 'domain::VecExpr::VecExpr' 
   return static_cast<:VecExpr*>getBaseCoords();
                       ^~~~~~~
Domain.h:125:32: note: 'class domain::VecExpr domain::VecExpr::VecExpr' declared here
 class VecExpr  : public ToCode {
                                ^
Domain.h:129:30: error: expected ',' before '*' token
   return static_cast<:VecExpr*>getBaseCoords();
                              ^
Domain.h:129:30: error: expected identifier before '*' token
Domain.h:129:47: error: expected ']' before ';' token
   return static_cast<:VecExpr*>getBaseCoords();
                                               ^
Domain.h: In lambda function:
Domain.h:129:47: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:47: error: expected ')' before ';' token
Domain.h: In member function 'virtual std::__cxx11::string domain::VecExpr::toString() const':
Domain.h:133:7: error: 'ast_' was not declared in this scope
   if (ast_ != NULL) {
       ^~~~
Domain.h:133:7: note: suggested alternative: 'asin'
   if (ast_ != NULL) {
       ^~~~
       asin
Domain.h: At global scope:
Domain.h:147:37: error: expected ';' after class definition
 class VecLitExpr : public VecExpr {}
                                     ^
                                     ;
Domain.h: In member function 'virtual std::__cxx11::string domain::VecVarExpr::toString() const':
Domain.h:154:16: error: 'ast_' was not declared in this scope
   return "(" + ast_->toString() + " )";
                ^~~~
Domain.h:154:16: note: suggested alternative: 'asin'
   return "(" + ast_->toString() + " )";
                ^~~~
                asin
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVarExpr::getCoords()':
Domain.h:157:34: error: expected '(' before 'coords_'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
Domain.h:157:34: error: 'coords_' was not declared in this scope
Domain.h:157:34: note: suggested alternative: 'Coords'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
                                  Coords
Domain.h:157:41: error: expected ')' before ';' token
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                         ^
Domain.h: At global scope:
Domain.h:166:33: error: 'VecAddAddExpr' in namespace 'coords' does not name a type
         Space& s, const coords::VecAddAddExpr* c, domain::VecExpr *mem, domain::VecExpr *arg) :
                                 ^~~~~~~~~~~~~
Domain.h: In constructor 'domain::VecVecAddExpr::VecVecAddExpr(domain::Space&, const int*, domain::VecExpr*, domain::VecExpr*)':
Domain.h:167:46: error: no matching function for call to 'domain::VecExpr::VecExpr(domain::Space&, const int*&)'
    domain::VecExpr(s, c), arg_(arg), mem_(mem) {
                                              ^
Domain.h:127:5: note: candidate: domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
     ^~~~~~~
Domain.h:127:5: note:   no known conversion for argument 2 from 'const int*' to 'const coords::VecExpr*'
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(const domain::VecExpr&)
 class VecExpr  : public ToCode {
       ^~~~~~~
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(domain::VecExpr&&)
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVecAddExpr::getCoords()':
Domain.h:172:37: error: expected '(' before 'coords_'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
Domain.h:172:37: error: 'coords_' was not declared in this scope
Domain.h:172:37: note: suggested alternative: 'Coords'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
                                     Coords
Domain.h:172:44: error: expected ')' before ';' token
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                            ^
Domain.h: At global scope:
Domain.h:188:32: error: expected class-name before '{' token
 class Vector : public ToCode   {
                                ^
Domain.h:190:55: error: 'VecCtorType' has not been declared
  Vector(const Space& s, const coords::Vector* coords, VecCtorType tag) :
                                                       ^~~~~~~~~~~
Domain.h:207:2: error: 'VecCtorType' does not name a type; did you mean 'Vector'?
  VecCtorType tag_;
  ^~~~~~~~~~~
  Vector
Domain.h: In constructor 'domain::Vector::Vector(const domain::Space&, const coords::Vector*, int)':
Domain.h:191:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector'
   ToCoords(c), space_(&s), tag_(tag) {
   ^~~~~~~~
Domain.h:191:12: error: 'c' was not declared in this scope
   ToCoords(c), space_(&s), tag_(tag) {
            ^
Domain.h:191:28: error: class 'domain::Vector' does not have any field named 'tag_'
   ToCoords(c), space_(&s), tag_(tag) {
                            ^~~~
Domain.h: In member function 'bool domain::Vector::isLit()':
Domain.h:193:25: error: 'tag_' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
Domain.h:193:25: note: suggested alternative: 'tanl'
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
                         tanl
Domain.h:193:33: error: 'VEC_LIT' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                                 ^~~~~~~
Domain.h: In member function 'bool domain::Vector::isExpr()':
Domain.h:194:26: error: 'tag_' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
Domain.h:194:26: note: suggested alternative: 'tanl'
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
                          tanl
Domain.h:194:34: error: 'VEC_EXPR' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                                  ^~~~~~~~
Domain.h: In member function 'bool domain::Vector::isVar()':
Domain.h:195:25: error: 'tag_' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
Domain.h:195:25: note: suggested alternative: 'tanl'
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
                         tanl
Domain.h:195:33: error: 'VEC_VAR' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                                 ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector::getCoords() const':
Domain.h:200:30: error: expected '(' before 'coords_'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
Domain.h:200:30: error: 'coords_' was not declared in this scope
Domain.h:200:30: note: suggested alternative: 'ToCoords'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
                              ToCoords
Domain.h:200:37: error: expected ')' before ';' token
   return static_cast<Vector*>coords_;
                                     ^
Domain.h: In constructor 'domain::Vector_Lit::Vector_Lit(const domain::Space&, const coords::Vector*)':
Domain.h:215:16: error: 'VEC_LIT' was not declared in this scope
   Vector(s, c, VEC_LIT) {
                ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Lit::getCoords() const':
Domain.h:218:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
Domain.h:218:34: error: 'coords_' was not declared in this scope
Domain.h:218:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:218:41: error: expected ')' before ';' token
   return static_cast<Vector_Lit*>coords_;
                                         ^
Domain.h: In constructor 'domain::Vector_Expr::Vector_Expr(const domain::Space&, const coords::Vector*, domain::VecExpr*)':
Domain.h:234:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Expr'
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
   ^~~~~~~~
Domain.h:234:32: error: expected primary-expression before ',' token
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                ^
Domain.h:234:34: error: 'VEC_EXPR' was not declared in this scope
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                  ^~~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Expr::getCoords() const':
Domain.h:238:35: error: expected '(' before 'coords_'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
Domain.h:238:35: error: 'coords_' was not declared in this scope
Domain.h:238:35: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
                                   ToCoords
Domain.h:238:42: error: expected ')' before ';' token
   return static_cast<Vector_Expr*>coords_;
                                          ^
Domain.h: At global scope:
Domain.h:248:36: error: expected ';' after class definition
 class Vector_Var : public Vector {}
                                    ^
                                    ;
Domain.h:255:35: error: expected class-name before '{' token
 class Vector_Def : public ToCode  {
                                   ^
Domain.h:257:27: error: 'VecDef' in namespace 'coords' does not name a type
  Vector_Def(const coords::VecDef* c, const domain::VecIdent* identifier, const domain::VecExpr* expr):
                           ^~~~~~
Domain.h:259:16: error: 'VecDef' in namespace 'coords' does not name a type
  const coords::VecDef* getVarDecl() const {return ast_wrapper_; }
                ^~~~~~
Domain.h:269:16: error: 'VecDef' in namespace 'coords' does not name a type
  const coords::VecDef* ast_wrapper_;
                ^~~~~~
Domain.h: In constructor 'domain::Vector_Def::Vector_Def(const int*, const domain::VecIdent*, const domain::VecExpr*)':
Domain.h:258:4: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Def'
    ToCoords(c), identifier_(identifier), expr_(expr) {}
    ^~~~~~~~
Domain.h: In member function 'const coords::Vector_Def* domain::Vector_Def::getCoords() const':
Domain.h:263:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
Domain.h:263:34: error: 'coords_' was not declared in this scope
Domain.h:263:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:263:41: error: expected ')' before ';' token
   return static_cast<Vector_Def*>coords_;
                                         ^
In file included from Checker.h:4:0,
                 from Checker.cpp:9:
Domain.h:51:65: error: expected unqualified-id before '--' token
  VecExpr* mkVecVarExpr(Space& s, const coords::VecLitExpr* e);  -- KEVIN
                                                                 ^~
Domain.h:61:33: error: 'VecDef' in namespace 'coords' does not name a type
  VecDef& mkVecDef(const coords::VecDef* vardecl, const VecIdent* identifier, const VecExpr* expression);
                                 ^~~~~~
Domain.h:101:2: error: 'ToCoordscoords' does not name a type; did you mean 'ToCoords'?
  ToCoordscoords::Coords *c) : coords_(c) {}
  ^~~~~~~~~~~~~~
  ToCoords
Domain.h:105:2: error: expected ';' after class definition
 }
  ^
  ;
Domain.h:111:32: error: expected class-name before '{' token
 class VecIdent : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecIdent::VecIdent(domain::Space&, const coords::VecIdent*)':
Domain.h:113:54: error: type 'domain::ToCoords' is not a direct base of 'domain::VecIdent'
  VecIdent(Space& space, const coords::VecIdent* c) : ToCoords(c), space_(&space) {}
                                                      ^~~~~~~~
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:21: error: expected '<' before '<:' token
   return static_cast<:VecIdent*>getBaseCoords();
                     ^~
Domain.h:116:21: error: expected type-specifier before '<:' token
Domain.h:116:21: error: expected '>' before '<:' token
Domain.h:116:21: error: expected '(' before '<:' token
Domain.h:116:23: error: capture of non-variable 'domain::VecIdent::VecIdent' 
   return static_cast<:VecIdent*>getBaseCoords();
                       ^~~~~~~~
Domain.h:111:32: note: 'class domain::VecIdent domain::VecIdent::VecIdent' declared here
 class VecIdent : public ToCode {
                                ^
Domain.h:116:31: error: expected ',' before '*' token
   return static_cast<:VecIdent*>getBaseCoords();
                               ^
Domain.h:116:31: error: expected identifier before '*' token
Domain.h:116:48: error: expected ']' before ';' token
   return static_cast<:VecIdent*>getBaseCoords();
                                                ^
Domain.h: In lambda function:
Domain.h:116:48: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:48: error: expected ')' before ';' token
Domain.h: At global scope:
Domain.h:125:32: error: expected class-name before '{' token
 class VecExpr  : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)':
Domain.h:127:57: error: type 'domain::ToCoords' is not a direct base of 'domain::VecExpr'
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
                                                         ^~~~~~~~
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:21: error: expected '<' before '<:' token
   return static_cast<:VecExpr*>getBaseCoords();
                     ^~
Domain.h:129:21: error: expected type-specifier before '<:' token
Domain.h:129:21: error: expected '>' before '<:' token
Domain.h:129:21: error: expected '(' before '<:' token
Domain.h:129:23: error: capture of non-variable 'domain::VecExpr::VecExpr' 
   return static_cast<:VecExpr*>getBaseCoords();
                       ^~~~~~~
Domain.h:125:32: note: 'class domain::VecExpr domain::VecExpr::VecExpr' declared here
 class VecExpr  : public ToCode {
                                ^
Domain.h:129:30: error: expected ',' before '*' token
   return static_cast<:VecExpr*>getBaseCoords();
                              ^
Domain.h:129:30: error: expected identifier before '*' token
Domain.h:129:47: error: expected ']' before ';' token
   return static_cast<:VecExpr*>getBaseCoords();
                                               ^
Domain.h: In lambda function:
Domain.h:129:47: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:47: error: expected ')' before ';' token
Domain.h: In member function 'virtual std::__cxx11::string domain::VecExpr::toString() const':
Domain.h:133:7: error: 'ast_' was not declared in this scope
   if (ast_ != NULL) {
       ^~~~
Domain.h:133:7: note: suggested alternative: 'asin'
   if (ast_ != NULL) {
       ^~~~
       asin
Domain.h: At global scope:
Domain.h:147:37: error: expected ';' after class definition
 class VecLitExpr : public VecExpr {}
                                     ^
                                     ;
Domain.h: In member function 'virtual std::__cxx11::string domain::VecVarExpr::toString() const':
Domain.h:154:16: error: 'ast_' was not declared in this scope
   return "(" + ast_->toString() + " )";
                ^~~~
Domain.h:154:16: note: suggested alternative: 'asin'
   return "(" + ast_->toString() + " )";
                ^~~~
                asin
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVarExpr::getCoords()':
Domain.h:157:34: error: expected '(' before 'coords_'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
Domain.h:157:34: error: 'coords_' was not declared in this scope
Domain.h:157:34: note: suggested alternative: 'Coords'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
                                  Coords
Domain.h:157:41: error: expected ')' before ';' token
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                         ^
Domain.h: At global scope:
Domain.h:166:33: error: 'VecAddAddExpr' in namespace 'coords' does not name a type
         Space& s, const coords::VecAddAddExpr* c, domain::VecExpr *mem, domain::VecExpr *arg) :
                                 ^~~~~~~~~~~~~
Domain.h: In constructor 'domain::VecVecAddExpr::VecVecAddExpr(domain::Space&, const int*, domain::VecExpr*, domain::VecExpr*)':
Domain.h:167:46: error: no matching function for call to 'domain::VecExpr::VecExpr(domain::Space&, const int*&)'
    domain::VecExpr(s, c), arg_(arg), mem_(mem) {
                                              ^
Domain.h:127:5: note: candidate: domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
     ^~~~~~~
Domain.h:127:5: note:   no known conversion for argument 2 from 'const int*' to 'const coords::VecExpr*'
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(const domain::VecExpr&)
 class VecExpr  : public ToCode {
       ^~~~~~~
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(domain::VecExpr&&)
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVecAddExpr::getCoords()':
Domain.h:172:37: error: expected '(' before 'coords_'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
Domain.h:172:37: error: 'coords_' was not declared in this scope
Domain.h:172:37: note: suggested alternative: 'Coords'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
                                     Coords
Domain.h:172:44: error: expected ')' before ';' token
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                            ^
Domain.h: At global scope:
Domain.h:188:32: error: expected class-name before '{' token
 class Vector : public ToCode   {
                                ^
Domain.h:190:55: error: 'VecCtorType' has not been declared
  Vector(const Space& s, const coords::Vector* coords, VecCtorType tag) :
                                                       ^~~~~~~~~~~
Domain.h:207:2: error: 'VecCtorType' does not name a type; did you mean 'Vector'?
  VecCtorType tag_;
  ^~~~~~~~~~~
  Vector
Domain.h: In constructor 'domain::Vector::Vector(const domain::Space&, const coords::Vector*, int)':
Domain.h:191:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector'
   ToCoords(c), space_(&s), tag_(tag) {
   ^~~~~~~~
Domain.h:191:12: error: 'c' was not declared in this scope
   ToCoords(c), space_(&s), tag_(tag) {
            ^
Domain.h:191:28: error: class 'domain::Vector' does not have any field named 'tag_'
   ToCoords(c), space_(&s), tag_(tag) {
                            ^~~~
Domain.h: In member function 'bool domain::Vector::isLit()':
Domain.h:193:25: error: 'tag_' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
Domain.h:193:25: note: suggested alternative: 'tanl'
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
                         tanl
Domain.h:193:33: error: 'VEC_LIT' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                                 ^~~~~~~
Domain.h: In member function 'bool domain::Vector::isExpr()':
Domain.h:194:26: error: 'tag_' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
Domain.h:194:26: note: suggested alternative: 'tanl'
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
                          tanl
Domain.h:194:34: error: 'VEC_EXPR' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                                  ^~~~~~~~
Domain.h: In member function 'bool domain::Vector::isVar()':
Domain.h:195:25: error: 'tag_' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
Domain.h:195:25: note: suggested alternative: 'tanl'
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
                         tanl
Domain.h:195:33: error: 'VEC_VAR' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                                 ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector::getCoords() const':
Domain.h:200:30: error: expected '(' before 'coords_'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
Domain.h:200:30: error: 'coords_' was not declared in this scope
Domain.h:200:30: note: suggested alternative: 'ToCoords'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
                              ToCoords
Domain.h:200:37: error: expected ')' before ';' token
   return static_cast<Vector*>coords_;
                                     ^
Domain.h: In constructor 'domain::Vector_Lit::Vector_Lit(const domain::Space&, const coords::Vector*)':
Domain.h:215:16: error: 'VEC_LIT' was not declared in this scope
   Vector(s, c, VEC_LIT) {
                ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Lit::getCoords() const':
Domain.h:218:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
Domain.h:218:34: error: 'coords_' was not declared in this scope
Domain.h:218:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:218:41: error: expected ')' before ';' token
   return static_cast<Vector_Lit*>coords_;
                                         ^
Domain.h: In constructor 'domain::Vector_Expr::Vector_Expr(const domain::Space&, const coords::Vector*, domain::VecExpr*)':
Domain.h:234:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Expr'
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
   ^~~~~~~~
Domain.h:234:32: error: expected primary-expression before ',' token
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                ^
Domain.h:234:34: error: 'VEC_EXPR' was not declared in this scope
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                  ^~~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Expr::getCoords() const':
Domain.h:238:35: error: expected '(' before 'coords_'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
Domain.h:238:35: error: 'coords_' was not declared in this scope
Domain.h:238:35: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
                                   ToCoords
Domain.h:238:42: error: expected ')' before ';' token
   return static_cast<Vector_Expr*>coords_;
                                          ^
Domain.h: At global scope:
Domain.h:248:36: error: expected ';' after class definition
 class Vector_Var : public Vector {}
                                    ^
                                    ;
Domain.h:255:35: error: expected class-name before '{' token
 class Vector_Def : public ToCode  {
                                   ^
Domain.h:257:27: error: 'VecDef' in namespace 'coords' does not name a type
  Vector_Def(const coords::VecDef* c, const domain::VecIdent* identifier, const domain::VecExpr* expr):
                           ^~~~~~
Domain.h:259:16: error: 'VecDef' in namespace 'coords' does not name a type
  const coords::VecDef* getVarDecl() const {return ast_wrapper_; }
                ^~~~~~
Domain.h:269:16: error: 'VecDef' in namespace 'coords' does not name a type
  const coords::VecDef* ast_wrapper_;
                ^~~~~~
Domain.h: In constructor 'domain::Vector_Def::Vector_Def(const int*, const domain::VecIdent*, const domain::VecExpr*)':
Domain.h:258:4: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Def'
    ToCoords(c), identifier_(identifier), expr_(expr) {}
    ^~~~~~~~
Domain.h: In member function 'const coords::Vector_Def* domain::Vector_Def::getCoords() const':
Domain.h:263:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
Domain.h:263:34: error: 'coords_' was not declared in this scope
Domain.h:263:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:263:41: error: expected ')' before ';' token
   return static_cast<Vector_Def*>coords_;
                                         ^
ASTToCoords.cpp: In member function 'coords::VecIdent* ast2coords::ASTToCoords::mkVecIdent(ast::VecIdent*)':
ASTToCoords.cpp:7:27: error: no matching function for call to 'ast2coords::ASTToCoords::overrideStmt(ast::VecIdent*&, coords::VecIdent*&)'
     overrideStmt(ast,coord);                          // TO DO Canonicalize
                           ^
In file included from ASTToCoords.cpp:1:0:
ASTToCoords.h:56:10: note: candidate: void ast2coords::ASTToCoords::overrideStmt(const clang::Stmt*, coords::Coords*)
     void overrideStmt(const clang::Stmt *s, coords::Coords *c);
          ^~~~~~~~~~~~
ASTToCoords.h:56:10: note:   no known conversion for argument 1 from 'ast::VecIdent* {aka const clang::VarDecl*}' to 'const clang::Stmt*'
ASTToCoords.cpp: At global scope:
ASTToCoords.cpp:11:64: error: no 'coords::VecExpr* ast2coords::ASTToCoords::mkVecExpr(ast::VecExpr*)' member function declared in class 'ast2coords::ASTToCoords'
 coords::VecExpr *ASTToCoords::mkVecExpr(const ast::VecExpr *ast) {
                                                                ^
ASTToCoords.cpp:17:73: error: no 'coords::VecLitExpr* ast2coords::ASTToCoords::mkVecLitExpr(ast::VecLitExpr*)' member function declared in class 'ast2coords::ASTToCoords'
 coords::VecLitExpr *ASTToCoords::mkVecLitExpr(const ast::VecLitExpr *ast) {
                                                                         ^
ASTToCoords.cpp: In member function 'coords::VecVarExpr* ast2coords::ASTToCoords::mkVecVarExpr(ast::VecVarExpr*)':
ASTToCoords.cpp:26:22: error: 'coord' was not declared in this scope
     overrideStmt(ast,coord);                          // TO DO Canonicalize
                      ^~~~~
ASTToCoords.cpp:25:25: warning: unused variable 'c' [-Wunused-variable]
     coords::VecVarExpr *c = new coords::VecVarExpr(ast);
                         ^
ASTToCoords.cpp: In member function 'coords::VecVecAddExpr* ast2coords::ASTToCoords::mkVecVecAddExpr(ast::VecVecAddExpr*)':
ASTToCoords.cpp:31:61: error: no matching function for call to 'coords::VecVecAddExpr::VecVecAddExpr(ast::VecVecAddExpr*&)'
     coords::VecVecAddExpr *c = new coords::VecVecAddExpr(ast);
                                                             ^
In file included from ASTToCoords.h:6:0,
                 from ASTToCoords.cpp:1:
Coords.h:107:3: note: candidate: coords::VecVecAddExpr::VecVecAddExpr(const clang::CXXMemberCallExpr*, coords::Coords*, coords::Coords*)
   VecVecAddExpr(const clang::CXXMemberCallExpr *mce, coords::Coords *mem, coords::Coords *arg);
   ^~~~~~~~~~~~~
Coords.h:107:3: note:   candidate expects 3 arguments, 1 provided
Coords.h:105:7: note: candidate: constexpr coords::VecVecAddExpr::VecVecAddExpr(const coords::VecVecAddExpr&)
 class VecVecAddExpr : public VecExpr {
       ^~~~~~~~~~~~~
Coords.h:105:7: note:   no known conversion for argument 1 from 'ast::VecVecAddExpr* {aka const clang::CXXMemberCallExpr*}' to 'const coords::VecVecAddExpr&'
Coords.h:105:7: note: candidate: constexpr coords::VecVecAddExpr::VecVecAddExpr(coords::VecVecAddExpr&&)
Coords.h:105:7: note:   no known conversion for argument 1 from 'ast::VecVecAddExpr* {aka const clang::CXXMemberCallExpr*}' to 'coords::VecVecAddExpr&&'
ASTToCoords.cpp:32:22: error: 'coord' was not declared in this scope
     overrideStmt(ast,coord);                          // TO DO Canonicalize
                      ^~~~~
ASTToCoords.cpp:31:28: warning: unused variable 'c' [-Wunused-variable]
     coords::VecVecAddExpr *c = new coords::VecVecAddExpr(ast);
                            ^
ASTToCoords.cpp: At global scope:
ASTToCoords.cpp:36:59: error: no 'coords::Vector* ast2coords::ASTToCoords::Vector(ast::Vector*)' member function declared in class 'ast2coords::ASTToCoords'
 coords::Vector *ASTToCoords::Vector(const ast::Vector *ast) {
                                                           ^
ASTToCoords.cpp: In member function 'coords::Vector_Lit* ast2coords::ASTToCoords::mkVector_Lit(ast::Vector_Lit*)':
ASTToCoords.cpp:43:55: error: no matching function for call to 'coords::Vector_Lit::Vector_Lit(ast::Vector_Lit*&)'
     coords::Vector_Lit *c = new coords::Vector_Lit(ast);
                                                       ^
In file included from ASTToCoords.h:6:0,
                 from ASTToCoords.cpp:1:
Coords.h:131:3: note: candidate: coords::Vector_Lit::Vector_Lit(clang::CXXConstructExpr*, float, float, float)
   Vector_Lit(clang::CXXConstructExpr* ast, float x, float y, float z);
   ^~~~~~~~~~
Coords.h:131:3: note:   candidate expects 4 arguments, 1 provided
Coords.h:129:7: note: candidate: constexpr coords::Vector_Lit::Vector_Lit(const coords::Vector_Lit&)
 class Vector_Lit : public Vector {
       ^~~~~~~~~~
Coords.h:129:7: note:   no known conversion for argument 1 from 'ast::Vector_Lit* {aka const clang::CXXConstructExpr*}' to 'const coords::Vector_Lit&'
Coords.h:129:7: note: candidate: constexpr coords::Vector_Lit::Vector_Lit(coords::Vector_Lit&&)
Coords.h:129:7: note:   no known conversion for argument 1 from 'ast::Vector_Lit* {aka const clang::CXXConstructExpr*}' to 'coords::Vector_Lit&&'
ASTToCoords.cpp:44:22: error: 'coord' was not declared in this scope
     overrideStmt(ast,coord);                          // TO DO Canonicalize
                      ^~~~~
ASTToCoords.cpp:43:25: warning: unused variable 'c' [-Wunused-variable]
     coords::Vector_Lit *c = new coords::Vector_Lit(ast);
                         ^
ASTToCoords.cpp: In member function 'coords::Vector_Var* ast2coords::ASTToCoords::mkVector_Var(ast::Vector_Var*)':
ASTToCoords.cpp:49:55: error: no matching function for call to 'coords::Vector_Var::Vector_Var(ast::Vector_Var*&)'
     coords::Vector_Var *c = new coords::Vector_Var(ast);
                                                       ^
In file included from ASTToCoords.h:6:0,
                 from ASTToCoords.cpp:1:
Coords.h:141:3: note: candidate: coords::Vector_Var::Vector_Var(clang::CXXConstructExpr*, const coords::VecVarExpr*)
   Vector_Var(clang::CXXConstructExpr* ast, const coords::VecVarExpr* expr);
   ^~~~~~~~~~
Coords.h:141:3: note:   candidate expects 2 arguments, 1 provided
Coords.h:139:7: note: candidate: constexpr coords::Vector_Var::Vector_Var(const coords::Vector_Var&)
 class Vector_Var : public Vector {
       ^~~~~~~~~~
Coords.h:139:7: note:   no known conversion for argument 1 from 'ast::Vector_Var* {aka const clang::CXXConstructExpr*}' to 'const coords::Vector_Var&'
Coords.h:139:7: note: candidate: constexpr coords::Vector_Var::Vector_Var(coords::Vector_Var&&)
Coords.h:139:7: note:   no known conversion for argument 1 from 'ast::Vector_Var* {aka const clang::CXXConstructExpr*}' to 'coords::Vector_Var&&'
ASTToCoords.cpp:50:22: error: 'coord' was not declared in this scope
     overrideStmt(ast,coord);                          // TO DO Canonicalize
                      ^~~~~
ASTToCoords.cpp:49:25: warning: unused variable 'c' [-Wunused-variable]
     coords::Vector_Var *c = new coords::Vector_Var(ast);
                         ^
ASTToCoords.cpp: In member function 'coords::Vector_Expr* ast2coords::ASTToCoords::mkVector_Expr(ast::Vector_Expr*)':
ASTToCoords.cpp:55:57: error: no matching function for call to 'coords::Vector_Expr::Vector_Expr(ast::Vector_Expr*&)'
     coords::Vector_Expr *c = new coords::Vector_Expr(ast);
                                                         ^
In file included from ASTToCoords.h:6:0,
                 from ASTToCoords.cpp:1:
Coords.h:151:3: note: candidate: coords::Vector_Expr::Vector_Expr(clang::CXXConstructExpr, coords::Vector_Expr*)
   Vector_Expr(const clang::CXXConstructExpr ast, coords::Vector_Expr* expr);
   ^~~~~~~~~~~
Coords.h:151:3: note:   candidate expects 2 arguments, 1 provided
Coords.h:149:7: note: candidate: constexpr coords::Vector_Expr::Vector_Expr(const coords::Vector_Expr&)
 class Vector_Expr : public Vector {
       ^~~~~~~~~~~
Coords.h:149:7: note:   no known conversion for argument 1 from 'ast::Vector_Expr* {aka const clang::CXXConstructExpr*}' to 'const coords::Vector_Expr&'
Coords.h:149:7: note: candidate: constexpr coords::Vector_Expr::Vector_Expr(coords::Vector_Expr&&)
Coords.h:149:7: note:   no known conversion for argument 1 from 'ast::Vector_Expr* {aka const clang::CXXConstructExpr*}' to 'coords::Vector_Expr&&'
ASTToCoords.cpp:56:22: error: 'coord' was not declared in this scope
     overrideStmt(ast,coord);                          // TO DO Canonicalize
                      ^~~~~
ASTToCoords.cpp:55:26: warning: unused variable 'c' [-Wunused-variable]
     coords::Vector_Expr *c = new coords::Vector_Expr(ast);
                          ^
Coords.cpp:3:0: error: unterminated #ifndef
 #ifndef COORDS_H
 
In file included from CoordsToDomain.h:6:0,
                 from CoordsToDomain.cpp:1:
Domain.h:51:65: error: expected unqualified-id before '--' token
  VecExpr* mkVecVarExpr(Space& s, const coords::VecLitExpr* e);  -- KEVIN
                                                                 ^~
Domain.h:61:33: error: 'VecDef' in namespace 'coords' does not name a type
  VecDef& mkVecDef(const coords::VecDef* vardecl, const VecIdent* identifier, const VecExpr* expression);
                                 ^~~~~~
Domain.h:101:2: error: 'ToCoordscoords' does not name a type; did you mean 'ToCoords'?
  ToCoordscoords::Coords *c) : coords_(c) {}
  ^~~~~~~~~~~~~~
  ToCoords
Domain.h:105:2: error: expected ';' after class definition
 }
  ^
  ;
Domain.h:111:32: error: expected class-name before '{' token
 class VecIdent : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecIdent::VecIdent(domain::Space&, const coords::VecIdent*)':
Domain.h:113:54: error: type 'domain::ToCoords' is not a direct base of 'domain::VecIdent'
  VecIdent(Space& space, const coords::VecIdent* c) : ToCoords(c), space_(&space) {}
                                                      ^~~~~~~~
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:21: error: expected '<' before '<:' token
   return static_cast<:VecIdent*>getBaseCoords();
                     ^~
Domain.h:116:21: error: expected type-specifier before '<:' token
Domain.h:116:21: error: expected '>' before '<:' token
Domain.h:116:21: error: expected '(' before '<:' token
Domain.h:116:23: error: capture of non-variable 'domain::VecIdent::VecIdent' 
   return static_cast<:VecIdent*>getBaseCoords();
                       ^~~~~~~~
Domain.h:111:32: note: 'class domain::VecIdent domain::VecIdent::VecIdent' declared here
 class VecIdent : public ToCode {
                                ^
Domain.h:116:31: error: expected ',' before '*' token
   return static_cast<:VecIdent*>getBaseCoords();
                               ^
Domain.h:116:31: error: expected identifier before '*' token
Domain.h:116:48: error: expected ']' before ';' token
   return static_cast<:VecIdent*>getBaseCoords();
                                                ^
Domain.h: In lambda function:
Domain.h:116:48: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:48: error: expected ')' before ';' token
Domain.h: At global scope:
Domain.h:125:32: error: expected class-name before '{' token
 class VecExpr  : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)':
Domain.h:127:57: error: type 'domain::ToCoords' is not a direct base of 'domain::VecExpr'
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
                                                         ^~~~~~~~
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:21: error: expected '<' before '<:' token
   return static_cast<:VecExpr*>getBaseCoords();
                     ^~
Domain.h:129:21: error: expected type-specifier before '<:' token
Domain.h:129:21: error: expected '>' before '<:' token
Domain.h:129:21: error: expected '(' before '<:' token
Domain.h:129:23: error: capture of non-variable 'domain::VecExpr::VecExpr' 
   return static_cast<:VecExpr*>getBaseCoords();
                       ^~~~~~~
Domain.h:125:32: note: 'class domain::VecExpr domain::VecExpr::VecExpr' declared here
 class VecExpr  : public ToCode {
                                ^
Domain.h:129:30: error: expected ',' before '*' token
   return static_cast<:VecExpr*>getBaseCoords();
                              ^
Domain.h:129:30: error: expected identifier before '*' token
Domain.h:129:47: error: expected ']' before ';' token
   return static_cast<:VecExpr*>getBaseCoords();
                                               ^
Domain.h: In lambda function:
Domain.h:129:47: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:47: error: expected ')' before ';' token
Domain.h: In member function 'virtual std::__cxx11::string domain::VecExpr::toString() const':
Domain.h:133:7: error: 'ast_' was not declared in this scope
   if (ast_ != NULL) {
       ^~~~
Domain.h:133:7: note: suggested alternative: 'asin'
   if (ast_ != NULL) {
       ^~~~
       asin
Domain.h: At global scope:
Domain.h:147:37: error: expected ';' after class definition
 class VecLitExpr : public VecExpr {}
                                     ^
                                     ;
Domain.h: In member function 'virtual std::__cxx11::string domain::VecVarExpr::toString() const':
Domain.h:154:16: error: 'ast_' was not declared in this scope
   return "(" + ast_->toString() + " )";
                ^~~~
Domain.h:154:16: note: suggested alternative: 'asin'
   return "(" + ast_->toString() + " )";
                ^~~~
                asin
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVarExpr::getCoords()':
Domain.h:157:34: error: expected '(' before 'coords_'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
Domain.h:157:34: error: 'coords_' was not declared in this scope
Domain.h:157:34: note: suggested alternative: 'Coords'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
                                  Coords
Domain.h:157:41: error: expected ')' before ';' token
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                         ^
Domain.h: At global scope:
Domain.h:166:33: error: 'VecAddAddExpr' in namespace 'coords' does not name a type
         Space& s, const coords::VecAddAddExpr* c, domain::VecExpr *mem, domain::VecExpr *arg) :
                                 ^~~~~~~~~~~~~
Domain.h: In constructor 'domain::VecVecAddExpr::VecVecAddExpr(domain::Space&, const int*, domain::VecExpr*, domain::VecExpr*)':
Domain.h:167:46: error: no matching function for call to 'domain::VecExpr::VecExpr(domain::Space&, const int*&)'
    domain::VecExpr(s, c), arg_(arg), mem_(mem) {
                                              ^
Domain.h:127:5: note: candidate: domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
     ^~~~~~~
Domain.h:127:5: note:   no known conversion for argument 2 from 'const int*' to 'const coords::VecExpr*'
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(const domain::VecExpr&)
 class VecExpr  : public ToCode {
       ^~~~~~~
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(domain::VecExpr&&)
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVecAddExpr::getCoords()':
Domain.h:172:37: error: expected '(' before 'coords_'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
Domain.h:172:37: error: 'coords_' was not declared in this scope
Domain.h:172:37: note: suggested alternative: 'Coords'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
                                     Coords
Domain.h:172:44: error: expected ')' before ';' token
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                            ^
Domain.h: At global scope:
Domain.h:188:32: error: expected class-name before '{' token
 class Vector : public ToCode   {
                                ^
Domain.h:190:55: error: 'VecCtorType' has not been declared
  Vector(const Space& s, const coords::Vector* coords, VecCtorType tag) :
                                                       ^~~~~~~~~~~
Domain.h:207:2: error: 'VecCtorType' does not name a type; did you mean 'Vector'?
  VecCtorType tag_;
  ^~~~~~~~~~~
  Vector
Domain.h: In constructor 'domain::Vector::Vector(const domain::Space&, const coords::Vector*, int)':
Domain.h:191:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector'
   ToCoords(c), space_(&s), tag_(tag) {
   ^~~~~~~~
Domain.h:191:12: error: 'c' was not declared in this scope
   ToCoords(c), space_(&s), tag_(tag) {
            ^
Domain.h:191:28: error: class 'domain::Vector' does not have any field named 'tag_'
   ToCoords(c), space_(&s), tag_(tag) {
                            ^~~~
Domain.h: In member function 'bool domain::Vector::isLit()':
Domain.h:193:25: error: 'tag_' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
Domain.h:193:25: note: suggested alternative: 'tanl'
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
                         tanl
Domain.h:193:33: error: 'VEC_LIT' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                                 ^~~~~~~
Domain.h: In member function 'bool domain::Vector::isExpr()':
Domain.h:194:26: error: 'tag_' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
Domain.h:194:26: note: suggested alternative: 'tanl'
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
                          tanl
Domain.h:194:34: error: 'VEC_EXPR' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                                  ^~~~~~~~
Domain.h: In member function 'bool domain::Vector::isVar()':
Domain.h:195:25: error: 'tag_' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
Domain.h:195:25: note: suggested alternative: 'tanl'
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
                         tanl
Domain.h:195:33: error: 'VEC_VAR' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                                 ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector::getCoords() const':
Domain.h:200:30: error: expected '(' before 'coords_'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
Domain.h:200:30: error: 'coords_' was not declared in this scope
Domain.h:200:30: note: suggested alternative: 'ToCoords'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
                              ToCoords
Domain.h:200:37: error: expected ')' before ';' token
   return static_cast<Vector*>coords_;
                                     ^
Domain.h: In constructor 'domain::Vector_Lit::Vector_Lit(const domain::Space&, const coords::Vector*)':
Domain.h:215:16: error: 'VEC_LIT' was not declared in this scope
   Vector(s, c, VEC_LIT) {
                ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Lit::getCoords() const':
Domain.h:218:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
Domain.h:218:34: error: 'coords_' was not declared in this scope
Domain.h:218:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:218:41: error: expected ')' before ';' token
   return static_cast<Vector_Lit*>coords_;
                                         ^
Domain.h: In constructor 'domain::Vector_Expr::Vector_Expr(const domain::Space&, const coords::Vector*, domain::VecExpr*)':
Domain.h:234:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Expr'
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
   ^~~~~~~~
Domain.h:234:32: error: expected primary-expression before ',' token
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                ^
Domain.h:234:34: error: 'VEC_EXPR' was not declared in this scope
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                  ^~~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Expr::getCoords() const':
Domain.h:238:35: error: expected '(' before 'coords_'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
Domain.h:238:35: error: 'coords_' was not declared in this scope
Domain.h:238:35: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
                                   ToCoords
Domain.h:238:42: error: expected ')' before ';' token
   return static_cast<Vector_Expr*>coords_;
                                          ^
Domain.h: At global scope:
Domain.h:248:36: error: expected ';' after class definition
 class Vector_Var : public Vector {}
                                    ^
                                    ;
Domain.h:255:35: error: expected class-name before '{' token
 class Vector_Def : public ToCode  {
                                   ^
Domain.h:257:27: error: 'VecDef' in namespace 'coords' does not name a type
  Vector_Def(const coords::VecDef* c, const domain::VecIdent* identifier, const domain::VecExpr* expr):
                           ^~~~~~
Domain.h:259:16: error: 'VecDef' in namespace 'coords' does not name a type
  const coords::VecDef* getVarDecl() const {return ast_wrapper_; }
                ^~~~~~
Domain.h:269:16: error: 'VecDef' in namespace 'coords' does not name a type
  const coords::VecDef* ast_wrapper_;
                ^~~~~~
Domain.h: In constructor 'domain::Vector_Def::Vector_Def(const int*, const domain::VecIdent*, const domain::VecExpr*)':
Domain.h:258:4: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Def'
    ToCoords(c), identifier_(identifier), expr_(expr) {}
    ^~~~~~~~
Domain.h: In member function 'const coords::Vector_Def* domain::Vector_Def::getCoords() const':
Domain.h:263:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
Domain.h:263:34: error: 'coords_' was not declared in this scope
Domain.h:263:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:263:41: error: expected ')' before ';' token
   return static_cast<Vector_Def*>coords_;
                                         ^
In file included from CoordsToDomain.cpp:1:0:
CoordsToDomain.h: At global scope:
CoordsToDomain.h:62:51: error: expected ',' or '...' before 'const'
  coords::Vector *getVector(domain::Vector_Expr* d const);
                                                   ^~~~~
CoordsToDomain.h:66:29: error: 'coords::VecDef' has not been declared
  void putVector_Def(coords::VecDef *vardecl_wrapper, domain::VecDef *b);
                             ^~~~~~
CoordsToDomain.h:67:22: error: expected ';' at end of member declaration
  domain::Vector_Def *getVecDef(coords::VecDef* c) const;
                      ^~~~~~~~~
CoordsToDomain.h:67:46: error: expected ')' before '*' token
  domain::Vector_Def *getVecDef(coords::VecDef* c) const;
                                              ^
CoordsToDomain.h:68:51: error: 'coords::Vector_Def* coords2domain::CoordsToDomain::getVecDef(domain::VecDef*) const' conflicts with a previous declaration
  coords::Vector_Def *getVecDef(domain::VecDef* d) const;
                                                   ^~~~~
CoordsToDomain.h:67:40: note: previous declaration 'domain::Vector_Def* coords2domain::CoordsToDomain::getVecDef'
  domain::Vector_Def *getVecDef(coords::VecDef* c) const;
                                        ^~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from Coords.h:4,
                 from CoordsToDomain.h:5,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of 'struct std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher>':
/usr/include/c++/7/type_traits:143:12:   required from 'struct std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> >'
/usr/include/c++/7/type_traits:154:31:   required from 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecIdent, domain::VecIdent*, coords::CoordsHasher>'
CoordsToDomain.h:85:81:   required from here
/usr/include/c++/7/bits/hashtable_policy.h:87:34: error: no match for call to '(const coords::CoordsHasher) (const coords::VecIdent&)'
  noexcept(declval<const _Hash&>()(declval<const _Key&>()))>
           ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/ios:39,
                 from /usr/include/c++/7/ostream:38,
                 from /usr/include/c++/7/iostream:39,
                 from CoordsToDomain.h:4,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/type_traits: In instantiation of 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >':
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecIdent, domain::VecIdent*, coords::CoordsHasher>'
CoordsToDomain.h:85:81:   required from here
/usr/include/c++/7/type_traits:154:31: error: 'value' is not a member of 'std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> >'
     : public __bool_constant<!bool(_Pp::value)>
                               ^~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from Coords.h:4,
                 from CoordsToDomain.h:5,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<coords::VecIdent, domain::VecIdent*, coords::CoordsHasher>':
CoordsToDomain.h:85:81:   required from here
/usr/include/c++/7/bits/unordered_map.h:103:66: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
                                                                  ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:110:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_type key_type;
                                             ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:111:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::value_type value_type;
                                               ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:112:48: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:113:43: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::hasher hasher;
                                           ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:114:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_equal key_equal;
                                              ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:115:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::allocator_type allocator_type;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:120:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::pointer  pointer;
                                             ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:121:50: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_pointer const_pointer;
                                                  ^~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:122:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::reference  reference;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:123:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_reference const_reference;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:124:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::iterator  iterator;
                                              ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:125:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_iterator const_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:126:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::local_iterator local_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:127:57: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_local_iterator const_local_iterator;
                                                         ^~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:128:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::size_type  size_type;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:129:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::difference_type difference_type;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:288:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       operator=(initializer_list<value_type> __l)
       ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:386:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  emplace(_Args&&... __args)
  ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:578:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:584:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(value_type&& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:591:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  insert(_Pair&& __x)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:657:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:953:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x)
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:957:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x) const
       ^~~~~~~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from Coords.h:4,
                 from CoordsToDomain.h:5,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of 'struct std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher>':
/usr/include/c++/7/type_traits:143:12:   required from 'struct std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> >'
/usr/include/c++/7/type_traits:154:31:   required from 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>'
CoordsToDomain.h:86:79:   required from here
/usr/include/c++/7/bits/hashtable_policy.h:87:34: error: no match for call to '(const coords::CoordsHasher) (const coords::VecExpr&)'
  noexcept(declval<const _Hash&>()(declval<const _Key&>()))>
           ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/ios:39,
                 from /usr/include/c++/7/ostream:38,
                 from /usr/include/c++/7/iostream:39,
                 from CoordsToDomain.h:4,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/type_traits: In instantiation of 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >':
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>'
CoordsToDomain.h:86:79:   required from here
/usr/include/c++/7/type_traits:154:31: error: 'value' is not a member of 'std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> >'
     : public __bool_constant<!bool(_Pp::value)>
                               ^~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from Coords.h:4,
                 from CoordsToDomain.h:5,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>':
CoordsToDomain.h:86:79:   required from here
/usr/include/c++/7/bits/unordered_map.h:103:66: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
                                                                  ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:110:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_type key_type;
                                             ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:111:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::value_type value_type;
                                               ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:112:48: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:113:43: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::hasher hasher;
                                           ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:114:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_equal key_equal;
                                              ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:115:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::allocator_type allocator_type;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:120:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::pointer  pointer;
                                             ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:121:50: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_pointer const_pointer;
                                                  ^~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:122:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::reference  reference;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:123:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_reference const_reference;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:124:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::iterator  iterator;
                                              ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:125:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_iterator const_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:126:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::local_iterator local_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:127:57: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_local_iterator const_local_iterator;
                                                         ^~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:128:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::size_type  size_type;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:129:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::difference_type difference_type;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:288:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       operator=(initializer_list<value_type> __l)
       ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:386:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
  emplace(_Args&&... __args)
  ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:578:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       insert(const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:584:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       insert(value_type&& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:591:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
  insert(_Pair&& __x)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:657:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       insert(initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:953:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       equal_range(const key_type& __x)
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:957:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       equal_range(const key_type& __x) const
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<coords::VecIdent, domain::Vector*, coords::CoordsHasher>':
CoordsToDomain.h:87:79:   required from here
/usr/include/c++/7/bits/unordered_map.h:103:66: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
                                                                  ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:110:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_type key_type;
                                             ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:111:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::value_type value_type;
                                               ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:112:48: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:113:43: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::hasher hasher;
                                           ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:114:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_equal key_equal;
                                              ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:115:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::allocator_type allocator_type;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:120:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::pointer  pointer;
                                             ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:121:50: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_pointer const_pointer;
                                                  ^~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:122:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::reference  reference;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:123:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_reference const_reference;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:124:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::iterator  iterator;
                                              ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:125:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_iterator const_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:126:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::local_iterator local_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:127:57: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_local_iterator const_local_iterator;
                                                         ^~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:128:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::size_type  size_type;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:129:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::difference_type difference_type;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:288:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       operator=(initializer_list<value_type> __l)
       ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:386:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  emplace(_Args&&... __args)
  ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:578:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:584:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(value_type&& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:591:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  insert(_Pair&& __x)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:657:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:953:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x)
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:957:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x) const
       ^~~~~~~~~~~
In file included from CoordsToDomain.cpp:1:0:
CoordsToDomain.h:88:29: error: 'VecDef' is not a member of 'coords'
  std::unordered_map<coords::VecDef, domain::VecDef *, coords::CoordsHasher> interpVecDef;
                             ^~~~~~
CoordsToDomain.h:88:29: note: suggested alternative: 'Vector'
  std::unordered_map<coords::VecDef, domain::VecDef *, coords::CoordsHasher> interpVecDef;
                             ^~~~~~
                             Vector
CoordsToDomain.h:88:29: error: 'VecDef' is not a member of 'coords'
CoordsToDomain.h:88:29: note: suggested alternative: 'Vector'
  std::unordered_map<coords::VecDef, domain::VecDef *, coords::CoordsHasher> interpVecDef;
                             ^~~~~~
                             Vector
CoordsToDomain.h:88:75: error: template argument 1 is invalid
  std::unordered_map<coords::VecDef, domain::VecDef *, coords::CoordsHasher> interpVecDef;
                                                                           ^
CoordsToDomain.h:88:75: error: template argument 4 is invalid
CoordsToDomain.h:88:75: error: template argument 5 is invalid
CoordsToDomain.cpp: In member function 'void coords2domain::CoordsToDomain::putVecIdent(coords::VecIdent*, domain::VecIdent*)':
CoordsToDomain.cpp:11:50: error: no matching function for call to 'std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>::insert(std::pair<coords::VecIdent, domain::VecIdent*>)'
     interpExpression.insert(std::make_pair(*c, d));
                                                  ^
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from Coords.h:4,
                 from CoordsToDomain.h:5,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/bits/unordered_map.h:646:2: note: candidate: template<class _InputIterator> void std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::insert(_InputIterator, _InputIterator) [with _InputIterator = _InputIterator; _Key = coords::VecExpr; _Tp = domain::VecExpr*; _Hash = coords::CoordsHasher; _Pred = std::equal_to<coords::VecExpr>; _Alloc = std::allocator<std::pair<const coords::VecExpr, domain::VecExpr*> >]
  insert(_InputIterator __first, _InputIterator __last)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:646:2: note:   template argument deduction/substitution failed:
CoordsToDomain.cpp:11:50: note:   candidate expects 2 arguments, 1 provided
     interpExpression.insert(std::make_pair(*c, d));
                                                  ^
CoordsToDomain.cpp: In member function 'domain::VecIdent* coords2domain::CoordsToDomain::getVecIdent(coords::VecIdent*) const':
CoordsToDomain.cpp:15:27: error: no match for 'operator[]' (operand types are 'const std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>' and 'coords::VecIdent')
    return interpExpression[*c];
                           ^
CoordsToDomain.cpp: In member function 'coords::VecIdent* coords2domain::CoordsToDomain::getVecIdent(domain::VecIdent*) const':
CoordsToDomain.cpp:19:24: error: invalid conversion from 'const coords::VecIdent*' to 'coords::VecIdent*' [-fpermissive]
     return d->getCoords();
            ~~~~~~~~~~~~^~
CoordsToDomain.cpp: In member function 'domain::VecExpr* coords2domain::CoordsToDomain::getVecExpr(coords::VecExpr*)':
CoordsToDomain.cpp:27:27: error: no match for 'operator[]' (operand types are 'std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>' and 'coords::VecExpr')
    return interpExpression[*c];
                           ^
CoordsToDomain.cpp: In member function 'coords::VecExpr* coords2domain::CoordsToDomain::getVecExpr(domain::VecExpr*) const':
CoordsToDomain.cpp:31:15: error: 'class domain::VecExpr' has no member named 'getCoords'; did you mean 'Coords'?
     return d->getCoords();
               ^~~~~~~~~
               Coords
CoordsToDomain.cpp: At global scope:
CoordsToDomain.cpp:34:77: error: conflicting declaration 'domain::VecLitExpr d'
 void CoordsToDomain::putVecLitExpr(coords::VecLitExpr d, domain::VecLitExpr d) {
                                                                             ^
CoordsToDomain.cpp:34:55: note: previous declaration as 'coords::VecLitExpr d'
 void CoordsToDomain::putVecLitExpr(coords::VecLitExpr d, domain::VecLitExpr d) {
                                                       ^
CoordsToDomain.cpp:34:6: error: prototype for 'void coords2domain::CoordsToDomain::putVecLitExpr(coords::VecLitExpr)' does not match any in class 'coords2domain::CoordsToDomain'
 void CoordsToDomain::putVecLitExpr(coords::VecLitExpr d, domain::VecLitExpr d) {
      ^~~~~~~~~~~~~~
In file included from CoordsToDomain.cpp:1:0:
CoordsToDomain.h:42:7: error: candidate is: void coords2domain::CoordsToDomain::putVecLitExpr(coords::VecLitExpr, domain::VecLitExpr&)
  void putVecLitExpr(coords::VecLitExpr n, domain::VecLitExpr &v);
       ^~~~~~~~~~~~~
CoordsToDomain.cpp: In member function 'domain::VecLitExpr* coords2domain::CoordsToDomain::getLitInterp(coords::VecLitExpr) const':
CoordsToDomain.cpp:41:28: error: no match for 'operator*' (operand type is 'coords::VecLitExpr')
    return interpExpression[*c];
                            ^~
In file included from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:17:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from Coords.h:4,
                 from CoordsToDomain.h:5,
                 from CoordsToDomain.cpp:1:
/llvm/tools/clang/include/clang/AST/CharUnits.h:207:25: note: candidate: clang::CharUnits operator*(clang::CharUnits::QuantityType, const clang::CharUnits&)
 inline clang::CharUnits operator* (clang::CharUnits::QuantityType Scale,
                         ^~~~~~~~
/llvm/tools/clang/include/clang/AST/CharUnits.h:207:25: note:   candidate expects 2 arguments, 1 provided
CoordsToDomain.cpp: In member function 'coords::VecLitExpr* coords2domain::CoordsToDomain::getLitInterp(domain::VecLitExpr) const':
CoordsToDomain.cpp:45:13: error: base operand of '->' has non-pointer type 'domain::VecLitExpr'
     return d->getCoords();
             ^~
CoordsToDomain.cpp: In member function 'void coords2domain::CoordsToDomain::PutVecVarExpr(coords::VecVarExpr*, domain::VecVarExpr*)':
CoordsToDomain.cpp:51:50: error: no matching function for call to 'std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>::insert(std::pair<coords::VecVarExpr, domain::VecVarExpr*>)'
     interpExpression.insert(std::make_pair(*c, d));
                                                  ^
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from Coords.h:4,
                 from CoordsToDomain.h:5,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/bits/unordered_map.h:646:2: note: candidate: template<class _InputIterator> void std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::insert(_InputIterator, _InputIterator) [with _InputIterator = _InputIterator; _Key = coords::VecExpr; _Tp = domain::VecExpr*; _Hash = coords::CoordsHasher; _Pred = std::equal_to<coords::VecExpr>; _Alloc = std::allocator<std::pair<const coords::VecExpr, domain::VecExpr*> >]
  insert(_InputIterator __first, _InputIterator __last)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:646:2: note:   template argument deduction/substitution failed:
CoordsToDomain.cpp:51:50: note:   candidate expects 2 arguments, 1 provided
     interpExpression.insert(std::make_pair(*c, d));
                                                  ^
CoordsToDomain.cpp: In member function 'domain::VecVarExpr* coords2domain::CoordsToDomain::getVecVarExpr(coords::VecVarExpr*) const':
CoordsToDomain.cpp:55:27: error: no match for 'operator[]' (operand types are 'const std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>' and 'coords::VecVarExpr')
    return interpExpression[*c];
                           ^
CoordsToDomain.cpp: In member function 'coords::VecVarExpr* coords2domain::CoordsToDomain::getVecVarExpr(domain::VecVarExpr*) const':
CoordsToDomain.cpp:59:24: error: invalid conversion from 'const coords::VecVarExpr*' to 'coords::VecVarExpr*' [-fpermissive]
     return d->getCoords();
            ~~~~~~~~~~~~^~
CoordsToDomain.cpp: At global scope:
CoordsToDomain.cpp:64:6: error: prototype for 'void coords2domain::CoordsToDomain::PutVecVecAddExpr(coords::VecVecAddExpr*, domain::VecVecAddExpr*)' does not match any in class 'coords2domain::CoordsToDomain'
 void CoordsToDomain::PutVecVecAddExpr(coords::VecVecAddExpr *c, domain::VecVecAddExpr *d) {
      ^~~~~~~~~~~~~~
In file included from CoordsToDomain.cpp:1:0:
CoordsToDomain.h:50:7: error: candidate is: void coords2domain::CoordsToDomain::PutVecVecAddExpr(coords::VecVarExpr*, domain::VecVecAddExpr*)
  void PutVecVecAddExpr(coords::VecVarExpr *n, domain::VecVecAddExpr *e);
       ^~~~~~~~~~~~~~~~
CoordsToDomain.cpp: In member function 'domain::VecVecAddExpr* coords2domain::CoordsToDomain::getVecVecAddExpr(coords::VecVarExpr*) const':
CoordsToDomain.cpp:69:27: error: no match for 'operator[]' (operand types are 'const std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>' and 'coords::VecVarExpr')
    return interpExpression[*c];
                           ^
CoordsToDomain.cpp: In member function 'coords::VecVecAddExpr* coords2domain::CoordsToDomain::getVecVecAddExpr(domain::VecVarExpr*) const':
CoordsToDomain.cpp:73:25: error: cannot convert 'const coords::VecVarExpr*' to 'coords::VecVecAddExpr*' in return
     return d->getCoords();
                         ^
CoordsToDomain.cpp: In member function 'void coords2domain::CoordsToDomain::putVector_Lit(coords::Vector*, domain::Vector_Lit*)':
CoordsToDomain.cpp:79:45: error: 'c' was not declared in this scope
     interpExpression.insert(std::make_pair(*c, d));
                                             ^
CoordsToDomain.cpp:79:48: error: 'd' was not declared in this scope
     interpExpression.insert(std::make_pair(*c, d));
                                                ^
CoordsToDomain.cpp: At global scope:
CoordsToDomain.cpp:82:21: error: prototype for 'domain::Vector_Lit* coords2domain::CoordsToDomain::getVector(coords::Vector_Lit*) const' does not match any in class 'coords2domain::CoordsToDomain'
 domain::Vector_Lit *CoordsToDomain::getVector(coords::Vector_Lit* c) const {
                     ^~~~~~~~~~~~~~
In file included from CoordsToDomain.cpp:1:0:
CoordsToDomain.h:62:18: error: candidates are: coords::Vector* coords2domain::CoordsToDomain::getVector(domain::Vector_Expr*)
  coords::Vector *getVector(domain::Vector_Expr* d const);
                  ^~~~~~~~~
CoordsToDomain.h:61:18: error:                 domain::Vector* coords2domain::CoordsToDomain::getVector(coords::Vector_Expr*) const
  domain::Vector *getVector(coords::Vector_Expr* c) const;
                  ^~~~~~~~~
CoordsToDomain.h:58:18: error:                 coords::Vector* coords2domain::CoordsToDomain::getVector(domain::Vector_Lit*) const
  coords::Vector *getVector(domain::Vector_Lit* d) const;
                  ^~~~~~~~~
CoordsToDomain.h:57:18: error:                 domain::Vector* coords2domain::CoordsToDomain::getVector(coords::Vector_Lit*) const
  domain::Vector *getVector(coords::Vector_Lit* c) const;
                  ^~~~~~~~~
CoordsToDomain.cpp:86:21: error: prototype for 'coords::Vector_Lit* coords2domain::CoordsToDomain::getVector(domain::Vector_Lit*) const' does not match any in class 'coords2domain::CoordsToDomain'
 coords::Vector_Lit *CoordsToDomain::getVector(domain::Vector_Lit* d) const {
                     ^~~~~~~~~~~~~~
In file included from CoordsToDomain.cpp:1:0:
CoordsToDomain.h:62:18: error: candidates are: coords::Vector* coords2domain::CoordsToDomain::getVector(domain::Vector_Expr*)
  coords::Vector *getVector(domain::Vector_Expr* d const);
                  ^~~~~~~~~
CoordsToDomain.h:61:18: error:                 domain::Vector* coords2domain::CoordsToDomain::getVector(coords::Vector_Expr*) const
  domain::Vector *getVector(coords::Vector_Expr* c) const;
                  ^~~~~~~~~
CoordsToDomain.h:58:18: error:                 coords::Vector* coords2domain::CoordsToDomain::getVector(domain::Vector_Lit*) const
  coords::Vector *getVector(domain::Vector_Lit* d) const;
                  ^~~~~~~~~
CoordsToDomain.h:57:18: error:                 domain::Vector* coords2domain::CoordsToDomain::getVector(coords::Vector_Lit*) const
  domain::Vector *getVector(coords::Vector_Lit* c) const;
                  ^~~~~~~~~
CoordsToDomain.cpp: In member function 'void coords2domain::CoordsToDomain::putVector_Expr(coords::Vector*, domain::Vector_Expr*)':
CoordsToDomain.cpp:91:50: error: no matching function for call to 'std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>::insert(std::pair<coords::Vector, domain::Vector_Expr*>)'
     interpExpression.insert(std::make_pair(*c, d));
                                                  ^
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from Coords.h:4,
                 from CoordsToDomain.h:5,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/bits/unordered_map.h:646:2: note: candidate: template<class _InputIterator> void std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::insert(_InputIterator, _InputIterator) [with _InputIterator = _InputIterator; _Key = coords::VecExpr; _Tp = domain::VecExpr*; _Hash = coords::CoordsHasher; _Pred = std::equal_to<coords::VecExpr>; _Alloc = std::allocator<std::pair<const coords::VecExpr, domain::VecExpr*> >]
  insert(_InputIterator __first, _InputIterator __last)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:646:2: note:   template argument deduction/substitution failed:
CoordsToDomain.cpp:91:50: note:   candidate expects 2 arguments, 1 provided
     interpExpression.insert(std::make_pair(*c, d));
                                                  ^
CoordsToDomain.cpp: In member function 'domain::Vector* coords2domain::CoordsToDomain::getVector(coords::Vector_Expr*) const':
CoordsToDomain.cpp:95:29: error: no match for 'operator[]' (operand types are 'const std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>' and 'coords::Vector_Expr')
      return interpExpression[*c];
                             ^
CoordsToDomain.cpp: At global scope:
CoordsToDomain.cpp:98:71: error: expected ',' or '...' before 'const'
 coords::Vector_Expr *CoordsToDomain::getVector(domain::Vector_Expr* d const) {
                                                                       ^~~~~
CoordsToDomain.cpp:98:22: error: prototype for 'coords::Vector_Expr* coords2domain::CoordsToDomain::getVector(domain::Vector_Expr*)' does not match any in class 'coords2domain::CoordsToDomain'
 coords::Vector_Expr *CoordsToDomain::getVector(domain::Vector_Expr* d const) {
                      ^~~~~~~~~~~~~~
In file included from CoordsToDomain.cpp:1:0:
CoordsToDomain.h:62:18: error: candidates are: coords::Vector* coords2domain::CoordsToDomain::getVector(domain::Vector_Expr*)
  coords::Vector *getVector(domain::Vector_Expr* d const);
                  ^~~~~~~~~
CoordsToDomain.cpp:94:17: error:                 domain::Vector* coords2domain::CoordsToDomain::getVector(coords::Vector_Expr*) const
 domain::Vector *CoordsToDomain::getVector(coords::Vector_Expr* c) const {
                 ^~~~~~~~~~~~~~
In file included from CoordsToDomain.cpp:1:0:
CoordsToDomain.h:58:18: error:                 coords::Vector* coords2domain::CoordsToDomain::getVector(domain::Vector_Lit*) const
  coords::Vector *getVector(domain::Vector_Lit* d) const;
                  ^~~~~~~~~
CoordsToDomain.h:57:18: error:                 domain::Vector* coords2domain::CoordsToDomain::getVector(coords::Vector_Lit*) const
  domain::Vector *getVector(coords::Vector_Lit* c) const;
                  ^~~~~~~~~
CoordsToDomain.cpp:104:44: error: variable or field 'putVector_Def' declared void
 void CoordsToDomain::putVector_Def(coords::VecDef *c, domain::VecDef *d) {
                                            ^~~~~~
CoordsToDomain.cpp:104:44: error: 'VecDef' is not a member of 'coords'
CoordsToDomain.cpp:104:44: note: suggested alternative: 'Vector'
 void CoordsToDomain::putVector_Def(coords::VecDef *c, domain::VecDef *d) {
                                            ^~~~~~
                                            Vector
CoordsToDomain.cpp:104:52: error: 'c' was not declared in this scope
 void CoordsToDomain::putVector_Def(coords::VecDef *c, domain::VecDef *d) {
                                                    ^
CoordsToDomain.cpp:104:70: error: expected primary-expression before '*' token
 void CoordsToDomain::putVector_Def(coords::VecDef *c, domain::VecDef *d) {
                                                                      ^
CoordsToDomain.cpp:104:71: error: 'd' was not declared in this scope
 void CoordsToDomain::putVector_Def(coords::VecDef *c, domain::VecDef *d) {
                                                                       ^
CoordsToDomain.cpp:108:35: error: 'VecDef' is not a member of 'coords'
 domain::VecDef *getVecDef(coords::VecDef* c) const {
                                   ^~~~~~
CoordsToDomain.cpp:108:35: note: suggested alternative: 'Vector'
 domain::VecDef *getVecDef(coords::VecDef* c) const {
                                   ^~~~~~
                                   Vector
CoordsToDomain.cpp:108:43: error: 'c' was not declared in this scope
 domain::VecDef *getVecDef(coords::VecDef* c) const {
                                           ^
CoordsToDomain.cpp:112:9: error: 'VecDef' in namespace 'coords' does not name a type
 coords::VecDef *getVecDef(domain::VecDef* d) const {
         ^~~~~~
CoordsToDomain.cpp:117:6: error: prototype for 'void coords2domain::CoordsToDomain::dump() const' does not match any in class 'coords2domain::CoordsToDomain'
 void CoordsToDomain::dump() const {
      ^~~~~~~~~~~~~~
In file included from CoordsToDomain.cpp:1:0:
CoordsToDomain.h:70:7: error: candidate is: void coords2domain::CoordsToDomain::dump()
  void dump();
       ^~~~
In file included from Oracle.h:7:0,
                 from Interpretation.h:8,
                 from main.cpp:15:
Domain.h:51:65: error: expected unqualified-id before '--' token
  VecExpr* mkVecVarExpr(Space& s, const coords::VecLitExpr* e);  -- KEVIN
                                                                 ^~
Domain.h:61:33: error: 'VecDef' in namespace 'coords' does not name a type
  VecDef& mkVecDef(const coords::VecDef* vardecl, const VecIdent* identifier, const VecExpr* expression);
                                 ^~~~~~
Domain.h:101:2: error: 'ToCoordscoords' does not name a type; did you mean 'ToCoords'?
  ToCoordscoords::Coords *c) : coords_(c) {}
  ^~~~~~~~~~~~~~
  ToCoords
Domain.h:105:2: error: expected ';' after class definition
 }
  ^
  ;
Domain.h:111:32: error: expected class-name before '{' token
 class VecIdent : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecIdent::VecIdent(domain::Space&, const coords::VecIdent*)':
Domain.h:113:54: error: type 'domain::ToCoords' is not a direct base of 'domain::VecIdent'
  VecIdent(Space& space, const coords::VecIdent* c) : ToCoords(c), space_(&space) {}
                                                      ^~~~~~~~
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:21: error: expected '<' before '<:' token
   return static_cast<:VecIdent*>getBaseCoords();
                     ^~
Domain.h:116:21: error: expected type-specifier before '<:' token
Domain.h:116:21: error: expected '>' before '<:' token
Domain.h:116:21: error: expected '(' before '<:' token
Domain.h:116:23: error: capture of non-variable 'domain::VecIdent::VecIdent' 
   return static_cast<:VecIdent*>getBaseCoords();
                       ^~~~~~~~
Domain.h:111:32: note: 'class domain::VecIdent domain::VecIdent::VecIdent' declared here
 class VecIdent : public ToCode {
                                ^
Domain.h:116:31: error: expected ',' before '*' token
   return static_cast<:VecIdent*>getBaseCoords();
                               ^
Domain.h:116:31: error: expected identifier before '*' token
Domain.h:116:48: error: expected ']' before ';' token
   return static_cast<:VecIdent*>getBaseCoords();
                                                ^
Domain.h: In lambda function:
Domain.h:116:48: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:48: error: expected ')' before ';' token
Domain.h: At global scope:
Domain.h:125:32: error: expected class-name before '{' token
 class VecExpr  : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)':
Domain.h:127:57: error: type 'domain::ToCoords' is not a direct base of 'domain::VecExpr'
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
                                                         ^~~~~~~~
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:21: error: expected '<' before '<:' token
   return static_cast<:VecExpr*>getBaseCoords();
                     ^~
Domain.h:129:21: error: expected type-specifier before '<:' token
Domain.h:129:21: error: expected '>' before '<:' token
Domain.h:129:21: error: expected '(' before '<:' token
Domain.h:129:23: error: capture of non-variable 'domain::VecExpr::VecExpr' 
   return static_cast<:VecExpr*>getBaseCoords();
                       ^~~~~~~
Domain.h:125:32: note: 'class domain::VecExpr domain::VecExpr::VecExpr' declared here
 class VecExpr  : public ToCode {
                                ^
Domain.h:129:30: error: expected ',' before '*' token
   return static_cast<:VecExpr*>getBaseCoords();
                              ^
Domain.h:129:30: error: expected identifier before '*' token
Domain.h:129:47: error: expected ']' before ';' token
   return static_cast<:VecExpr*>getBaseCoords();
                                               ^
Domain.h: In lambda function:
Domain.h:129:47: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:47: error: expected ')' before ';' token
Domain.h: In member function 'virtual std::__cxx11::string domain::VecExpr::toString() const':
Domain.h:133:7: error: 'ast_' was not declared in this scope
   if (ast_ != NULL) {
       ^~~~
Domain.h:133:7: note: suggested alternative: 'asin'
   if (ast_ != NULL) {
       ^~~~
       asin
Domain.h: At global scope:
Domain.h:147:37: error: expected ';' after class definition
 class VecLitExpr : public VecExpr {}
                                     ^
                                     ;
Domain.h: In member function 'virtual std::__cxx11::string domain::VecVarExpr::toString() const':
Domain.h:154:16: error: 'ast_' was not declared in this scope
   return "(" + ast_->toString() + " )";
                ^~~~
Domain.h:154:16: note: suggested alternative: 'asin'
   return "(" + ast_->toString() + " )";
                ^~~~
                asin
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVarExpr::getCoords()':
Domain.h:157:34: error: expected '(' before 'coords_'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
Domain.h:157:34: error: 'coords_' was not declared in this scope
Domain.h:157:34: note: suggested alternative: 'Coords'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
                                  Coords
Domain.h:157:41: error: expected ')' before ';' token
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                         ^
Domain.h: At global scope:
Domain.h:166:33: error: 'VecAddAddExpr' in namespace 'coords' does not name a type
         Space& s, const coords::VecAddAddExpr* c, domain::VecExpr *mem, domain::VecExpr *arg) :
                                 ^~~~~~~~~~~~~
Domain.h: In constructor 'domain::VecVecAddExpr::VecVecAddExpr(domain::Space&, const int*, domain::VecExpr*, domain::VecExpr*)':
Domain.h:167:46: error: no matching function for call to 'domain::VecExpr::VecExpr(domain::Space&, const int*&)'
    domain::VecExpr(s, c), arg_(arg), mem_(mem) {
                                              ^
Domain.h:127:5: note: candidate: domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
     ^~~~~~~
Domain.h:127:5: note:   no known conversion for argument 2 from 'const int*' to 'const coords::VecExpr*'
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(const domain::VecExpr&)
 class VecExpr  : public ToCode {
       ^~~~~~~
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(domain::VecExpr&&)
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVecAddExpr::getCoords()':
Domain.h:172:37: error: expected '(' before 'coords_'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
Domain.h:172:37: error: 'coords_' was not declared in this scope
Domain.h:172:37: note: suggested alternative: 'Coords'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
                                     Coords
Domain.h:172:44: error: expected ')' before ';' token
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                            ^
Domain.h: At global scope:
Domain.h:188:32: error: expected class-name before '{' token
 class Vector : public ToCode   {
                                ^
Domain.h:190:55: error: 'VecCtorType' has not been declared
  Vector(const Space& s, const coords::Vector* coords, VecCtorType tag) :
                                                       ^~~~~~~~~~~
Domain.h:207:2: error: 'VecCtorType' does not name a type; did you mean 'Vector'?
  VecCtorType tag_;
  ^~~~~~~~~~~
  Vector
Domain.h: In constructor 'domain::Vector::Vector(const domain::Space&, const coords::Vector*, int)':
Domain.h:191:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector'
   ToCoords(c), space_(&s), tag_(tag) {
   ^~~~~~~~
Domain.h:191:12: error: 'c' was not declared in this scope
   ToCoords(c), space_(&s), tag_(tag) {
            ^
Domain.h:191:28: error: class 'domain::Vector' does not have any field named 'tag_'
   ToCoords(c), space_(&s), tag_(tag) {
                            ^~~~
Domain.h: In member function 'bool domain::Vector::isLit()':
Domain.h:193:25: error: 'tag_' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
Domain.h:193:25: note: suggested alternative: 'tanl'
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
                         tanl
Domain.h:193:33: error: 'VEC_LIT' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                                 ^~~~~~~
Domain.h: In member function 'bool domain::Vector::isExpr()':
Domain.h:194:26: error: 'tag_' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
Domain.h:194:26: note: suggested alternative: 'tanl'
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
                          tanl
Domain.h:194:34: error: 'VEC_EXPR' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                                  ^~~~~~~~
Domain.h: In member function 'bool domain::Vector::isVar()':
Domain.h:195:25: error: 'tag_' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
Domain.h:195:25: note: suggested alternative: 'tanl'
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
                         tanl
Domain.h:195:33: error: 'VEC_VAR' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                                 ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector::getCoords() const':
Domain.h:200:30: error: expected '(' before 'coords_'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
Domain.h:200:30: error: 'coords_' was not declared in this scope
Domain.h:200:30: note: suggested alternative: 'ToCoords'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
                              ToCoords
Domain.h:200:37: error: expected ')' before ';' token
   return static_cast<Vector*>coords_;
                                     ^
Domain.h: In constructor 'domain::Vector_Lit::Vector_Lit(const domain::Space&, const coords::Vector*)':
Domain.h:215:16: error: 'VEC_LIT' was not declared in this scope
   Vector(s, c, VEC_LIT) {
                ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Lit::getCoords() const':
Domain.h:218:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
Domain.h:218:34: error: 'coords_' was not declared in this scope
Domain.h:218:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:218:41: error: expected ')' before ';' token
   return static_cast<Vector_Lit*>coords_;
                                         ^
Domain.h: In constructor 'domain::Vector_Expr::Vector_Expr(const domain::Space&, const coords::Vector*, domain::VecExpr*)':
Domain.h:234:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Expr'
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
   ^~~~~~~~
Domain.h:234:32: error: expected primary-expression before ',' token
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                ^
Domain.h:234:34: error: 'VEC_EXPR' was not declared in this scope
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                  ^~~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Expr::getCoords() const':
Domain.h:238:35: error: expected '(' before 'coords_'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
Domain.h:238:35: error: 'coords_' was not declared in this scope
Domain.h:238:35: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
                                   ToCoords
Domain.h:238:42: error: expected ')' before ';' token
   return static_cast<Vector_Expr*>coords_;
                                          ^
Domain.h: At global scope:
Domain.h:248:36: error: expected ';' after class definition
 class Vector_Var : public Vector {}
                                    ^
                                    ;
Domain.h:255:35: error: expected class-name before '{' token
 class Vector_Def : public ToCode  {
                                   ^
Domain.h:257:27: error: 'VecDef' in namespace 'coords' does not name a type
  Vector_Def(const coords::VecDef* c, const domain::VecIdent* identifier, const domain::VecExpr* expr):
                           ^~~~~~
Domain.h:259:16: error: 'VecDef' in namespace 'coords' does not name a type
  const coords::VecDef* getVarDecl() const {return ast_wrapper_; }
                ^~~~~~
Domain.h:269:16: error: 'VecDef' in namespace 'coords' does not name a type
  const coords::VecDef* ast_wrapper_;
                ^~~~~~
Domain.h: In constructor 'domain::Vector_Def::Vector_Def(const int*, const domain::VecIdent*, const domain::VecExpr*)':
Domain.h:258:4: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Def'
    ToCoords(c), identifier_(identifier), expr_(expr) {}
    ^~~~~~~~
Domain.h: In member function 'const coords::Vector_Def* domain::Vector_Def::getCoords() const':
Domain.h:263:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
Domain.h:263:34: error: 'coords_' was not declared in this scope
Domain.h:263:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:263:41: error: expected ')' before ';' token
   return static_cast<Vector_Def*>coords_;
                                         ^
In file included from Interpretation.h:10:0,
                 from main.cpp:15:
CoordsToDomain.h: At global scope:
CoordsToDomain.h:62:51: error: expected ',' or '...' before 'const'
  coords::Vector *getVector(domain::Vector_Expr* d const);
                                                   ^~~~~
CoordsToDomain.h:66:29: error: 'coords::VecDef' has not been declared
  void putVector_Def(coords::VecDef *vardecl_wrapper, domain::VecDef *b);
                             ^~~~~~
CoordsToDomain.h:67:22: error: expected ';' at end of member declaration
  domain::Vector_Def *getVecDef(coords::VecDef* c) const;
                      ^~~~~~~~~
CoordsToDomain.h:67:46: error: expected ')' before '*' token
  domain::Vector_Def *getVecDef(coords::VecDef* c) const;
                                              ^
CoordsToDomain.h:68:51: error: 'coords::Vector_Def* coords2domain::CoordsToDomain::getVecDef(domain::VecDef*) const' conflicts with a previous declaration
  coords::Vector_Def *getVecDef(domain::VecDef* d) const;
                                                   ^~~~~
CoordsToDomain.h:67:40: note: previous declaration 'domain::Vector_Def* coords2domain::CoordsToDomain::getVecDef'
  domain::Vector_Def *getVecDef(coords::VecDef* c) const;
                                        ^~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:47,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from main.cpp:4:
/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of 'struct std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher>':
/usr/include/c++/7/type_traits:143:12:   required from 'struct std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> >'
/usr/include/c++/7/type_traits:154:31:   required from 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecIdent, domain::VecIdent*, coords::CoordsHasher>'
CoordsToDomain.h:85:81:   required from here
/usr/include/c++/7/bits/hashtable_policy.h:87:34: error: no match for call to '(const coords::CoordsHasher) (const coords::VecIdent&)'
  noexcept(declval<const _Hash&>()(declval<const _Key&>()))>
           ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/ios:39,
                 from /usr/include/c++/7/ostream:38,
                 from /usr/include/c++/7/iostream:39,
                 from main.cpp:1:
/usr/include/c++/7/type_traits: In instantiation of 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >':
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecIdent, domain::VecIdent*, coords::CoordsHasher>'
CoordsToDomain.h:85:81:   required from here
/usr/include/c++/7/type_traits:154:31: error: 'value' is not a member of 'std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> >'
     : public __bool_constant<!bool(_Pp::value)>
                               ^~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:47,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from main.cpp:4:
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<coords::VecIdent, domain::VecIdent*, coords::CoordsHasher>':
CoordsToDomain.h:85:81:   required from here
/usr/include/c++/7/bits/unordered_map.h:103:66: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
                                                                  ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:110:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_type key_type;
                                             ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:111:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::value_type value_type;
                                               ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:112:48: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:113:43: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::hasher hasher;
                                           ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:114:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_equal key_equal;
                                              ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:115:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::allocator_type allocator_type;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:120:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::pointer  pointer;
                                             ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:121:50: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_pointer const_pointer;
                                                  ^~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:122:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::reference  reference;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:123:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_reference const_reference;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:124:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::iterator  iterator;
                                              ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:125:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_iterator const_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:126:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::local_iterator local_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:127:57: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_local_iterator const_local_iterator;
                                                         ^~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:128:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::size_type  size_type;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:129:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::difference_type difference_type;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:288:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       operator=(initializer_list<value_type> __l)
       ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:386:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  emplace(_Args&&... __args)
  ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:578:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:584:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(value_type&& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:591:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  insert(_Pair&& __x)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:657:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:953:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x)
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:957:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x) const
       ^~~~~~~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:47,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from main.cpp:4:
/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of 'struct std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher>':
/usr/include/c++/7/type_traits:143:12:   required from 'struct std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> >'
/usr/include/c++/7/type_traits:154:31:   required from 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>'
CoordsToDomain.h:86:79:   required from here
/usr/include/c++/7/bits/hashtable_policy.h:87:34: error: no match for call to '(const coords::CoordsHasher) (const coords::VecExpr&)'
  noexcept(declval<const _Hash&>()(declval<const _Key&>()))>
           ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/ios:39,
                 from /usr/include/c++/7/ostream:38,
                 from /usr/include/c++/7/iostream:39,
                 from main.cpp:1:
/usr/include/c++/7/type_traits: In instantiation of 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >':
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>'
CoordsToDomain.h:86:79:   required from here
/usr/include/c++/7/type_traits:154:31: error: 'value' is not a member of 'std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> >'
     : public __bool_constant<!bool(_Pp::value)>
                               ^~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:47,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from main.cpp:4:
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>':
CoordsToDomain.h:86:79:   required from here
/usr/include/c++/7/bits/unordered_map.h:103:66: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
                                                                  ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:110:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_type key_type;
                                             ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:111:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::value_type value_type;
                                               ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:112:48: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:113:43: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::hasher hasher;
                                           ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:114:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_equal key_equal;
                                              ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:115:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::allocator_type allocator_type;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:120:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::pointer  pointer;
                                             ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:121:50: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_pointer const_pointer;
                                                  ^~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:122:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::reference  reference;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:123:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_reference const_reference;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:124:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::iterator  iterator;
                                              ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:125:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_iterator const_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:126:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::local_iterator local_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:127:57: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_local_iterator const_local_iterator;
                                                         ^~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:128:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::size_type  size_type;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:129:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::difference_type difference_type;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:288:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       operator=(initializer_list<value_type> __l)
       ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:386:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
  emplace(_Args&&... __args)
  ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:578:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       insert(const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:584:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       insert(value_type&& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:591:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
  insert(_Pair&& __x)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:657:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       insert(initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:953:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       equal_range(const key_type& __x)
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:957:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       equal_range(const key_type& __x) const
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<coords::VecIdent, domain::Vector*, coords::CoordsHasher>':
CoordsToDomain.h:87:79:   required from here
/usr/include/c++/7/bits/unordered_map.h:103:66: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
                                                                  ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:110:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_type key_type;
                                             ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:111:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::value_type value_type;
                                               ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:112:48: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:113:43: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::hasher hasher;
                                           ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:114:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_equal key_equal;
                                              ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:115:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::allocator_type allocator_type;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:120:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::pointer  pointer;
                                             ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:121:50: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_pointer const_pointer;
                                                  ^~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:122:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::reference  reference;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:123:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_reference const_reference;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:124:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::iterator  iterator;
                                              ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:125:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_iterator const_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:126:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::local_iterator local_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:127:57: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_local_iterator const_local_iterator;
                                                         ^~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:128:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::size_type  size_type;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:129:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::difference_type difference_type;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:288:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       operator=(initializer_list<value_type> __l)
       ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:386:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  emplace(_Args&&... __args)
  ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:578:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:584:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(value_type&& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:591:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  insert(_Pair&& __x)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:657:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:953:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x)
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:957:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x) const
       ^~~~~~~~~~~
In file included from Interpretation.h:10:0,
                 from main.cpp:15:
CoordsToDomain.h:88:29: error: 'VecDef' is not a member of 'coords'
  std::unordered_map<coords::VecDef, domain::VecDef *, coords::CoordsHasher> interpVecDef;
                             ^~~~~~
CoordsToDomain.h:88:29: note: suggested alternative: 'Vector'
  std::unordered_map<coords::VecDef, domain::VecDef *, coords::CoordsHasher> interpVecDef;
                             ^~~~~~
                             Vector
CoordsToDomain.h:88:29: error: 'VecDef' is not a member of 'coords'
CoordsToDomain.h:88:29: note: suggested alternative: 'Vector'
  std::unordered_map<coords::VecDef, domain::VecDef *, coords::CoordsHasher> interpVecDef;
                             ^~~~~~
                             Vector
CoordsToDomain.h:88:75: error: template argument 1 is invalid
  std::unordered_map<coords::VecDef, domain::VecDef *, coords::CoordsHasher> interpVecDef;
                                                                           ^
CoordsToDomain.h:88:75: error: template argument 4 is invalid
CoordsToDomain.h:88:75: error: template argument 5 is invalid
In file included from main.cpp:15:0:
Interpretation.h: In member function 'domain::VecExpr* interp::Interpretation::getVecExpr(ast::VecExpr*)':
Interpretation.h:37:64: error: no matching function for call to 'coords::VecExpr::VecExpr(ast::VecExpr*&)'
         const coords::VecExpr *coords = new coords::VecExpr(ast);
                                                                ^
In file included from Interpretation.h:6:0,
                 from main.cpp:15:
Coords.h:82:3: note: candidate: coords::VecExpr::VecExpr(clang::Expr)
   VecExpr(const clang::Expr v);
   ^~~~~~~
Coords.h:82:3: note:   no known conversion for argument 1 from 'ast::VecExpr* {aka const clang::Expr*}' to 'clang::Expr'
Coords.h:80:7: note: candidate: constexpr coords::VecExpr::VecExpr(const coords::VecExpr&)
 class VecExpr : public Coords {
       ^~~~~~~
Coords.h:80:7: note:   no known conversion for argument 1 from 'ast::VecExpr* {aka const clang::Expr*}' to 'const coords::VecExpr&'
Coords.h:80:7: note: candidate: constexpr coords::VecExpr::VecExpr(coords::VecExpr&&)
Coords.h:80:7: note:   no known conversion for argument 1 from 'ast::VecExpr* {aka const clang::Expr*}' to 'coords::VecExpr&&'
In file included from main.cpp:15:0:
Interpretation.h:38:62: error: invalid conversion from 'const coords::VecExpr*' to 'coords::VecExpr*' [-fpermissive]
         domain::VecExpr* dom = coords2dom_->getVecExpr(coords);
                                                              ^
In file included from Interpretation.h:10:0,
                 from main.cpp:15:
CoordsToDomain.h:39:19: note:   initializing argument 1 of 'domain::VecExpr* coords2domain::CoordsToDomain::getVecExpr(coords::VecExpr*)'
  domain::VecExpr *getVecExpr(coords::VecExpr* c);
                   ^~~~~~~~~~
main.cpp: In function 'const domain::VecExpr* handleMemberCallExpr(const clang::CXXMemberCallExpr*, clang::ASTContext*, clang::SourceManager&)':
main.cpp:90:49: error: invalid conversion from 'const domain::VecExpr*' to 'domain::VecExpr*' [-fpermissive]
   interp_.mkVecVecAddExpr(ast, left_br, right_br);
                                                 ^
In file included from main.cpp:15:0:
Interpretation.h:23:10: note:   initializing argument 2 of 'void interp::Interpretation::mkVecVecAddExpr(ast::VecVecAddExpr*, domain::VecExpr*, domain::VecExpr*)'
     void mkVecVecAddExpr(ast::VecVecAddExpr *ast, domain::VecExpr *mem,
          ^~~~~~~~~~~~~~~
main.cpp:90:49: error: invalid conversion from 'const domain::VecExpr*' to 'domain::VecExpr*' [-fpermissive]
   interp_.mkVecVecAddExpr(ast, left_br, right_br);
                                                 ^
In file included from main.cpp:15:0:
Interpretation.h:23:10: note:   initializing argument 3 of 'void interp::Interpretation::mkVecVecAddExpr(ast::VecVecAddExpr*, domain::VecExpr*, domain::VecExpr*)'
     void mkVecVecAddExpr(ast::VecVecAddExpr *ast, domain::VecExpr *mem,
          ^~~~~~~~~~~~~~~
main.cpp: In member function 'virtual void HandlerForCXXMemberCallExprRight_DeclRefExpr::run(const clang::ast_matchers::MatchFinder::MatchResult&)':
main.cpp:107:12: error: base operand of '->' has non-pointer type 'interp::Interpretation'
     interp_->mkVecVarExpr(declRefExpr);
            ^~
main.cpp: In member function 'virtual void HandlerForCXXConstructAddExpr::run(const clang::ast_matchers::MatchFinder::MatchResult&)':
main.cpp:166:9: error: 'vec_vec_add_ctor_ast' was not declared in this scope
     if (vec_vec_add_ctor_ast == NULL)
         ^~~~~~~~~~~~~~~~~~~~
main.cpp:166:9: note: suggested alternative: 'vec_vec_add_member_call_ast'
     if (vec_vec_add_ctor_ast == NULL)
         ^~~~~~~~~~~~~~~~~~~~
         vec_vec_add_member_call_ast
main.cpp:180:86: error: no matching function for call to 'interp::Interpretation::mkVector_Expr(const clang::CXXMemberCallExpr*&, const domain::VecExpr*&, clang::ASTContext*&)'
     return interp_.mkVector_Expr(vec_vec_add_member_call_ast, memberCallExpr, context);
                                                                                      ^
In file included from main.cpp:15:0:
Interpretation.h:26:10: note: candidate: void interp::Interpretation::mkVector_Expr(ast::VecLitExpr*, clang::ASTContext*)
     void mkVector_Expr(ast::VecLitExpr *ast, clang::ASTContext *context);
          ^~~~~~~~~~~~~
Interpretation.h:26:10: note:   candidate expects 2 arguments, 3 provided
main.cpp:180:86: error: return-statement with a value, in function returning 'void' [-fpermissive]
     return interp_.mkVector_Expr(vec_vec_add_member_call_ast, memberCallExpr, context);
                                                                                      ^
main.cpp: In function 'const domain::VecExpr* handle_arg0_of_add_call(const clang::Expr*, clang::ASTContext&, clang::SourceManager&)':
main.cpp:238:17: error: base operand of '->' has non-pointer type 'interp::Interpretation'
   return interp_->getVecExpr(arg);
                 ^~
main.cpp: In member function 'void CXXMemberCallExprMemberExprMatcher::match(const clang::Expr&, clang::ASTContext&)':
main.cpp:277:7: error: expected ';' before 'call_rhs'
       call_rhs.dump();
       ^~~~~~~~
main.cpp: In function 'domain::VecExpr* handle_member_expr_of_add_call(const clang::Expr*, clang::ASTContext&, clang::SourceManager&)':
main.cpp:294:18: error: ambiguating new declaration of 'domain::VecExpr* handle_member_expr_of_add_call(const clang::Expr*, clang::ASTContext&, clang::SourceManager&)'
 domain::VecExpr *handle_member_expr_of_add_call(const clang::Expr *memexpr, ASTContext &context, SourceManager &sm)
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.cpp:67:24: note: old declaration 'const domain::VecExpr* handle_member_expr_of_add_call(const clang::Expr*, clang::ASTContext&, clang::SourceManager&)'
 const domain::VecExpr *handle_member_expr_of_add_call(const clang::Expr *left, ASTContext &context, SourceManager &sm);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.cpp:319:34: error: base operand of '->' has non-pointer type 'interp::Interpretation'
   domain::VecExpr *expr = interp_->getVecExpr(memexpr);
                                  ^~
main.cpp: At global scope:
main.cpp:408:48: error: 'clang' is a namespace
 const domain::VecExpr *handleCXXDeclStmt(const clang:: *consdecl, ASTContext *context, SourceManager &sm)
                                                ^~~~~
main.cpp:408:57: error: ISO C++ forbids declaration of 'consdecl' with no type [-fpermissive]
 const domain::VecExpr *handleCXXDeclStmt(const clang:: *consdecl, ASTContext *context, SourceManager &sm)
                                                         ^~~~~~~~
main.cpp: In function 'const domain::VecExpr* handleCXXDeclStmt(const int*, clang::ASTContext*, clang::SourceManager&)':
main.cpp:412:34: error: no matching function for call to 'CXXConstructExprMatcher::match(const int*&, clang::ASTContext*&)'
   matcher.match(consdecl, context);
                                  ^
main.cpp:342:8: note: candidate: void CXXConstructExprMatcher::match(const clang::CXXConstructExpr*, clang::ASTContext*)
   void match(const clang::CXXConstructExpr *consdecl, ASTContext *context)
        ^~~~~
main.cpp:342:8: note:   no known conversion for argument 1 from 'const int*' to 'const clang::CXXConstructExpr*'
main.cpp:417:39: error: expected primary-expression before '->' token
   const domain::VecExpr *expr = interp->getVecExpr(consdecl);
                                       ^~
main.cpp: In member function 'virtual void VectorDeclStmtHandler::run(const clang::ast_matchers::MatchFinder::MatchResult&)':
main.cpp:440:5: error: 'declstmt' was not declared in this scope
     declstmt->dump();
     ^~~~~~~~
main.cpp:440:5: note: suggested alternative: 'decltype'
     declstmt->dump();
     ^~~~~~~~
     decltype
main.cpp:451:35: error: base operand of '->' has non-pointer type 'interp::Interpretation'
     domain::VecIdent *id = interp_->mkVecIdent(vardecl);
                                   ^~
main.cpp:472:41: error: expected primary-expression before '->' token
     const domain::VecExpr *expr = interp->getVecExpr(consdecl);
                                         ^~
main.cpp:476:12: error: base operand of '->' has non-pointer type 'interp::Interpretation'
     interp_->mkVecDef(declstmt, id, expr);
            ^~
main.cpp:447:20: warning: unused variable 'sm' [-Wunused-variable]
     SourceManager &sm = context->getSourceManager();
                    ^~
main.cpp: In member function 'virtual void MyFrontendAction::EndSourceFileAction()':
main.cpp:530:23: error: 'domain_domain' was not declared in this scope
     bool consistent = domain_domain->isConsistent();
                       ^~~~~~~~~~~~~
main.cpp: In function 'int main(int, const char**)':
main.cpp:549:10: error: base operand of '->' has non-pointer type 'interp::Interpretation'
   interp_->addSpace("S1");
          ^~
main.cpp:550:10: error: base operand of '->' has non-pointer type 'interp::Interpretation'
   interp_->addSpace("S2");
          ^~
In file included from Checker.h:4:0,
                 from Domain.cpp:3:
Domain.h:51:65: error: expected unqualified-id before '--' token
  VecExpr* mkVecVarExpr(Space& s, const coords::VecLitExpr* e);  -- KEVIN
                                                                 ^~
Domain.h:61:33: error: 'VecDef' in namespace 'coords' does not name a type
  VecDef& mkVecDef(const coords::VecDef* vardecl, const VecIdent* identifier, const VecExpr* expression);
                                 ^~~~~~
Domain.h:101:2: error: 'ToCoordscoords' does not name a type; did you mean 'ToCoords'?
  ToCoordscoords::Coords *c) : coords_(c) {}
  ^~~~~~~~~~~~~~
  ToCoords
Domain.h:105:2: error: expected ';' after class definition
 }
  ^
  ;
Domain.h:111:32: error: expected class-name before '{' token
 class VecIdent : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecIdent::VecIdent(domain::Space&, const coords::VecIdent*)':
Domain.h:113:54: error: type 'domain::ToCoords' is not a direct base of 'domain::VecIdent'
  VecIdent(Space& space, const coords::VecIdent* c) : ToCoords(c), space_(&space) {}
                                                      ^~~~~~~~
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:21: error: expected '<' before '<:' token
   return static_cast<:VecIdent*>getBaseCoords();
                     ^~
Domain.h:116:21: error: expected type-specifier before '<:' token
Domain.h:116:21: error: expected '>' before '<:' token
Domain.h:116:21: error: expected '(' before '<:' token
Domain.h:116:23: error: capture of non-variable 'domain::VecIdent::VecIdent' 
   return static_cast<:VecIdent*>getBaseCoords();
                       ^~~~~~~~
Domain.h:111:32: note: 'class domain::VecIdent domain::VecIdent::VecIdent' declared here
 class VecIdent : public ToCode {
                                ^
Domain.h:116:31: error: expected ',' before '*' token
   return static_cast<:VecIdent*>getBaseCoords();
                               ^
Domain.h:116:31: error: expected identifier before '*' token
Domain.h:116:48: error: expected ']' before ';' token
   return static_cast<:VecIdent*>getBaseCoords();
                                                ^
Domain.h: In lambda function:
Domain.h:116:48: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:48: error: expected ')' before ';' token
Domain.h: At global scope:
Domain.h:125:32: error: expected class-name before '{' token
 class VecExpr  : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)':
Domain.h:127:57: error: type 'domain::ToCoords' is not a direct base of 'domain::VecExpr'
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
                                                         ^~~~~~~~
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:21: error: expected '<' before '<:' token
   return static_cast<:VecExpr*>getBaseCoords();
                     ^~
Domain.h:129:21: error: expected type-specifier before '<:' token
Domain.h:129:21: error: expected '>' before '<:' token
Domain.h:129:21: error: expected '(' before '<:' token
Domain.h:129:23: error: capture of non-variable 'domain::VecExpr::VecExpr' 
   return static_cast<:VecExpr*>getBaseCoords();
                       ^~~~~~~
Domain.h:125:32: note: 'class domain::VecExpr domain::VecExpr::VecExpr' declared here
 class VecExpr  : public ToCode {
                                ^
Domain.h:129:30: error: expected ',' before '*' token
   return static_cast<:VecExpr*>getBaseCoords();
                              ^
Domain.h:129:30: error: expected identifier before '*' token
Domain.h:129:47: error: expected ']' before ';' token
   return static_cast<:VecExpr*>getBaseCoords();
                                               ^
Domain.h: In lambda function:
Domain.h:129:47: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:47: error: expected ')' before ';' token
Domain.h: In member function 'virtual std::__cxx11::string domain::VecExpr::toString() const':
Domain.h:133:7: error: 'ast_' was not declared in this scope
   if (ast_ != NULL) {
       ^~~~
Domain.h:133:7: note: suggested alternative: 'asin'
   if (ast_ != NULL) {
       ^~~~
       asin
Domain.h: At global scope:
Domain.h:147:37: error: expected ';' after class definition
 class VecLitExpr : public VecExpr {}
                                     ^
                                     ;
Domain.h: In member function 'virtual std::__cxx11::string domain::VecVarExpr::toString() const':
Domain.h:154:16: error: 'ast_' was not declared in this scope
   return "(" + ast_->toString() + " )";
                ^~~~
Domain.h:154:16: note: suggested alternative: 'asin'
   return "(" + ast_->toString() + " )";
                ^~~~
                asin
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVarExpr::getCoords()':
Domain.h:157:34: error: expected '(' before 'coords_'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
Domain.h:157:34: error: 'coords_' was not declared in this scope
Domain.h:157:34: note: suggested alternative: 'Coords'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
                                  Coords
Domain.h:157:41: error: expected ')' before ';' token
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                         ^
Domain.h: At global scope:
Domain.h:166:33: error: 'VecAddAddExpr' in namespace 'coords' does not name a type
         Space& s, const coords::VecAddAddExpr* c, domain::VecExpr *mem, domain::VecExpr *arg) :
                                 ^~~~~~~~~~~~~
Domain.h: In constructor 'domain::VecVecAddExpr::VecVecAddExpr(domain::Space&, const int*, domain::VecExpr*, domain::VecExpr*)':
Domain.h:167:46: error: no matching function for call to 'domain::VecExpr::VecExpr(domain::Space&, const int*&)'
    domain::VecExpr(s, c), arg_(arg), mem_(mem) {
                                              ^
Domain.h:127:5: note: candidate: domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
     ^~~~~~~
Domain.h:127:5: note:   no known conversion for argument 2 from 'const int*' to 'const coords::VecExpr*'
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(const domain::VecExpr&)
 class VecExpr  : public ToCode {
       ^~~~~~~
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(domain::VecExpr&&)
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVecAddExpr::getCoords()':
Domain.h:172:37: error: expected '(' before 'coords_'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
Domain.h:172:37: error: 'coords_' was not declared in this scope
Domain.h:172:37: note: suggested alternative: 'Coords'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
                                     Coords
Domain.h:172:44: error: expected ')' before ';' token
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                            ^
Domain.h: At global scope:
Domain.h:188:32: error: expected class-name before '{' token
 class Vector : public ToCode   {
                                ^
Domain.h:190:55: error: 'VecCtorType' has not been declared
  Vector(const Space& s, const coords::Vector* coords, VecCtorType tag) :
                                                       ^~~~~~~~~~~
Domain.h:207:2: error: 'VecCtorType' does not name a type; did you mean 'Vector'?
  VecCtorType tag_;
  ^~~~~~~~~~~
  Vector
Domain.h: In constructor 'domain::Vector::Vector(const domain::Space&, const coords::Vector*, int)':
Domain.h:191:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector'
   ToCoords(c), space_(&s), tag_(tag) {
   ^~~~~~~~
Domain.h:191:12: error: 'c' was not declared in this scope
   ToCoords(c), space_(&s), tag_(tag) {
            ^
Domain.h:191:28: error: class 'domain::Vector' does not have any field named 'tag_'
   ToCoords(c), space_(&s), tag_(tag) {
                            ^~~~
Domain.h: In member function 'bool domain::Vector::isLit()':
Domain.h:193:25: error: 'tag_' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
Domain.h:193:25: note: suggested alternative: 'tanl'
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
                         tanl
Domain.h:193:33: error: 'VEC_LIT' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                                 ^~~~~~~
Domain.h: In member function 'bool domain::Vector::isExpr()':
Domain.h:194:26: error: 'tag_' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
Domain.h:194:26: note: suggested alternative: 'tanl'
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
                          tanl
Domain.h:194:34: error: 'VEC_EXPR' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                                  ^~~~~~~~
Domain.h: In member function 'bool domain::Vector::isVar()':
Domain.h:195:25: error: 'tag_' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
Domain.h:195:25: note: suggested alternative: 'tanl'
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
                         tanl
Domain.h:195:33: error: 'VEC_VAR' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                                 ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector::getCoords() const':
Domain.h:200:30: error: expected '(' before 'coords_'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
Domain.h:200:30: error: 'coords_' was not declared in this scope
Domain.h:200:30: note: suggested alternative: 'ToCoords'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
                              ToCoords
Domain.h:200:37: error: expected ')' before ';' token
   return static_cast<Vector*>coords_;
                                     ^
Domain.h: In constructor 'domain::Vector_Lit::Vector_Lit(const domain::Space&, const coords::Vector*)':
Domain.h:215:16: error: 'VEC_LIT' was not declared in this scope
   Vector(s, c, VEC_LIT) {
                ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Lit::getCoords() const':
Domain.h:218:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
Domain.h:218:34: error: 'coords_' was not declared in this scope
Domain.h:218:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:218:41: error: expected ')' before ';' token
   return static_cast<Vector_Lit*>coords_;
                                         ^
Domain.h: In constructor 'domain::Vector_Expr::Vector_Expr(const domain::Space&, const coords::Vector*, domain::VecExpr*)':
Domain.h:234:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Expr'
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
   ^~~~~~~~
Domain.h:234:32: error: expected primary-expression before ',' token
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                ^
Domain.h:234:34: error: 'VEC_EXPR' was not declared in this scope
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                  ^~~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Expr::getCoords() const':
Domain.h:238:35: error: expected '(' before 'coords_'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
Domain.h:238:35: error: 'coords_' was not declared in this scope
Domain.h:238:35: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
                                   ToCoords
Domain.h:238:42: error: expected ')' before ';' token
   return static_cast<Vector_Expr*>coords_;
                                          ^
Domain.h: At global scope:
Domain.h:248:36: error: expected ';' after class definition
 class Vector_Var : public Vector {}
                                    ^
                                    ;
Domain.h:255:35: error: expected class-name before '{' token
 class Vector_Def : public ToCode  {
                                   ^
Domain.h:257:27: error: 'VecDef' in namespace 'coords' does not name a type
  Vector_Def(const coords::VecDef* c, const domain::VecIdent* identifier, const domain::VecExpr* expr):
                           ^~~~~~
Domain.h:259:16: error: 'VecDef' in namespace 'coords' does not name a type
  const coords::VecDef* getVarDecl() const {return ast_wrapper_; }
                ^~~~~~
Domain.h:269:16: error: 'VecDef' in namespace 'coords' does not name a type
  const coords::VecDef* ast_wrapper_;
                ^~~~~~
Domain.h: In constructor 'domain::Vector_Def::Vector_Def(const int*, const domain::VecIdent*, const domain::VecExpr*)':
Domain.h:258:4: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Def'
    ToCoords(c), identifier_(identifier), expr_(expr) {}
    ^~~~~~~~
Domain.h: In member function 'const coords::Vector_Def* domain::Vector_Def::getCoords() const':
Domain.h:263:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
Domain.h:263:34: error: 'coords_' was not declared in this scope
Domain.h:263:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:263:41: error: expected ')' before ';' token
   return static_cast<Vector_Def*>coords_;
                                         ^
Domain.cpp: In member function 'std::__cxx11::string domain::VecIdent::getName() const':
Domain.cpp:64:75: error: 'vardecl_' was not declared in this scope
     std::cerr << "VecIdent::getName(): vardecl_  addr is " << std::hex << vardecl_->getVarDecl() << "\n";
                                                                           ^~~~~~~~
Domain.cpp: In member function 'domain::VecExpr* domain::Domain::mkVecLitExpr(domain::Space&, const coords::VecLitExpr*)':
Domain.cpp:75:51: error: no matching function for call to 'domain::VecExpr::VecExpr(domain::Space&, const coords::VecLitExpr*&)'
     domain::VecExpr *be = new domain::VecExpr(s, e);
                                                   ^
In file included from Checker.h:4:0,
                 from Domain.cpp:3:
Domain.h:127:5: note: candidate: domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
     ^~~~~~~
Domain.h:127:5: note:   no known conversion for argument 2 from 'const coords::VecLitExpr*' to 'const coords::VecExpr*'
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(const domain::VecExpr&)
 class VecExpr  : public ToCode {
       ^~~~~~~
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(domain::VecExpr&&)
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.cpp: At global scope:
Domain.cpp:95:120: error: no 'domain::VecExpr* domain::Domain::mkVecVecAddExpr(domain::Space&, coords::VecVecAddExpr*, domain::VecExpr*, domain::VecExpr*)' member function declared in class 'domain::Domain'
 domain::VecExpr *Domain::mkVecVecAddExpr(Space &s, coords::VecVecAddExpr *e, domain::VecExpr *mem, domain::VecExpr *arg)
                                                                                                                        ^
Domain.cpp:105:60: error: no 'const domain::VecExpr& domain::VecVecAddExpr::getVecVecAddExprArgL()' member function declared in class 'domain::VecVecAddExpr'
 const domain::VecExpr &VecVecAddExpr::getVecVecAddExprArgL()
                                                            ^
Domain.cpp:110:60: error: no 'const domain::VecExpr& domain::VecVecAddExpr::getVecVecAddExprArgR()' member function declared in class 'domain::VecVecAddExpr'
 const domain::VecExpr &VecVecAddExpr::getVecVecAddExprArgR()
                                                            ^
Domain.cpp:119:9: error: prototype for 'domain::Vector* domain::Domain::mkVector_Lit(domain::Space&, coords::Vector*)' does not match any in class 'domain::Domain'
 Vector* Domain::mkVector_Lit(Space& space, coords::Vector* coords) {
         ^~~~~~
In file included from Checker.h:4:0,
                 from Domain.cpp:3:
Domain.h:56:10: error: candidate is: domain::Vector* domain::Domain::mkVector_Lit(coords::Vector*)
  Vector* mkVector_Lit(coords::Vector* v/*, domain::VecExpr *vec*/);
          ^~~~~~~~~~~~
Domain.cpp:125:73: error: 'domain::Expr' has not been declared
 Vector* Domain::mkVector_Expr(Space& s, coords::Vector* coords, domain::Expr* exp) {
                                                                         ^~~~
Domain.cpp:125:9: error: prototype for 'domain::Vector* domain::Domain::mkVector_Expr(domain::Space&, coords::Vector*, int*)' does not match any in class 'domain::Domain'
 Vector* Domain::mkVector_Expr(Space& s, coords::Vector* coords, domain::Expr* exp) {
         ^~~~~~
In file included from Checker.h:4:0,
                 from Domain.cpp:3:
Domain.h:58:10: error: candidate is: domain::Vector* domain::Domain::mkVector_Expr(coords::Vector*, domain::VecExpr*)
  Vector* mkVector_Expr(coords::Vector* v, domain::VecExpr *vec);
          ^~~~~~~~~~~~~
Domain.cpp:147:40: error: 'VecDef' in namespace 'coords' does not name a type
 VecDef &Domain::mkVecDef(const coords::VecDef *v, const VecIdent* i, const domain::VecExpr* e)
                                        ^~~~~~
Domain.cpp: In member function 'domain::VecDef& domain::Domain::mkVecDef(const int*, const domain::VecIdent*, const domain::VecExpr*)':
Domain.cpp:152:36: error: invalid use of incomplete type 'class domain::VecDef'
     VecDef *bd = new VecDef(v, i, e);
                                    ^
In file included from Checker.h:4:0,
                 from Domain.cpp:3:
Domain.h:34:7: note: forward declaration of 'class domain::VecDef'
 class VecDef;
       ^~~~~~
Domain.cpp: At global scope:
Domain.cpp:163:30: error: no 'void domain::Domain::dumpIdentifiers()' member function declared in class 'domain::Domain'
 void Domain::dumpIdentifiers()
                              ^
Domain.cpp: In member function 'void domain::Domain::dumpVecDefs()':
Domain.cpp:179:15: error: 'domain::VecDef b' has incomplete type
     for (auto b: defs ){
               ^
In file included from /usr/include/c++/7/vector:64:0,
                 from Domain.cpp:1:
/usr/include/c++/7/bits/stl_vector.h: In instantiation of 'void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = domain::VecDef; _Alloc = std::allocator<domain::VecDef>; std::vector<_Tp, _Alloc>::value_type = domain::VecDef]':
Domain.cpp:153:23:   required from here
/usr/include/c++/7/bits/stl_vector.h:945:6: error: cannot increment a pointer to incomplete type 'domain::VecDef'
      ++this->_M_impl._M_finish;
      ^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_algobase.h:67:0,
                 from /usr/include/c++/7/vector:60,
                 from Domain.cpp:1:
/usr/include/c++/7/bits/stl_iterator.h: In instantiation of '__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = domain::VecDef*; _Container = std::vector<domain::VecDef>]':
Domain.cpp:179:18:   required from here
/usr/include/c++/7/bits/stl_iterator.h:802:2: error: cannot increment a pointer to incomplete type 'domain::VecDef'
  ++_M_current;
  ^~~~~~~~~~~~
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/vector:61,
                 from Domain.cpp:1:
/usr/include/c++/7/ext/new_allocator.h: In instantiation of 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = domain::VecDef; _Args = {const domain::VecDef&}; _Tp = domain::VecDef]':
/usr/include/c++/7/bits/alloc_traits.h:475:4:   required from 'static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = domain::VecDef; _Args = {const domain::VecDef&}; _Tp = domain::VecDef; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<domain::VecDef>]'
/usr/include/c++/7/bits/stl_vector.h:943:30:   required from 'void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = domain::VecDef; _Alloc = std::allocator<domain::VecDef>; std::vector<_Tp, _Alloc>::value_type = domain::VecDef]'
Domain.cpp:153:23:   required from here
/usr/include/c++/7/ext/new_allocator.h:136:4: error: invalid use of incomplete type 'class domain::VecDef'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from Checker.h:4:0,
                 from Domain.cpp:3:
Domain.h:34:7: note: forward declaration of 'class domain::VecDef'
 class VecDef;
       ^~~~~~
Makefile:110: recipe for target '../build/ASTMatcher' failed
make: *** [../build/ASTMatcher] Error 1
