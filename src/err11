-----------------------------------------------
Using LLVM_SRC_PATH = /llvm
Using LLVM_BUILD_PATH = /llvm/build
Using LLVM_BIN_PATH = /llvm/build/bin
-----------------------------------------------
g++ -O0 -g -Wall `/llvm/build/bin/llvm-config --cxxflags` -I/llvm/tools/clang/include -I/llvm/build/tools/clang/include ASTToCoords.cpp AST.cpp Interpretation.cpp Oracle.cpp Checker.cpp Coords.cpp CoordsToDomain.cpp main.cpp Domain.cpp \
	-Wl,--start-group -lclangAST -lclangASTMatchers -lclangAnalysis -lclangBasic -lclangDriver -lclangEdit -lclangFrontend -lclangFrontendTool -lclangLex -lclangParse -lclangSema -lclangEdit -lclangRewrite -lclangRewriteFrontend -lclangStaticAnalyzerFrontend -lclangStaticAnalyzerCheckers -lclangStaticAnalyzerCore -lclangCrossTU -lclangIndex -lclangSerialization -lclangToolingCore -lclangTooling -lclangFormat -Wl,--end-group `/llvm/build/bin/llvm-config --ldflags --libs --system-libs` -o ../build/ASTMatcher
In file included from ASTToCoords.cpp:1:0:
ASTToCoords.h:1:7: error: stray '#' in program
 VecVec#ifndef ASTTOCOORDS_H
       ^
In file included from ASTToCoords.cpp:1:0:
ASTToCoords.h:73:2: error: #endif without #if
 #endif
  ^~~~~
In file included from ASTToCoords.cpp:1:0:
ASTToCoords.h:1:1: error: 'VecVec' does not name a type
 VecVec#ifndef ASTTOCOORDS_H
 ^~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/new:40,
                 from /llvm/include/llvm/Support/Compiler.h:19,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/type_traits:362:31: error: 'std::size_t' has not been declared
   template<typename _Tp, std::size_t _Size>
                               ^~~~~~
/usr/include/c++/7/type_traits:363:25: error: '_Size' was not declared in this scope
     struct is_array<_Tp[_Size]>
                         ^~~~~
/usr/include/c++/7/type_traits:363:31: error: template argument 1 is invalid
     struct is_array<_Tp[_Size]>
                               ^
/usr/include/c++/7/type_traits:561:42: error: 'nullptr_t' is not a member of 'std'
     struct __is_null_pointer_helper<std::nullptr_t>
                                          ^~~~~~~~~
/usr/include/c++/7/type_traits:561:42: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:444:29: note:   'nullptr_t'
   typedef decltype(nullptr) nullptr_t;
                             ^~~~~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/new:40,
                 from /llvm/include/llvm/Support/Compiler.h:19,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/type_traits:561:42: error: 'nullptr_t' is not a member of 'std'
     struct __is_null_pointer_helper<std::nullptr_t>
                                          ^~~~~~~~~
/usr/include/c++/7/type_traits:561:42: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:444:29: note:   'nullptr_t'
   typedef decltype(nullptr) nullptr_t;
                             ^~~~~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/new:40,
                 from /llvm/include/llvm/Support/Compiler.h:19,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/type_traits:561:51: error: template argument 1 is invalid
     struct __is_null_pointer_helper<std::nullptr_t>
                                                   ^
/usr/include/c++/7/type_traits:1464:37: error: 'size_t' is not a member of 'std'
     : public integral_constant<std::size_t, __alignof__(_Tp)> { };
                                     ^~~~~~
/usr/include/c++/7/type_traits:1464:37: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/new:40,
                 from /llvm/include/llvm/Support/Compiler.h:19,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/type_traits:1464:37: error: 'size_t' is not a member of 'std'
     : public integral_constant<std::size_t, __alignof__(_Tp)> { };
                                     ^~~~~~
/usr/include/c++/7/type_traits:1464:37: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/new:40,
                 from /llvm/include/llvm/Support/Compiler.h:19,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/type_traits:1464:61: error: template argument 1 is invalid
     : public integral_constant<std::size_t, __alignof__(_Tp)> { };
                                                             ^
/usr/include/c++/7/type_traits:1464:61: note: invalid template non-type parameter
/usr/include/c++/7/type_traits:1469:37: error: 'size_t' is not a member of 'std'
     : public integral_constant<std::size_t, 0> { };
                                     ^~~~~~
/usr/include/c++/7/type_traits:1469:37: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/new:40,
                 from /llvm/include/llvm/Support/Compiler.h:19,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/type_traits:1469:37: error: 'size_t' is not a member of 'std'
     : public integral_constant<std::size_t, 0> { };
                                     ^~~~~~
/usr/include/c++/7/type_traits:1469:37: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/new:40,
                 from /llvm/include/llvm/Support/Compiler.h:19,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/type_traits:1469:46: error: template argument 1 is invalid
     : public integral_constant<std::size_t, 0> { };
                                              ^
/usr/include/c++/7/type_traits:1469:46: note: invalid template non-type parameter
/usr/include/c++/7/type_traits:1471:31: error: 'std::size_t' has not been declared
   template<typename _Tp, std::size_t _Size>
                               ^~~~~~
/usr/include/c++/7/type_traits:1472:21: error: '_Size' was not declared in this scope
     struct rank<_Tp[_Size]>
                     ^~~~~
/usr/include/c++/7/type_traits:1472:27: error: template argument 1 is invalid
     struct rank<_Tp[_Size]>
                           ^
/usr/include/c++/7/type_traits:1473:37: error: 'size_t' is not a member of 'std'
     : public integral_constant<std::size_t, 1 + rank<_Tp>::value> { };
                                     ^~~~~~
/usr/include/c++/7/type_traits:1473:37: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/new:40,
                 from /llvm/include/llvm/Support/Compiler.h:19,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/type_traits:1473:37: error: 'size_t' is not a member of 'std'
     : public integral_constant<std::size_t, 1 + rank<_Tp>::value> { };
                                     ^~~~~~
/usr/include/c++/7/type_traits:1473:37: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/new:40,
                 from /llvm/include/llvm/Support/Compiler.h:19,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/type_traits:1473:65: error: template argument 1 is invalid
     : public integral_constant<std::size_t, 1 + rank<_Tp>::value> { };
                                                                 ^
/usr/include/c++/7/type_traits:1473:65: note: invalid template non-type parameter
/usr/include/c++/7/type_traits:1477:37: error: 'size_t' is not a member of 'std'
     : public integral_constant<std::size_t, 1 + rank<_Tp>::value> { };
                                     ^~~~~~
/usr/include/c++/7/type_traits:1477:37: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/new:40,
                 from /llvm/include/llvm/Support/Compiler.h:19,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/type_traits:1477:37: error: 'size_t' is not a member of 'std'
     : public integral_constant<std::size_t, 1 + rank<_Tp>::value> { };
                                     ^~~~~~
/usr/include/c++/7/type_traits:1477:37: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/new:40,
                 from /llvm/include/llvm/Support/Compiler.h:19,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/type_traits:1477:65: error: template argument 1 is invalid
     : public integral_constant<std::size_t, 1 + rank<_Tp>::value> { };
                                                                 ^
/usr/include/c++/7/type_traits:1477:65: note: invalid template non-type parameter
/usr/include/c++/7/type_traits:1482:37: error: 'size_t' is not a member of 'std'
     : public integral_constant<std::size_t, 0> { };
                                     ^~~~~~
/usr/include/c++/7/type_traits:1482:37: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/new:40,
                 from /llvm/include/llvm/Support/Compiler.h:19,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/type_traits:1482:37: error: 'size_t' is not a member of 'std'
     : public integral_constant<std::size_t, 0> { };
                                     ^~~~~~
/usr/include/c++/7/type_traits:1482:37: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/new:40,
                 from /llvm/include/llvm/Support/Compiler.h:19,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/type_traits:1482:46: error: template argument 1 is invalid
     : public integral_constant<std::size_t, 0> { };
                                              ^
/usr/include/c++/7/type_traits:1482:46: note: invalid template non-type parameter
/usr/include/c++/7/type_traits:1484:47: error: 'std::size_t' has not been declared
   template<typename _Tp, unsigned _Uint, std::size_t _Size>
                                               ^~~~~~
/usr/include/c++/7/type_traits:1485:23: error: '_Size' was not declared in this scope
     struct extent<_Tp[_Size], _Uint>
                       ^~~~~
/usr/include/c++/7/type_traits:1485:36: error: template argument 1 is invalid
     struct extent<_Tp[_Size], _Uint>
                                    ^
/usr/include/c++/7/type_traits:1486:37: error: 'size_t' is not a member of 'std'
     : public integral_constant<std::size_t,
                                     ^~~~~~
/usr/include/c++/7/type_traits:1486:37: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/new:40,
                 from /llvm/include/llvm/Support/Compiler.h:19,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/type_traits:1486:37: error: 'size_t' is not a member of 'std'
     : public integral_constant<std::size_t,
                                     ^~~~~~
/usr/include/c++/7/type_traits:1486:37: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/new:40,
                 from /llvm/include/llvm/Support/Compiler.h:19,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/type_traits:1487:24: error: '_Size' was not declared in this scope
           _Uint == 0 ? _Size : extent<_Tp,
                        ^~~~~
/usr/include/c++/7/type_traits:1488:28: error: template argument 1 is invalid
           _Uint - 1>::value>
                            ^
/usr/include/c++/7/type_traits:1488:28: note: invalid template non-type parameter
/usr/include/c++/7/type_traits:1493:37: error: 'size_t' is not a member of 'std'
     : public integral_constant<std::size_t,
                                     ^~~~~~
/usr/include/c++/7/type_traits:1493:37: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/new:40,
                 from /llvm/include/llvm/Support/Compiler.h:19,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/type_traits:1493:37: error: 'size_t' is not a member of 'std'
     : public integral_constant<std::size_t,
                                     ^~~~~~
/usr/include/c++/7/type_traits:1493:37: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/new:40,
                 from /llvm/include/llvm/Support/Compiler.h:19,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/type_traits:1495:31: error: template argument 1 is invalid
              _Uint - 1>::value>
                               ^
/usr/include/c++/7/type_traits:1495:31: note: invalid template non-type parameter
/usr/include/c++/7/type_traits:1944:31: error: 'std::size_t' has not been declared
   template<typename _Tp, std::size_t _Size>
                               ^~~~~~
/usr/include/c++/7/type_traits:1945:30: error: '_Size' was not declared in this scope
     struct remove_extent<_Tp[_Size]>
                              ^~~~~
/usr/include/c++/7/type_traits:1945:36: error: template argument 1 is invalid
     struct remove_extent<_Tp[_Size]>
                                    ^
/usr/include/c++/7/type_traits:1957:31: error: 'std::size_t' has not been declared
   template<typename _Tp, std::size_t _Size>
                               ^~~~~~
/usr/include/c++/7/type_traits:1958:35: error: '_Size' was not declared in this scope
     struct remove_all_extents<_Tp[_Size]>
                                   ^~~~~
/usr/include/c++/7/type_traits:1958:41: error: template argument 1 is invalid
     struct remove_all_extents<_Tp[_Size]>
                                         ^
/usr/include/c++/7/type_traits:2016:17: error: 'std::size_t' has not been declared
   template<std::size_t _Len>
                 ^~~~~~
/usr/include/c++/7/type_traits:2021:23: error: '_Len' was not declared in this scope
  unsigned char __data[_Len];
                       ^~~~
/usr/include/c++/7/type_traits:2036:17: error: 'std::size_t' has not been declared
   template<std::size_t _Len, std::size_t _Align =
                 ^~~~~~
/usr/include/c++/7/type_traits:2036:35: error: 'std::size_t' has not been declared
   template<std::size_t _Len, std::size_t _Align =
                                   ^~~~~~
/usr/include/c++/7/type_traits:2037:48: error: '_Len' was not declared in this scope
     __alignof__(typename __aligned_storage_msa<_Len>::__type)>
                                                ^~~~
/usr/include/c++/7/type_traits:2037:52: error: template argument 1 is invalid
     __alignof__(typename __aligned_storage_msa<_Len>::__type)>
                                                    ^
/usr/include/c++/7/type_traits:2042:23: error: '_Len' was not declared in this scope
  unsigned char __data[_Len];
                       ^~~~
/usr/include/c++/7/type_traits:2043:37: error: '_Align' was not declared in this scope
  struct __attribute__((__aligned__((_Align)))) { } __align;
                                     ^~~~~~
In file included from /llvm/include/llvm/Support/Compiler.h:19:0,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/new:120:31: error: declaration of 'operator new' as non-function
 void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
                               ^
/usr/include/c++/7/new:120:25: error: 'size_t' is not a member of 'std'
 void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
                         ^~~~~~
/usr/include/c++/7/new:120:25: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /llvm/include/llvm/Support/Compiler.h:19:0,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/new:122:33: error: declaration of 'operator new []' as non-function
 void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
                                 ^
/usr/include/c++/7/new:122:27: error: 'size_t' is not a member of 'std'
 void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
                           ^~~~~~
/usr/include/c++/7/new:122:27: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /llvm/include/llvm/Support/Compiler.h:19:0,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/new:134:25: error: declaration of 'operator new' as non-function
 void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
                         ^~~~~~
/usr/include/c++/7/new:134:25: error: 'size_t' is not a member of 'std'
/usr/include/c++/7/new:134:25: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /llvm/include/llvm/Support/Compiler.h:19:0,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/new:134:33: error: expected primary-expression before 'const'
 void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
                                 ^~~~~
/usr/include/c++/7/new:136:27: error: declaration of 'operator new []' as non-function
 void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
                           ^~~~~~
/usr/include/c++/7/new:136:27: error: 'size_t' is not a member of 'std'
/usr/include/c++/7/new:136:27: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /llvm/include/llvm/Support/Compiler.h:19:0,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/new:136:35: error: expected primary-expression before 'const'
 void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
                                   ^~~~~
/usr/include/c++/7/new:168:32: error: declaration of 'operator new' as non-function
 inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
                                ^~~~~~
/usr/include/c++/7/new:168:32: error: 'size_t' is not a member of 'std'
/usr/include/c++/7/new:168:32: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /llvm/include/llvm/Support/Compiler.h:19:0,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/new:168:40: error: expected primary-expression before 'void'
 inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
                                        ^~~~
/usr/include/c++/7/new:170:34: error: declaration of 'operator new []' as non-function
 inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
                                  ^~~~~~
/usr/include/c++/7/new:170:34: error: 'size_t' is not a member of 'std'
/usr/include/c++/7/new:170:34: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /llvm/include/llvm/Support/Compiler.h:19:0,
                 from /llvm/include/llvm/ADT/APInt.h:18,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/new:170:42: error: expected primary-expression before 'void'
 inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
                                          ^~~~
In file included from /usr/include/c++/7/cmath:43:0,
                 from /llvm/include/llvm-c/DataTypes.h:28,
                 from /llvm/include/llvm/Support/DataTypes.h:16,
                 from /llvm/include/llvm/Support/SwapByteOrder.h:18,
                 from /llvm/include/llvm/Support/MathExtras.h:17,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/type_traits.h:162:35: error: 'bool __gnu_cxx::__is_null_pointer' redeclared as different kind of symbol
   __is_null_pointer(std::nullptr_t)
                                   ^
/usr/include/c++/7/ext/type_traits.h:157:5: note: previous declaration 'template<class _Type> bool __gnu_cxx::__is_null_pointer(_Type)'
     __is_null_pointer(_Type)
     ^~~~~~~~~~~~~~~~~
/usr/include/c++/7/ext/type_traits.h:162:26: error: 'nullptr_t' is not a member of 'std'
   __is_null_pointer(std::nullptr_t)
                          ^~~~~~~~~
/usr/include/c++/7/ext/type_traits.h:162:26: note: suggested alternative: '__is_nullptr_t'
   __is_null_pointer(std::nullptr_t)
                          ^~~~~~~~~
                          __is_nullptr_t
In file included from /usr/include/c++/7/utility:70:0,
                 from /usr/include/c++/7/algorithm:60,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_pair.h:86:17: error: 'std::size_t' has not been declared
   template<std::size_t...>
                 ^~~~~~
/usr/include/c++/7/bits/stl_pair.h:429:41: error: 'std::size_t' has not been declared
       template<typename... _Args1, std::size_t... _Indexes1,
                                         ^~~~~~
/usr/include/c++/7/bits/stl_pair.h:430:41: error: 'std::size_t' has not been declared
                typename... _Args2, std::size_t... _Indexes2>
                                         ^~~~~~
/usr/include/c++/7/bits/stl_pair.h:432:27: error: '_Indexes1' was not declared in this scope
              _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>);
                           ^~~~~~~~~
/usr/include/c++/7/bits/stl_pair.h:432:36: error: expected parameter pack before '...'
              _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>);
                                    ^~~
/usr/include/c++/7/bits/stl_pair.h:432:39: error: template argument 1 is invalid
              _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>);
                                       ^
/usr/include/c++/7/bits/stl_pair.h:432:55: error: '_Indexes2' was not declared in this scope
              _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>);
                                                       ^~~~~~~~~
/usr/include/c++/7/bits/stl_pair.h:432:55: note: suggested alternative: '__ldexpf32'
              _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>);
                                                       ^~~~~~~~~
                                                       __ldexpf32
/usr/include/c++/7/bits/stl_pair.h:432:64: error: expected parameter pack before '...'
              _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>);
                                                                ^~~
/usr/include/c++/7/bits/stl_pair.h:432:67: error: template argument 1 is invalid
              _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>);
                                                                   ^
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:128:17: error: 'std::size_t' has not been declared
   template<std::size_t __i, typename _Tp>
                 ^~~~~~
/usr/include/c++/7/utility:129:12: error: no default argument for '_Tp'
     struct tuple_element;
            ^~~~~~~~~~~~~
/usr/include/c++/7/utility:132:17: error: 'std::size_t' has not been declared
   template<std::size_t __i, typename _Tp>
                 ^~~~~~
/usr/include/c++/7/utility:133:54: error: '__i' was not declared in this scope
     using __tuple_element_t = typename tuple_element<__i, _Tp>::type;
                                                      ^~~
/usr/include/c++/7/utility:133:54: note: suggested alternative: '__N'
     using __tuple_element_t = typename tuple_element<__i, _Tp>::type;
                                                      ^~~
                                                      __N
/usr/include/c++/7/utility:133:62: error: template argument 1 is invalid
     using __tuple_element_t = typename tuple_element<__i, _Tp>::type;
                                                              ^
/usr/include/c++/7/utility:135:17: error: 'std::size_t' has not been declared
   template<std::size_t __i, typename _Tp>
                 ^~~~~~
/usr/include/c++/7/utility:136:26: error: '__i' was not declared in this scope
     struct tuple_element<__i, const _Tp>
                          ^~~
/usr/include/c++/7/utility:136:26: note: suggested alternative: '__N'
     struct tuple_element<__i, const _Tp>
                          ^~~
                          __N
/usr/include/c++/7/utility:136:40: error: template argument 1 is invalid
     struct tuple_element<__i, const _Tp>
                                        ^
/usr/include/c++/7/utility:141:17: error: 'std::size_t' has not been declared
   template<std::size_t __i, typename _Tp>
                 ^~~~~~
/usr/include/c++/7/utility:142:26: error: '__i' was not declared in this scope
     struct tuple_element<__i, volatile _Tp>
                          ^~~
/usr/include/c++/7/utility:142:26: note: suggested alternative: '__N'
     struct tuple_element<__i, volatile _Tp>
                          ^~~
                          __N
/usr/include/c++/7/utility:142:43: error: template argument 1 is invalid
     struct tuple_element<__i, volatile _Tp>
                                           ^
/usr/include/c++/7/utility:147:17: error: 'std::size_t' has not been declared
   template<std::size_t __i, typename _Tp>
                 ^~~~~~
/usr/include/c++/7/utility:148:26: error: '__i' was not declared in this scope
     struct tuple_element<__i, const volatile _Tp>
                          ^~~
/usr/include/c++/7/utility:148:26: note: suggested alternative: '__N'
     struct tuple_element<__i, const volatile _Tp>
                          ^~~
                          __N
/usr/include/c++/7/utility:148:49: error: template argument 1 is invalid
     struct tuple_element<__i, const volatile _Tp>
                                                 ^
/usr/include/c++/7/utility:170:37: error: 'size_t' is not a member of 'std'
     : public integral_constant<std::size_t, 2> { };
                                     ^~~~~~
/usr/include/c++/7/utility:170:37: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:170:37: error: 'size_t' is not a member of 'std'
     : public integral_constant<std::size_t, 2> { };
                                     ^~~~~~
/usr/include/c++/7/utility:170:37: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:170:46: error: template argument 1 is invalid
     : public integral_constant<std::size_t, 2> { };
                                              ^
/usr/include/c++/7/utility:170:46: note: invalid template non-type parameter
/usr/include/c++/7/utility:182:17: error: 'std::size_t' has not been declared
   template<std::size_t _Int>
                 ^~~~~~
/usr/include/c++/7/utility:223:17: error: 'std::size_t' has not been declared
   template<std::size_t _Int, class _Tp1, class _Tp2>
                 ^~~~~~
/usr/include/c++/7/utility:224:38: error: '_Int' was not declared in this scope
     constexpr typename tuple_element<_Int, std::pair<_Tp1, _Tp2>>::type&
                                      ^~~~
/usr/include/c++/7/utility:224:38: note: suggested alternative: 'rint'
     constexpr typename tuple_element<_Int, std::pair<_Tp1, _Tp2>>::type&
                                      ^~~~
                                      rint
/usr/include/c++/7/utility:224:64: error: template argument 1 is invalid
     constexpr typename tuple_element<_Int, std::pair<_Tp1, _Tp2>>::type&
                                                                ^~
/usr/include/c++/7/utility: In function 'constexpr int& std::get(std::pair<_Tp1, _Tp2>&)':
/usr/include/c++/7/utility:226:25: error: '_Int' was not declared in this scope
     { return __pair_get<_Int>::__get(__in); }
                         ^~~~
/usr/include/c++/7/utility:226:25: note: suggested alternative: 'rint'
     { return __pair_get<_Int>::__get(__in); }
                         ^~~~
                         rint
/usr/include/c++/7/utility:226:29: error: template argument 1 is invalid
     { return __pair_get<_Int>::__get(__in); }
                             ^
/usr/include/c++/7/utility: At global scope:
/usr/include/c++/7/utility:228:17: error: 'std::size_t' has not been declared
   template<std::size_t _Int, class _Tp1, class _Tp2>
                 ^~~~~~
/usr/include/c++/7/utility:229:38: error: '_Int' was not declared in this scope
     constexpr typename tuple_element<_Int, std::pair<_Tp1, _Tp2>>::type&&
                                      ^~~~
/usr/include/c++/7/utility:229:38: note: suggested alternative: 'rint'
     constexpr typename tuple_element<_Int, std::pair<_Tp1, _Tp2>>::type&&
                                      ^~~~
                                      rint
/usr/include/c++/7/utility:229:64: error: template argument 1 is invalid
     constexpr typename tuple_element<_Int, std::pair<_Tp1, _Tp2>>::type&&
                                                                ^~
/usr/include/c++/7/utility: In function 'constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)':
/usr/include/c++/7/utility:231:25: error: '_Int' was not declared in this scope
     { return __pair_get<_Int>::__move_get(std::move(__in)); }
                         ^~~~
/usr/include/c++/7/utility:231:25: note: suggested alternative: 'rint'
     { return __pair_get<_Int>::__move_get(std::move(__in)); }
                         ^~~~
                         rint
/usr/include/c++/7/utility:231:29: error: template argument 1 is invalid
     { return __pair_get<_Int>::__move_get(std::move(__in)); }
                             ^
/usr/include/c++/7/utility: At global scope:
/usr/include/c++/7/utility:233:17: error: 'std::size_t' has not been declared
   template<std::size_t _Int, class _Tp1, class _Tp2>
                 ^~~~~~
/usr/include/c++/7/utility:234:44: error: '_Int' was not declared in this scope
     constexpr const typename tuple_element<_Int, std::pair<_Tp1, _Tp2>>::type&
                                            ^~~~
/usr/include/c++/7/utility:234:44: note: suggested alternative: 'rint'
     constexpr const typename tuple_element<_Int, std::pair<_Tp1, _Tp2>>::type&
                                            ^~~~
                                            rint
/usr/include/c++/7/utility:234:70: error: template argument 1 is invalid
     constexpr const typename tuple_element<_Int, std::pair<_Tp1, _Tp2>>::type&
                                                                      ^~
/usr/include/c++/7/utility: In function 'constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)':
/usr/include/c++/7/utility:236:25: error: '_Int' was not declared in this scope
     { return __pair_get<_Int>::__const_get(__in); }
                         ^~~~
/usr/include/c++/7/utility:236:25: note: suggested alternative: 'rint'
     { return __pair_get<_Int>::__const_get(__in); }
                         ^~~~
                         rint
/usr/include/c++/7/utility:236:29: error: template argument 1 is invalid
     { return __pair_get<_Int>::__const_get(__in); }
                             ^
/usr/include/c++/7/utility: At global scope:
/usr/include/c++/7/utility:289:43: note: invalid template non-type parameter
     struct _Itup_cat<_Index_tuple<_Ind1...>, _Index_tuple<_Ind2...>>
                                           ^
/usr/include/c++/7/utility:289:64: note: invalid template non-type parameter
     struct _Itup_cat<_Index_tuple<_Ind1...>, _Index_tuple<_Ind2...>>
                                                                ^~~
/usr/include/c++/7/utility:289:67: error: template argument 1 is invalid
     struct _Itup_cat<_Index_tuple<_Ind1...>, _Index_tuple<_Ind2...>>
                                                                   ^~
/usr/include/c++/7/utility:289:67: error: template argument 2 is invalid
/usr/include/c++/7/utility:304:29: note: invalid template non-type parameter
       typedef _Index_tuple<0> __type;
                             ^
In file included from /usr/include/c++/7/ext/alloc_traits.h:36:0,
                 from /usr/include/c++/7/bits/stl_construct.h:61,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/alloc_traits.h:404:36: error: 'ptrdiff_t' in namespace 'std' does not name a type
       using difference_type = std::ptrdiff_t;
                                    ^~~~~~~~~
/usr/include/c++/7/bits/alloc_traits.h:407:30: error: 'size_t' in namespace 'std' does not name a type
       using size_type = std::size_t;
                              ^~~~~~
/usr/include/c++/7/bits/alloc_traits.h:435:37: error: 'size_type' has not been declared
       allocate(allocator_type& __a, size_type __n)
                                     ^~~~~~~~~
/usr/include/c++/7/bits/alloc_traits.h:449:37: error: 'size_type' has not been declared
       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
                                     ^~~~~~~~~
/usr/include/c++/7/bits/alloc_traits.h:461:52: error: 'size_type' has not been declared
       deallocate(allocator_type& __a, pointer __p, size_type __n)
                                                    ^~~~~~~~~
/usr/include/c++/7/bits/alloc_traits.h:494:14: error: 'size_type' does not name a type; did you mean 'true_type'?
       static size_type
              ^~~~~~~~~
              true_type
In file included from /usr/include/c++/7/bits/stl_algo.h:62:0,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_tempbuf.h: In function 'std::pair<_Tp*, long int> std::get_temporary_buffer(ptrdiff_t)':
/usr/include/c++/7/bits/stl_tempbuf.h:95:20: error: no matching function for call to 'operator new(long unsigned int, const std::nothrow_t&)'
        std::nothrow));
                    ^
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/ASTContext.h:17:0,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:26:7: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 void *operator new(size_t Bytes, const clang::ASTContext &C,
       ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:26:7: note:   no known conversion for argument 2 from 'const std::nothrow_t' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/APInt.h:19:0,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/MathExtras.h: At global scope:
/llvm/include/llvm/Support/MathExtras.h:53:28: error: 'std::size_t' has not been declared
 template <typename T, std::size_t SizeOfT> struct TrailingZerosCounter {
                            ^~~~~~
/llvm/include/llvm/Support/MathExtras.h:54:15: error: 'size_t' in namespace 'std' does not name a type
   static std::size_t count(T Val, ZeroBehavior) {
               ^~~~~~
/llvm/include/llvm/Support/MathExtras.h:119:6: error: 'size_t' in namespace 'std' does not name a type
 std::size_t countTrailingZeros(T Val, ZeroBehavior ZB = ZB_Width) {
      ^~~~~~
/llvm/include/llvm/Support/MathExtras.h:127:28: error: 'std::size_t' has not been declared
 template <typename T, std::size_t SizeOfT> struct LeadingZerosCounter {
                            ^~~~~~
/llvm/include/llvm/Support/MathExtras.h:128:15: error: 'size_t' in namespace 'std' does not name a type
   static std::size_t count(T Val, ZeroBehavior) {
               ^~~~~~
/llvm/include/llvm/Support/MathExtras.h:188:6: error: 'size_t' in namespace 'std' does not name a type
 std::size_t countLeadingZeros(T Val, ZeroBehavior ZB = ZB_Width) {
      ^~~~~~
/llvm/include/llvm/Support/MathExtras.h:461:6: error: 'size_t' in namespace 'std' does not name a type
 std::size_t countLeadingOnes(T Value, ZeroBehavior ZB = ZB_Width) {
      ^~~~~~
/llvm/include/llvm/Support/MathExtras.h:477:6: error: 'size_t' in namespace 'std' does not name a type
 std::size_t countTrailingOnes(T Value, ZeroBehavior ZB = ZB_Width) {
      ^~~~~~
/llvm/include/llvm/Support/MathExtras.h:485:28: error: 'std::size_t' has not been declared
 template <typename T, std::size_t SizeOfT> struct PopulationCounter {
                            ^~~~~~
/llvm/include/llvm/Support/MathExtras.h: In static member function 'static unsigned int llvm::detail::PopulationCounter<T, <declaration error> >::count(T)':
/llvm/include/llvm/Support/MathExtras.h:488:19: error: 'SizeOfT' was not declared in this scope
     static_assert(SizeOfT <= 4, "Not implemented!");
                   ^~~~~~~
/llvm/include/llvm/Support/MathExtras.h: In function 'unsigned int llvm::Log2_32(uint32_t)':
/llvm/include/llvm/Support/MathExtras.h:539:15: error: 'countLeadingZeros' was not declared in this scope
   return 31 - countLeadingZeros(Value);
               ^~~~~~~~~~~~~~~~~
/llvm/include/llvm/Support/MathExtras.h:539:15: note: suggested alternative: 'maskLeadingZeros'
   return 31 - countLeadingZeros(Value);
               ^~~~~~~~~~~~~~~~~
               maskLeadingZeros
/llvm/include/llvm/Support/MathExtras.h: In function 'unsigned int llvm::Log2_64(uint64_t)':
/llvm/include/llvm/Support/MathExtras.h:545:15: error: 'countLeadingZeros' was not declared in this scope
   return 63 - countLeadingZeros(Value);
               ^~~~~~~~~~~~~~~~~
/llvm/include/llvm/Support/MathExtras.h:545:15: note: suggested alternative: 'maskLeadingZeros'
   return 63 - countLeadingZeros(Value);
               ^~~~~~~~~~~~~~~~~
               maskLeadingZeros
/llvm/include/llvm/Support/MathExtras.h: In function 'unsigned int llvm::Log2_32_Ceil(uint32_t)':
/llvm/include/llvm/Support/MathExtras.h:552:15: error: 'countLeadingZeros' was not declared in this scope
   return 32 - countLeadingZeros(Value - 1);
               ^~~~~~~~~~~~~~~~~
/llvm/include/llvm/Support/MathExtras.h:552:15: note: suggested alternative: 'maskLeadingZeros'
   return 32 - countLeadingZeros(Value - 1);
               ^~~~~~~~~~~~~~~~~
               maskLeadingZeros
/llvm/include/llvm/Support/MathExtras.h: In function 'unsigned int llvm::Log2_64_Ceil(uint64_t)':
/llvm/include/llvm/Support/MathExtras.h:558:15: error: 'countLeadingZeros' was not declared in this scope
   return 64 - countLeadingZeros(Value - 1);
               ^~~~~~~~~~~~~~~~~
/llvm/include/llvm/Support/MathExtras.h:558:15: note: suggested alternative: 'maskLeadingZeros'
   return 64 - countLeadingZeros(Value - 1);
               ^~~~~~~~~~~~~~~~~
               maskLeadingZeros
/llvm/include/llvm/Support/MathExtras.h: In function 'uint64_t llvm::PowerOf2Floor(uint64_t)':
/llvm/include/llvm/Support/MathExtras.h:653:24: error: 'countLeadingZeros' was not declared in this scope
   return 1ull << (63 - countLeadingZeros(A, ZB_Undefined));
                        ^~~~~~~~~~~~~~~~~
/llvm/include/llvm/Support/MathExtras.h:653:24: note: suggested alternative: 'maskLeadingZeros'
   return 1ull << (63 - countLeadingZeros(A, ZB_Undefined));
                        ^~~~~~~~~~~~~~~~~
                        maskLeadingZeros
In file included from /usr/include/c++/7/string:40:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/char_traits.h: At global scope:
/usr/include/c++/7/bits/char_traits.h:108:66: error: 'std::size_t' has not been declared
       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
                                                                  ^~~~~~
/usr/include/c++/7/bits/char_traits.h:110:40: error: 'size_t' in namespace 'std' does not name a type
       static _GLIBCXX14_CONSTEXPR std::size_t
                                        ^~~~~~
/usr/include/c++/7/bits/char_traits.h:114:39: error: 'std::size_t' has not been declared
       find(const char_type* __s, std::size_t __n, const char_type& __a);
                                       ^~~~~~
/usr/include/c++/7/bits/char_traits.h:117:57: error: 'std::size_t' has not been declared
       move(char_type* __s1, const char_type* __s2, std::size_t __n);
                                                         ^~~~~~
/usr/include/c++/7/bits/char_traits.h:120:57: error: 'std::size_t' has not been declared
       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
                                                         ^~~~~~
/usr/include/c++/7/bits/char_traits.h:123:35: error: 'std::size_t' has not been declared
       assign(char_type* __s, std::size_t __n, char_type __a);
                                   ^~~~~~
/usr/include/c++/7/bits/char_traits.h:149:64: error: 'std::size_t' has not been declared
     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
                                                                ^~~~~~
/usr/include/c++/7/bits/char_traits.h: In static member function 'static int __gnu_cxx::char_traits<_CharT>::compare(const char_type*, const char_type*, int)':
/usr/include/c++/7/bits/char_traits.h:151:17: error: 'size_t' is not a member of 'std'
       for (std::size_t __i = 0; __i < __n; ++__i)
                 ^~~~~~
/usr/include/c++/7/bits/char_traits.h:151:17: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/string:40:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/char_traits.h:151:33: error: '__i' was not declared in this scope
       for (std::size_t __i = 0; __i < __n; ++__i)
                                 ^~~
/usr/include/c++/7/bits/char_traits.h:151:33: note: suggested alternative: '__n'
       for (std::size_t __i = 0; __i < __n; ++__i)
                                 ^~~
                                 __n
/usr/include/c++/7/bits/char_traits.h: At global scope:
/usr/include/c++/7/bits/char_traits.h:160:31: error: 'size_t' in namespace 'std' does not name a type
     _GLIBCXX14_CONSTEXPR std::size_t
                               ^~~~~~
/usr/include/c++/7/bits/char_traits.h:173:37: error: 'std::size_t' has not been declared
     find(const char_type* __s, std::size_t __n, const char_type& __a)
                                     ^~~~~~
/usr/include/c++/7/bits/char_traits.h: In static member function 'static const char_type* __gnu_cxx::char_traits<_CharT>::find(const char_type*, int, const char_type&)':
/usr/include/c++/7/bits/char_traits.h:175:17: error: 'size_t' is not a member of 'std'
       for (std::size_t __i = 0; __i < __n; ++__i)
                 ^~~~~~
/usr/include/c++/7/bits/char_traits.h:175:17: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/string:40:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/char_traits.h:175:33: error: '__i' was not declared in this scope
       for (std::size_t __i = 0; __i < __n; ++__i)
                                 ^~~
/usr/include/c++/7/bits/char_traits.h:175:33: note: suggested alternative: '__s'
       for (std::size_t __i = 0; __i < __n; ++__i)
                                 ^~~
                                 __s
/usr/include/c++/7/bits/char_traits.h: At global scope:
/usr/include/c++/7/bits/char_traits.h:184:55: error: 'std::size_t' has not been declared
     move(char_type* __s1, const char_type* __s2, std::size_t __n)
                                                       ^~~~~~
/usr/include/c++/7/bits/char_traits.h:193:55: error: 'std::size_t' has not been declared
     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
                                                       ^~~~~~
/usr/include/c++/7/bits/char_traits.h:203:33: error: 'std::size_t' has not been declared
     assign(char_type* __s, std::size_t __n, char_type __a)
                                 ^~~~~~
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/new_allocator.h:44:14: error: 'std::size_t' has not been declared
   using std::size_t;
              ^~~~~~
/usr/include/c++/7/ext/new_allocator.h:45:14: error: 'std::ptrdiff_t' has not been declared
   using std::ptrdiff_t;
              ^~~~~~~~~
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:55:51: error: 'std::size_t' has not been declared
     const char* __name, const _CharT* __str, std::size_t* __idx,
                                                   ^~~~~~
/usr/include/c++/7/ext/string_conversions.h:99:48: error: 'std::size_t' has not been declared
     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
                                                ^~~~~~
/usr/include/c++/7/ext/string_conversions.h:100:31: error: 'std::size_t' has not been declared
      __builtin_va_list), std::size_t __n,
                               ^~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<char> >':
/usr/include/c++/7/bits/basic_string.h:80:24:   required from 'class std::__cxx11::basic_string<char>'
/usr/include/c++/7/bits/basic_string.h:6363:68:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<char> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<char> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<char> >::_Base_type {aka std::allocator_traits<std::allocator<char> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<char> >::_Base_type {aka struct std::allocator_traits<std::allocator<char> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h: In function 'int std::__cxx11::stoi(const string&, size_t*, int)':
/usr/include/c++/7/bits/basic_string.h:6364:19: error: no matching function for call to '__stoa<long int, int>(long int (*)(const char*, char**, int) throw (), const char [5], const char*, size_t*&, int&)'
      __idx, __base); }
                   ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:54:5: note: candidate: template<class _TRet, class _Ret, class _CharT, class ... _Base> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, int*, _Base ...)
     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
     ^~~~~~
/usr/include/c++/7/ext/string_conversions.h:54:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6364:19: note:   cannot convert '__idx' (type 'size_t* {aka long unsigned int*}') to type 'int*'
      __idx, __base); }
                   ^
/usr/include/c++/7/bits/basic_string.h: In function 'long int std::__cxx11::stol(const string&, size_t*, int)':
/usr/include/c++/7/bits/basic_string.h:6369:22: error: no matching function for call to '__stoa(long int (*)(const char*, char**, int) throw (), const char [5], const char*, size_t*&, int&)'
         __idx, __base); }
                      ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:54:5: note: candidate: template<class _TRet, class _Ret, class _CharT, class ... _Base> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, int*, _Base ...)
     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
     ^~~~~~
/usr/include/c++/7/ext/string_conversions.h:54:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6369:22: note:   cannot convert '__idx' (type 'size_t* {aka long unsigned int*}') to type 'int*'
         __idx, __base); }
                      ^
/usr/include/c++/7/bits/basic_string.h: In function 'long unsigned int std::__cxx11::stoul(const string&, size_t*, int)':
/usr/include/c++/7/bits/basic_string.h:6374:22: error: no matching function for call to '__stoa(long unsigned int (*)(const char*, char**, int) throw (), const char [6], const char*, size_t*&, int&)'
         __idx, __base); }
                      ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:54:5: note: candidate: template<class _TRet, class _Ret, class _CharT, class ... _Base> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, int*, _Base ...)
     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
     ^~~~~~
/usr/include/c++/7/ext/string_conversions.h:54:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6374:22: note:   cannot convert '__idx' (type 'size_t* {aka long unsigned int*}') to type 'int*'
         __idx, __base); }
                      ^
/usr/include/c++/7/bits/basic_string.h: In function 'long long int std::__cxx11::stoll(const string&, size_t*, int)':
/usr/include/c++/7/bits/basic_string.h:6379:22: error: no matching function for call to '__stoa(long long int (*)(const char*, char**, int) throw (), const char [6], const char*, size_t*&, int&)'
         __idx, __base); }
                      ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:54:5: note: candidate: template<class _TRet, class _Ret, class _CharT, class ... _Base> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, int*, _Base ...)
     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
     ^~~~~~
/usr/include/c++/7/ext/string_conversions.h:54:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6379:22: note:   cannot convert '__idx' (type 'size_t* {aka long unsigned int*}') to type 'int*'
         __idx, __base); }
                      ^
/usr/include/c++/7/bits/basic_string.h: In function 'long long unsigned int std::__cxx11::stoull(const string&, size_t*, int)':
/usr/include/c++/7/bits/basic_string.h:6384:22: error: no matching function for call to '__stoa(long long unsigned int (*)(const char*, char**, int) throw (), const char [7], const char*, size_t*&, int&)'
         __idx, __base); }
                      ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:54:5: note: candidate: template<class _TRet, class _Ret, class _CharT, class ... _Base> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, int*, _Base ...)
     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
     ^~~~~~
/usr/include/c++/7/ext/string_conversions.h:54:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6384:22: note:   cannot convert '__idx' (type 'size_t* {aka long unsigned int*}') to type 'int*'
         __idx, __base); }
                      ^
/usr/include/c++/7/bits/basic_string.h: In function 'float std::__cxx11::stof(const string&, size_t*)':
/usr/include/c++/7/bits/basic_string.h:6389:72: error: no matching function for call to '__stoa(float (*)(const char*, char**) throw (), const char [5], const char*, size_t*&)'
   { return __gnu_cxx::__stoa(&std::strtof, "stof", __str.c_str(), __idx); }
                                                                        ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:54:5: note: candidate: template<class _TRet, class _Ret, class _CharT, class ... _Base> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, int*, _Base ...)
     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
     ^~~~~~
/usr/include/c++/7/ext/string_conversions.h:54:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6389:72: note:   cannot convert '__idx' (type 'size_t* {aka long unsigned int*}') to type 'int*'
   { return __gnu_cxx::__stoa(&std::strtof, "stof", __str.c_str(), __idx); }
                                                                        ^
/usr/include/c++/7/bits/basic_string.h: In function 'double std::__cxx11::stod(const string&, size_t*)':
/usr/include/c++/7/bits/basic_string.h:6393:72: error: no matching function for call to '__stoa(double (*)(const char*, char**) throw (), const char [5], const char*, size_t*&)'
   { return __gnu_cxx::__stoa(&std::strtod, "stod", __str.c_str(), __idx); }
                                                                        ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:54:5: note: candidate: template<class _TRet, class _Ret, class _CharT, class ... _Base> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, int*, _Base ...)
     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
     ^~~~~~
/usr/include/c++/7/ext/string_conversions.h:54:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6393:72: note:   cannot convert '__idx' (type 'size_t* {aka long unsigned int*}') to type 'int*'
   { return __gnu_cxx::__stoa(&std::strtod, "stod", __str.c_str(), __idx); }
                                                                        ^
/usr/include/c++/7/bits/basic_string.h: In function 'long double std::__cxx11::stold(const string&, size_t*)':
/usr/include/c++/7/bits/basic_string.h:6397:74: error: no matching function for call to '__stoa(long double (*)(const char*, char**) throw (), const char [6], const char*, size_t*&)'
   { return __gnu_cxx::__stoa(&std::strtold, "stold", __str.c_str(), __idx); }
                                                                          ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:54:5: note: candidate: template<class _TRet, class _Ret, class _CharT, class ... _Base> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, int*, _Base ...)
     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
     ^~~~~~
/usr/include/c++/7/ext/string_conversions.h:54:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6397:74: note:   cannot convert '__idx' (type 'size_t* {aka long unsigned int*}') to type 'int*'
   { return __gnu_cxx::__stoa(&std::strtold, "stold", __str.c_str(), __idx); }
                                                                          ^
/usr/include/c++/7/bits/basic_string.h: In function 'std::__cxx11::string std::__cxx11::to_string(int)':
/usr/include/c++/7/bits/basic_string.h:6407:20: error: no matching function for call to '__to_xstring<std::__cxx11::string>(int (*)(char*, size_t, const char*, __va_list_tag*) throw (), long unsigned int, const char [3], int&)'
         "%d", __val); }
                    ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:99:5: note: candidate: template<class _String, class _CharT> _String __gnu_cxx::__to_xstring(int (*)(_CharT*, int, const _CharT*, __va_list_tag*), int, const _CharT*, ...)
     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
     ^~~~~~~~~~~~
/usr/include/c++/7/ext/string_conversions.h:99:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6407:20: note:   mismatched types 'int' and 'size_t {aka long unsigned int}'
         "%d", __val); }
                    ^
/usr/include/c++/7/bits/basic_string.h: In function 'std::__cxx11::string std::__cxx11::to_string(unsigned int)':
/usr/include/c++/7/bits/basic_string.h:6413:20: error: no matching function for call to '__to_xstring<std::__cxx11::string>(int (*)(char*, size_t, const char*, __va_list_tag*) throw (), long unsigned int, const char [3], unsigned int&)'
         "%u", __val); }
                    ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:99:5: note: candidate: template<class _String, class _CharT> _String __gnu_cxx::__to_xstring(int (*)(_CharT*, int, const _CharT*, __va_list_tag*), int, const _CharT*, ...)
     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
     ^~~~~~~~~~~~
/usr/include/c++/7/ext/string_conversions.h:99:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6413:20: note:   mismatched types 'int' and 'size_t {aka long unsigned int}'
         "%u", __val); }
                    ^
/usr/include/c++/7/bits/basic_string.h: In function 'std::__cxx11::string std::__cxx11::to_string(long int)':
/usr/include/c++/7/bits/basic_string.h:6418:21: error: no matching function for call to '__to_xstring<std::__cxx11::string>(int (*)(char*, size_t, const char*, __va_list_tag*) throw (), long unsigned int, const char [4], long int&)'
         "%ld", __val); }
                     ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:99:5: note: candidate: template<class _String, class _CharT> _String __gnu_cxx::__to_xstring(int (*)(_CharT*, int, const _CharT*, __va_list_tag*), int, const _CharT*, ...)
     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
     ^~~~~~~~~~~~
/usr/include/c++/7/ext/string_conversions.h:99:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6418:21: note:   mismatched types 'int' and 'size_t {aka long unsigned int}'
         "%ld", __val); }
                     ^
/usr/include/c++/7/bits/basic_string.h: In function 'std::__cxx11::string std::__cxx11::to_string(long unsigned int)':
/usr/include/c++/7/bits/basic_string.h:6424:21: error: no matching function for call to '__to_xstring<std::__cxx11::string>(int (*)(char*, size_t, const char*, __va_list_tag*) throw (), long unsigned int, const char [4], long unsigned int&)'
         "%lu", __val); }
                     ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:99:5: note: candidate: template<class _String, class _CharT> _String __gnu_cxx::__to_xstring(int (*)(_CharT*, int, const _CharT*, __va_list_tag*), int, const _CharT*, ...)
     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
     ^~~~~~~~~~~~
/usr/include/c++/7/ext/string_conversions.h:99:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6424:21: note:   mismatched types 'int' and 'size_t {aka long unsigned int}'
         "%lu", __val); }
                     ^
/usr/include/c++/7/bits/basic_string.h: In function 'std::__cxx11::string std::__cxx11::to_string(long long int)':
/usr/include/c++/7/bits/basic_string.h:6430:22: error: no matching function for call to '__to_xstring<std::__cxx11::string>(int (*)(char*, size_t, const char*, __va_list_tag*) throw (), long unsigned int, const char [5], long long int&)'
         "%lld", __val); }
                      ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:99:5: note: candidate: template<class _String, class _CharT> _String __gnu_cxx::__to_xstring(int (*)(_CharT*, int, const _CharT*, __va_list_tag*), int, const _CharT*, ...)
     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
     ^~~~~~~~~~~~
/usr/include/c++/7/ext/string_conversions.h:99:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6430:22: note:   mismatched types 'int' and 'size_t {aka long unsigned int}'
         "%lld", __val); }
                      ^
/usr/include/c++/7/bits/basic_string.h: In function 'std::__cxx11::string std::__cxx11::to_string(long long unsigned int)':
/usr/include/c++/7/bits/basic_string.h:6436:22: error: no matching function for call to '__to_xstring<std::__cxx11::string>(int (*)(char*, size_t, const char*, __va_list_tag*) throw (), long unsigned int, const char [5], long long unsigned int&)'
         "%llu", __val); }
                      ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:99:5: note: candidate: template<class _String, class _CharT> _String __gnu_cxx::__to_xstring(int (*)(_CharT*, int, const _CharT*, __va_list_tag*), int, const _CharT*, ...)
     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
     ^~~~~~~~~~~~
/usr/include/c++/7/ext/string_conversions.h:99:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6436:22: note:   mismatched types 'int' and 'size_t {aka long unsigned int}'
         "%llu", __val); }
                      ^
/usr/include/c++/7/bits/basic_string.h: In function 'std::__cxx11::string std::__cxx11::to_string(float)':
/usr/include/c++/7/bits/basic_string.h:6444:20: error: no matching function for call to '__to_xstring<std::__cxx11::string>(int (*)(char*, size_t, const char*, __va_list_tag*) throw (), const int&, const char [3], float&)'
         "%f", __val);
                    ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:99:5: note: candidate: template<class _String, class _CharT> _String __gnu_cxx::__to_xstring(int (*)(_CharT*, int, const _CharT*, __va_list_tag*), int, const _CharT*, ...)
     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
     ^~~~~~~~~~~~
/usr/include/c++/7/ext/string_conversions.h:99:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6444:20: note:   mismatched types 'int' and 'size_t {aka long unsigned int}'
         "%f", __val);
                    ^
/usr/include/c++/7/bits/basic_string.h: In function 'std::__cxx11::string std::__cxx11::to_string(double)':
/usr/include/c++/7/bits/basic_string.h:6453:20: error: no matching function for call to '__to_xstring<std::__cxx11::string>(int (*)(char*, size_t, const char*, __va_list_tag*) throw (), const int&, const char [3], double&)'
         "%f", __val);
                    ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:99:5: note: candidate: template<class _String, class _CharT> _String __gnu_cxx::__to_xstring(int (*)(_CharT*, int, const _CharT*, __va_list_tag*), int, const _CharT*, ...)
     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
     ^~~~~~~~~~~~
/usr/include/c++/7/ext/string_conversions.h:99:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6453:20: note:   mismatched types 'int' and 'size_t {aka long unsigned int}'
         "%f", __val);
                    ^
/usr/include/c++/7/bits/basic_string.h: In function 'std::__cxx11::string std::__cxx11::to_string(long double)':
/usr/include/c++/7/bits/basic_string.h:6462:21: error: no matching function for call to '__to_xstring<std::__cxx11::string>(int (*)(char*, size_t, const char*, __va_list_tag*) throw (), const int&, const char [4], long double&)'
         "%Lf", __val);
                     ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:99:5: note: candidate: template<class _String, class _CharT> _String __gnu_cxx::__to_xstring(int (*)(_CharT*, int, const _CharT*, __va_list_tag*), int, const _CharT*, ...)
     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
     ^~~~~~~~~~~~
/usr/include/c++/7/ext/string_conversions.h:99:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6462:21: note:   mismatched types 'int' and 'size_t {aka long unsigned int}'
         "%Lf", __val);
                     ^
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<wchar_t> >':
/usr/include/c++/7/bits/basic_string.h:80:24:   required from 'class std::__cxx11::basic_string<wchar_t>'
/usr/include/c++/7/bits/basic_string.h:6469:68:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<wchar_t> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<wchar_t> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<wchar_t> >::_Base_type {aka std::allocator_traits<std::allocator<wchar_t> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<wchar_t> >::_Base_type {aka struct std::allocator_traits<std::allocator<wchar_t> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h: In function 'int std::__cxx11::stoi(const wstring&, size_t*, int)':
/usr/include/c++/7/bits/basic_string.h:6470:19: error: no matching function for call to '__stoa<long int, int>(long int (*)(const wchar_t*, wchar_t**, int) throw (), const char [5], const wchar_t*, size_t*&, int&)'
      __idx, __base); }
                   ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:54:5: note: candidate: template<class _TRet, class _Ret, class _CharT, class ... _Base> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, int*, _Base ...)
     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
     ^~~~~~
/usr/include/c++/7/ext/string_conversions.h:54:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6470:19: note:   cannot convert '__idx' (type 'size_t* {aka long unsigned int*}') to type 'int*'
      __idx, __base); }
                   ^
/usr/include/c++/7/bits/basic_string.h: In function 'long int std::__cxx11::stol(const wstring&, size_t*, int)':
/usr/include/c++/7/bits/basic_string.h:6475:22: error: no matching function for call to '__stoa(long int (*)(const wchar_t*, wchar_t**, int) throw (), const char [5], const wchar_t*, size_t*&, int&)'
         __idx, __base); }
                      ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:54:5: note: candidate: template<class _TRet, class _Ret, class _CharT, class ... _Base> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, int*, _Base ...)
     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
     ^~~~~~
/usr/include/c++/7/ext/string_conversions.h:54:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6475:22: note:   cannot convert '__idx' (type 'size_t* {aka long unsigned int*}') to type 'int*'
         __idx, __base); }
                      ^
/usr/include/c++/7/bits/basic_string.h: In function 'long unsigned int std::__cxx11::stoul(const wstring&, size_t*, int)':
/usr/include/c++/7/bits/basic_string.h:6480:22: error: no matching function for call to '__stoa(long unsigned int (*)(const wchar_t*, wchar_t**, int) throw (), const char [6], const wchar_t*, size_t*&, int&)'
         __idx, __base); }
                      ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:54:5: note: candidate: template<class _TRet, class _Ret, class _CharT, class ... _Base> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, int*, _Base ...)
     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
     ^~~~~~
/usr/include/c++/7/ext/string_conversions.h:54:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6480:22: note:   cannot convert '__idx' (type 'size_t* {aka long unsigned int*}') to type 'int*'
         __idx, __base); }
                      ^
/usr/include/c++/7/bits/basic_string.h: In function 'long long int std::__cxx11::stoll(const wstring&, size_t*, int)':
/usr/include/c++/7/bits/basic_string.h:6485:22: error: no matching function for call to '__stoa(long long int (*)(const wchar_t*, wchar_t**, int) throw (), const char [6], const wchar_t*, size_t*&, int&)'
         __idx, __base); }
                      ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:54:5: note: candidate: template<class _TRet, class _Ret, class _CharT, class ... _Base> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, int*, _Base ...)
     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
     ^~~~~~
/usr/include/c++/7/ext/string_conversions.h:54:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6485:22: note:   cannot convert '__idx' (type 'size_t* {aka long unsigned int*}') to type 'int*'
         __idx, __base); }
                      ^
/usr/include/c++/7/bits/basic_string.h: In function 'long long unsigned int std::__cxx11::stoull(const wstring&, size_t*, int)':
/usr/include/c++/7/bits/basic_string.h:6490:22: error: no matching function for call to '__stoa(long long unsigned int (*)(const wchar_t*, wchar_t**, int) throw (), const char [7], const wchar_t*, size_t*&, int&)'
         __idx, __base); }
                      ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:54:5: note: candidate: template<class _TRet, class _Ret, class _CharT, class ... _Base> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, int*, _Base ...)
     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
     ^~~~~~
/usr/include/c++/7/ext/string_conversions.h:54:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6490:22: note:   cannot convert '__idx' (type 'size_t* {aka long unsigned int*}') to type 'int*'
         __idx, __base); }
                      ^
/usr/include/c++/7/bits/basic_string.h: In function 'float std::__cxx11::stof(const wstring&, size_t*)':
/usr/include/c++/7/bits/basic_string.h:6495:72: error: no matching function for call to '__stoa(float (*)(const wchar_t*, wchar_t**) throw (), const char [5], const wchar_t*, size_t*&)'
   { return __gnu_cxx::__stoa(&std::wcstof, "stof", __str.c_str(), __idx); }
                                                                        ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:54:5: note: candidate: template<class _TRet, class _Ret, class _CharT, class ... _Base> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, int*, _Base ...)
     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
     ^~~~~~
/usr/include/c++/7/ext/string_conversions.h:54:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6495:72: note:   cannot convert '__idx' (type 'size_t* {aka long unsigned int*}') to type 'int*'
   { return __gnu_cxx::__stoa(&std::wcstof, "stof", __str.c_str(), __idx); }
                                                                        ^
/usr/include/c++/7/bits/basic_string.h: In function 'double std::__cxx11::stod(const wstring&, size_t*)':
/usr/include/c++/7/bits/basic_string.h:6499:72: error: no matching function for call to '__stoa(double (*)(const wchar_t*, wchar_t**) throw (), const char [5], const wchar_t*, size_t*&)'
   { return __gnu_cxx::__stoa(&std::wcstod, "stod", __str.c_str(), __idx); }
                                                                        ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:54:5: note: candidate: template<class _TRet, class _Ret, class _CharT, class ... _Base> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, int*, _Base ...)
     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
     ^~~~~~
/usr/include/c++/7/ext/string_conversions.h:54:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6499:72: note:   cannot convert '__idx' (type 'size_t* {aka long unsigned int*}') to type 'int*'
   { return __gnu_cxx::__stoa(&std::wcstod, "stod", __str.c_str(), __idx); }
                                                                        ^
/usr/include/c++/7/bits/basic_string.h: In function 'long double std::__cxx11::stold(const wstring&, size_t*)':
/usr/include/c++/7/bits/basic_string.h:6503:74: error: no matching function for call to '__stoa(long double (*)(const wchar_t*, wchar_t**) throw (), const char [6], const wchar_t*, size_t*&)'
   { return __gnu_cxx::__stoa(&std::wcstold, "stold", __str.c_str(), __idx); }
                                                                          ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:54:5: note: candidate: template<class _TRet, class _Ret, class _CharT, class ... _Base> _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, int*, _Base ...)
     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
     ^~~~~~
/usr/include/c++/7/ext/string_conversions.h:54:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6503:74: note:   cannot convert '__idx' (type 'size_t* {aka long unsigned int*}') to type 'int*'
   { return __gnu_cxx::__stoa(&std::wcstold, "stold", __str.c_str(), __idx); }
                                                                          ^
/usr/include/c++/7/bits/basic_string.h: In function 'std::__cxx11::wstring std::__cxx11::to_wstring(int)':
/usr/include/c++/7/bits/basic_string.h:6510:22: error: no matching function for call to '__to_xstring<std::__cxx11::wstring>(int (*)(wchar_t*, size_t, const wchar_t*, __va_list_tag*) throw (), long unsigned int, const wchar_t [3], int&)'
          L"%d", __val); }
                      ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:99:5: note: candidate: template<class _String, class _CharT> _String __gnu_cxx::__to_xstring(int (*)(_CharT*, int, const _CharT*, __va_list_tag*), int, const _CharT*, ...)
     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
     ^~~~~~~~~~~~
/usr/include/c++/7/ext/string_conversions.h:99:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6510:22: note:   mismatched types 'int' and 'size_t {aka long unsigned int}'
          L"%d", __val); }
                      ^
/usr/include/c++/7/bits/basic_string.h: In function 'std::__cxx11::wstring std::__cxx11::to_wstring(unsigned int)':
/usr/include/c++/7/bits/basic_string.h:6516:22: error: no matching function for call to '__to_xstring<std::__cxx11::wstring>(int (*)(wchar_t*, size_t, const wchar_t*, __va_list_tag*) throw (), long unsigned int, const wchar_t [3], unsigned int&)'
          L"%u", __val); }
                      ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:99:5: note: candidate: template<class _String, class _CharT> _String __gnu_cxx::__to_xstring(int (*)(_CharT*, int, const _CharT*, __va_list_tag*), int, const _CharT*, ...)
     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
     ^~~~~~~~~~~~
/usr/include/c++/7/ext/string_conversions.h:99:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6516:22: note:   mismatched types 'int' and 'size_t {aka long unsigned int}'
          L"%u", __val); }
                      ^
/usr/include/c++/7/bits/basic_string.h: In function 'std::__cxx11::wstring std::__cxx11::to_wstring(long int)':
/usr/include/c++/7/bits/basic_string.h:6521:23: error: no matching function for call to '__to_xstring<std::__cxx11::wstring>(int (*)(wchar_t*, size_t, const wchar_t*, __va_list_tag*) throw (), long unsigned int, const wchar_t [4], long int&)'
          L"%ld", __val); }
                       ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:99:5: note: candidate: template<class _String, class _CharT> _String __gnu_cxx::__to_xstring(int (*)(_CharT*, int, const _CharT*, __va_list_tag*), int, const _CharT*, ...)
     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
     ^~~~~~~~~~~~
/usr/include/c++/7/ext/string_conversions.h:99:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6521:23: note:   mismatched types 'int' and 'size_t {aka long unsigned int}'
          L"%ld", __val); }
                       ^
/usr/include/c++/7/bits/basic_string.h: In function 'std::__cxx11::wstring std::__cxx11::to_wstring(long unsigned int)':
/usr/include/c++/7/bits/basic_string.h:6527:23: error: no matching function for call to '__to_xstring<std::__cxx11::wstring>(int (*)(wchar_t*, size_t, const wchar_t*, __va_list_tag*) throw (), long unsigned int, const wchar_t [4], long unsigned int&)'
          L"%lu", __val); }
                       ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:99:5: note: candidate: template<class _String, class _CharT> _String __gnu_cxx::__to_xstring(int (*)(_CharT*, int, const _CharT*, __va_list_tag*), int, const _CharT*, ...)
     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
     ^~~~~~~~~~~~
/usr/include/c++/7/ext/string_conversions.h:99:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6527:23: note:   mismatched types 'int' and 'size_t {aka long unsigned int}'
          L"%lu", __val); }
                       ^
/usr/include/c++/7/bits/basic_string.h: In function 'std::__cxx11::wstring std::__cxx11::to_wstring(long long int)':
/usr/include/c++/7/bits/basic_string.h:6533:24: error: no matching function for call to '__to_xstring<std::__cxx11::wstring>(int (*)(wchar_t*, size_t, const wchar_t*, __va_list_tag*) throw (), long unsigned int, const wchar_t [5], long long int&)'
          L"%lld", __val); }
                        ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:99:5: note: candidate: template<class _String, class _CharT> _String __gnu_cxx::__to_xstring(int (*)(_CharT*, int, const _CharT*, __va_list_tag*), int, const _CharT*, ...)
     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
     ^~~~~~~~~~~~
/usr/include/c++/7/ext/string_conversions.h:99:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6533:24: note:   mismatched types 'int' and 'size_t {aka long unsigned int}'
          L"%lld", __val); }
                        ^
/usr/include/c++/7/bits/basic_string.h: In function 'std::__cxx11::wstring std::__cxx11::to_wstring(long long unsigned int)':
/usr/include/c++/7/bits/basic_string.h:6539:24: error: no matching function for call to '__to_xstring<std::__cxx11::wstring>(int (*)(wchar_t*, size_t, const wchar_t*, __va_list_tag*) throw (), long unsigned int, const wchar_t [5], long long unsigned int&)'
          L"%llu", __val); }
                        ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:99:5: note: candidate: template<class _String, class _CharT> _String __gnu_cxx::__to_xstring(int (*)(_CharT*, int, const _CharT*, __va_list_tag*), int, const _CharT*, ...)
     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
     ^~~~~~~~~~~~
/usr/include/c++/7/ext/string_conversions.h:99:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6539:24: note:   mismatched types 'int' and 'size_t {aka long unsigned int}'
          L"%llu", __val); }
                        ^
/usr/include/c++/7/bits/basic_string.h: In function 'std::__cxx11::wstring std::__cxx11::to_wstring(float)':
/usr/include/c++/7/bits/basic_string.h:6547:22: error: no matching function for call to '__to_xstring<std::__cxx11::wstring>(int (*)(wchar_t*, size_t, const wchar_t*, __va_list_tag*) throw (), const int&, const wchar_t [3], float&)'
          L"%f", __val);
                      ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:99:5: note: candidate: template<class _String, class _CharT> _String __gnu_cxx::__to_xstring(int (*)(_CharT*, int, const _CharT*, __va_list_tag*), int, const _CharT*, ...)
     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
     ^~~~~~~~~~~~
/usr/include/c++/7/ext/string_conversions.h:99:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6547:22: note:   mismatched types 'int' and 'size_t {aka long unsigned int}'
          L"%f", __val);
                      ^
/usr/include/c++/7/bits/basic_string.h: In function 'std::__cxx11::wstring std::__cxx11::to_wstring(double)':
/usr/include/c++/7/bits/basic_string.h:6556:22: error: no matching function for call to '__to_xstring<std::__cxx11::wstring>(int (*)(wchar_t*, size_t, const wchar_t*, __va_list_tag*) throw (), const int&, const wchar_t [3], double&)'
          L"%f", __val);
                      ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:99:5: note: candidate: template<class _String, class _CharT> _String __gnu_cxx::__to_xstring(int (*)(_CharT*, int, const _CharT*, __va_list_tag*), int, const _CharT*, ...)
     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
     ^~~~~~~~~~~~
/usr/include/c++/7/ext/string_conversions.h:99:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6556:22: note:   mismatched types 'int' and 'size_t {aka long unsigned int}'
          L"%f", __val);
                      ^
/usr/include/c++/7/bits/basic_string.h: In function 'std::__cxx11::wstring std::__cxx11::to_wstring(long double)':
/usr/include/c++/7/bits/basic_string.h:6565:23: error: no matching function for call to '__to_xstring<std::__cxx11::wstring>(int (*)(wchar_t*, size_t, const wchar_t*, __va_list_tag*) throw (), const int&, const wchar_t [4], long double&)'
          L"%Lf", __val);
                       ^
In file included from /usr/include/c++/7/bits/basic_string.h:6352:0,
                 from /usr/include/c++/7/string:52,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/string_conversions.h:99:5: note: candidate: template<class _String, class _CharT> _String __gnu_cxx::__to_xstring(int (*)(_CharT*, int, const _CharT*, __va_list_tag*), int, const _CharT*, ...)
     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
     ^~~~~~~~~~~~
/usr/include/c++/7/ext/string_conversions.h:99:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:6565:23: note:   mismatched types 'int' and 'size_t {aka long unsigned int}'
          L"%Lf", __val);
                       ^
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h: In member function 'size_t std::hash<std::__cxx11::basic_string<char> >::operator()(const string&) const':
/usr/include/c++/7/bits/basic_string.h:6594:54: error: 'const string {aka const class std::__cxx11::basic_string<char>}' has no member named 'length'
       { return std::_Hash_impl::hash(__s.data(), __s.length()); }
                                                      ^~~~~~
/usr/include/c++/7/bits/basic_string.h: In member function 'size_t std::hash<std::__cxx11::basic_string<wchar_t> >::operator()(const wstring&) const':
/usr/include/c++/7/bits/basic_string.h:6610:42: error: 'const wstring {aka const class std::__cxx11::basic_string<wchar_t>}' has no member named 'length'
                                      __s.length() * sizeof(wchar_t)); }
                                          ^~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<char16_t> >':
/usr/include/c++/7/bits/basic_string.h:80:24:   required from 'class std::__cxx11::basic_string<char16_t>'
/usr/include/c++/7/bits/basic_string.h:6627:41:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<char16_t> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<char16_t> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<char16_t> >::_Base_type {aka std::allocator_traits<std::allocator<char16_t> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<char16_t> >::_Base_type {aka struct std::allocator_traits<std::allocator<char16_t> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h: In member function 'size_t std::hash<std::__cxx11::basic_string<char16_t> >::operator()(const u16string&) const':
/usr/include/c++/7/bits/basic_string.h:6628:42: error: 'const u16string {aka const class std::__cxx11::basic_string<char16_t>}' has no member named 'length'
                                      __s.length() * sizeof(char16_t)); }
                                          ^~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<char32_t> >':
/usr/include/c++/7/bits/basic_string.h:80:24:   required from 'class std::__cxx11::basic_string<char32_t>'
/usr/include/c++/7/bits/basic_string.h:6642:41:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<char32_t> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<char32_t> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<char32_t> >::_Base_type {aka std::allocator_traits<std::allocator<char32_t> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<char32_t> >::_Base_type {aka struct std::allocator_traits<std::allocator<char32_t> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h: In member function 'size_t std::hash<std::__cxx11::basic_string<char32_t> >::operator()(const u32string&) const':
/usr/include/c++/7/bits/basic_string.h:6643:42: error: 'const u32string {aka const class std::__cxx11::basic_string<char32_t>}' has no member named 'length'
                                      __s.length() * sizeof(char32_t)); }
                                          ^~~~~~
In file included from /llvm/include/llvm/ADT/APSInt.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APInt.h: In member function 'unsigned int llvm::APInt::countLeadingZeros() const':
/llvm/include/llvm/ADT/APInt.h:1598:20: error: 'countLeadingZeros' is not a member of 'llvm'
       return llvm::countLeadingZeros(U.VAL) - unusedBits;
                    ^~~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/APInt.h:1598:20: note: suggested alternative: 'maskLeadingZeros'
       return llvm::countLeadingZeros(U.VAL) - unusedBits;
                    ^~~~~~~~~~~~~~~~~
                    maskLeadingZeros
/llvm/include/llvm/ADT/APInt.h: In member function 'unsigned int llvm::APInt::countLeadingOnes() const':
/llvm/include/llvm/ADT/APInt.h:1613:20: error: 'countLeadingOnes' is not a member of 'llvm'
       return llvm::countLeadingOnes(U.VAL << (APINT_BITS_PER_WORD - BitWidth));
                    ^~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/APInt.h:1613:20: note: suggested alternative: 'maskLeadingOnes'
       return llvm::countLeadingOnes(U.VAL << (APINT_BITS_PER_WORD - BitWidth));
                    ^~~~~~~~~~~~~~~~
                    maskLeadingOnes
/llvm/include/llvm/ADT/APInt.h: In member function 'unsigned int llvm::APInt::countTrailingZeros() const':
/llvm/include/llvm/ADT/APInt.h:1633:38: error: 'countTrailingZeros' is not a member of 'llvm'
       return std::min(unsigned(llvm::countTrailingZeros(U.VAL)), BitWidth);
                                      ^~~~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/APInt.h:1633:38: note: suggested alternative: 'maskTrailingZeros'
       return std::min(unsigned(llvm::countTrailingZeros(U.VAL)), BitWidth);
                                      ^~~~~~~~~~~~~~~~~~
                                      maskTrailingZeros
/llvm/include/llvm/ADT/APInt.h: In member function 'unsigned int llvm::APInt::countTrailingOnes() const':
/llvm/include/llvm/ADT/APInt.h:1647:20: error: 'countTrailingOnes' is not a member of 'llvm'
       return llvm::countTrailingOnes(U.VAL);
                    ^~~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/APInt.h:1647:20: note: suggested alternative: 'maskTrailingOnes'
       return llvm::countTrailingOnes(U.VAL);
                    ^~~~~~~~~~~~~~~~~
                    maskTrailingOnes
In file included from /usr/include/c++/7/bits/locale_facets.h:2651:0,
                 from /usr/include/c++/7/bits/basic_ios.h:37,
                 from /usr/include/c++/7/ios:44,
                 from /usr/include/c++/7/ostream:38,
                 from /usr/include/c++/7/iterator:64,
                 from /llvm/include/llvm/ADT/iterator_range.h:21,
                 from /llvm/include/llvm/ADT/SmallVector.h:16,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/locale_facets.tcc: In member function 'void std::__numpunct_cache<_CharT>::_M_cache(const std::locale&)':
/usr/include/c++/7/bits/locale_facets.tcc:88:27: error: 'const string {aka const class std::__cxx11::basic_string<char>}' has no member named 'size'
    _M_grouping_size = __g.size();
                           ^~~~
/usr/include/c++/7/bits/locale_facets.tcc:90:8: error: 'const string {aka const class std::__cxx11::basic_string<char>}' has no member named 'copy'
    __g.copy(__grouping, _M_grouping_size);
        ^~~~
/usr/include/c++/7/bits/locale_facets.tcc: In member function '_InIter std::num_get<_CharT, _InIter>::_M_extract_float(_InIter, _InIter, std::ios_base&, std::ios_base::iostate&, std::__cxx11::string&) const':
/usr/include/c++/7/bits/locale_facets.tcc:211:19: error: 'std::__cxx11::string {aka class std::__cxx11::basic_string<char>}' has no member named 'reserve'
  __found_grouping.reserve(32);
                   ^~~~~~~
/usr/include/c++/7/bits/locale_facets.tcc:296:28: error: 'std::__cxx11::string {aka class std::__cxx11::basic_string<char>}' has no member named 'size'
       if (__found_grouping.size())
                            ^~~~
/usr/include/c++/7/bits/locale_facets.tcc:319:28: error: 'std::__cxx11::string {aka class std::__cxx11::basic_string<char>}' has no member named 'size'
       if (__found_grouping.size() && !__found_dec)
                            ^~~~
/usr/include/c++/7/bits/locale_facets.tcc:355:28: error: 'std::__cxx11::string {aka class std::__cxx11::basic_string<char>}' has no member named 'size'
       if (__found_grouping.size())
                            ^~~~
/usr/include/c++/7/bits/locale_facets.tcc: In member function '_InIter std::num_get<_CharT, _InIter>::_M_extract_int(_InIter, _InIter, std::ios_base&, std::ios_base::iostate&, _ValueT&) const':
/usr/include/c++/7/bits/locale_facets.tcc:468:21: error: 'std::__cxx11::string {aka class std::__cxx11::basic_string<char>}' has no member named 'reserve'
    __found_grouping.reserve(32);
                     ^~~~~~~
/usr/include/c++/7/bits/locale_facets.tcc:554:23: error: 'std::__cxx11::string {aka class std::__cxx11::basic_string<char>}' has no member named 'size'
  if (__found_grouping.size())
                       ^~~~
/usr/include/c++/7/bits/locale_facets.tcc:567:56: error: 'std::__cxx11::string {aka class std::__cxx11::basic_string<char>}' has no member named 'size'
  if ((!__sep_pos && !__found_zero && !__found_grouping.size())
                                                        ^~~~
/usr/include/c++/7/bits/locale_facets.tcc: In member function 'virtual _InIter std::num_get<_CharT, _InIter>::do_get(std::num_get<_CharT, _InIter>::iter_type, std::num_get<_CharT, _InIter>::iter_type, std::ios_base&, std::ios_base::iostate&, float&) const':
/usr/include/c++/7/bits/locale_facets.tcc:695:14: error: 'std::__cxx11::string {aka class std::__cxx11::basic_string<char>}' has no member named 'reserve'
       __xtrc.reserve(32);
              ^~~~~~~
/usr/include/c++/7/bits/locale_facets.tcc: In member function 'virtual _InIter std::num_get<_CharT, _InIter>::do_get(std::num_get<_CharT, _InIter>::iter_type, std::num_get<_CharT, _InIter>::iter_type, std::ios_base&, std::ios_base::iostate&, double&) const':
/usr/include/c++/7/bits/locale_facets.tcc:710:14: error: 'std::__cxx11::string {aka class std::__cxx11::basic_string<char>}' has no member named 'reserve'
       __xtrc.reserve(32);
              ^~~~~~~
/usr/include/c++/7/bits/locale_facets.tcc: In member function 'virtual _InIter std::num_get<_CharT, _InIter>::do_get(std::num_get<_CharT, _InIter>::iter_type, std::num_get<_CharT, _InIter>::iter_type, std::ios_base&, std::ios_base::iostate&, long double&) const':
/usr/include/c++/7/bits/locale_facets.tcc:742:14: error: 'std::__cxx11::string {aka class std::__cxx11::basic_string<char>}' has no member named 'reserve'
       __xtrc.reserve(32);
              ^~~~~~~
In file included from /llvm/include/llvm/ADT/SmallVector.h:17:0,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/AlignOf.h: At global scope:
/llvm/include/llvm/Support/AlignOf.h:34:15: error: 'std::size_t' has not been declared
 template<std::size_t Alignment, std::size_t Size>
               ^~~~~~
/llvm/include/llvm/Support/AlignOf.h:34:38: error: 'std::size_t' has not been declared
 template<std::size_t Alignment, std::size_t Size>
                                      ^~~~~~
/llvm/include/llvm/Support/AlignOf.h:36:11: error: 'Alignment' was not declared in this scope
   alignas(Alignment) char buffer[Size];
           ^~~~~~~~~
/llvm/include/llvm/Support/AlignOf.h:36:11: note: suggested alternative: 'AlignTo'
   alignas(Alignment) char buffer[Size];
           ^~~~~~~~~
           AlignTo
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:47:31: error: 'std::size_t' has not been declared
   template<typename _Tp, std::size_t _Nm>
                               ^~~~~~
/usr/include/c++/7/array:50:25: error: '_Nm' was not declared in this scope
       typedef _Tp _Type[_Nm];
                         ^~~
/usr/include/c++/7/array:55:20: error: '_Type' does not name a type; did you mean '_Tp'?
       _S_ref(const _Type& __t, std::size_t __n) noexcept
                    ^~~~~
                    _Tp
/usr/include/c++/7/array:55:37: error: 'std::size_t' has not been declared
       _S_ref(const _Type& __t, std::size_t __n) noexcept
                                     ^~~~~~
/usr/include/c++/7/array:59:20: error: '_Type' does not name a type; did you mean '_Tp'?
       _S_ptr(const _Type& __t) noexcept
                    ^~~~~
                    _Tp
/usr/include/c++/7/array: In static member function 'static constexpr _Tp& std::__array_traits<_Tp, <declaration error> >::_S_ref(const int&, int)':
/usr/include/c++/7/array:56:40: error: invalid types 'const int[int]' for array subscript
       { return const_cast<_Tp&>(__t[__n]); }
                                        ^
/usr/include/c++/7/array: At global scope:
/usr/include/c++/7/array:93:31: error: 'std::size_t' has not been declared
   template<typename _Tp, std::size_t _Nm>
                               ^~~~~~
/usr/include/c++/7/array:103:20: error: 'size_t' in namespace 'std' does not name a type
       typedef std::size_t                           size_type;
                    ^~~~~~
/usr/include/c++/7/array:104:20: error: 'ptrdiff_t' in namespace 'std' does not name a type
       typedef std::ptrdiff_t                          difference_type;
                    ^~~~~~~~~
/usr/include/c++/7/array:109:51: error: '_Nm' was not declared in this scope
       typedef _GLIBCXX_STD_C::__array_traits<_Tp, _Nm> _AT_Type;
                                                   ^~~
/usr/include/c++/7/array:109:54: error: template argument 2 is invalid
       typedef _GLIBCXX_STD_C::__array_traits<_Tp, _Nm> _AT_Type;
                                                      ^
/usr/include/c++/7/array:110:16: error: '_AT_Type' is not a class, namespace, or enumeration
       typename _AT_Type::_Type                         _M_elems;
                ^~~~~~~~
/usr/include/c++/7/array:121:16: error: '_AT_Type' is not a class, namespace, or enumeration
       noexcept(_AT_Type::_Is_nothrow_swappable::value)
                ^~~~~~~~
/usr/include/c++/7/array:174:17: error: 'size_type' does not name a type; did you mean 'true_type'?
       constexpr size_type
                 ^~~~~~~~~
                 true_type
/usr/include/c++/7/array:177:17: error: 'size_type' does not name a type; did you mean 'true_type'?
       constexpr size_type
                 ^~~~~~~~~
                 true_type
/usr/include/c++/7/array:185:18: error: 'size_type' has not been declared
       operator[](size_type __n) noexcept
                  ^~~~~~~~~
/usr/include/c++/7/array:189:18: error: 'size_type' has not been declared
       operator[](size_type __n) const noexcept
                  ^~~~~~~~~
/usr/include/c++/7/array:193:10: error: 'size_type' has not been declared
       at(size_type __n)
          ^~~~~~~~~
/usr/include/c++/7/array:203:10: error: 'size_type' has not been declared
       at(size_type __n) const
          ^~~~~~~~~
/usr/include/c++/7/array: In member function 'void std::array<_Tp, <declaration error> >::fill(const value_type&)':
/usr/include/c++/7/array:117:30: error: there are no arguments to 'size' that depend on a template parameter, so a declaration of 'size' must be available [-fpermissive]
       { std::fill_n(begin(), size(), __u); }
                              ^~~~
/usr/include/c++/7/array:117:30: note: (if you use '-fpermissive', G++ will accept your code, but allowing the use of an undeclared name is deprecated)
/usr/include/c++/7/array: In member function 'std::array<_Tp, <declaration error> >::value_type* std::array<_Tp, <declaration error> >::end()':
/usr/include/c++/7/array:135:34: error: '_Nm' was not declared in this scope
       { return iterator(data() + _Nm); }
                                  ^~~
/usr/include/c++/7/array: In member function 'const value_type* std::array<_Tp, <declaration error> >::end() const':
/usr/include/c++/7/array:139:40: error: '_Nm' was not declared in this scope
       { return const_iterator(data() + _Nm); }
                                        ^~~
/usr/include/c++/7/array: In member function 'const value_type* std::array<_Tp, <declaration error> >::cend() const':
/usr/include/c++/7/array:163:40: error: '_Nm' was not declared in this scope
       { return const_iterator(data() + _Nm); }
                                        ^~~
/usr/include/c++/7/array: In member function 'constexpr bool std::array<_Tp, <declaration error> >::empty() const':
/usr/include/c++/7/array:181:39: error: there are no arguments to 'size' that depend on a template parameter, so a declaration of 'size' must be available [-fpermissive]
       empty() const noexcept { return size() == 0; }
                                       ^~~~
/usr/include/c++/7/array: In member function 'std::array<_Tp, <declaration error> >::value_type& std::array<_Tp, <declaration error> >::operator[](int)':
/usr/include/c++/7/array:186:16: error: '_AT_Type' is not a class, namespace, or enumeration
       { return _AT_Type::_S_ref(_M_elems, __n); }
                ^~~~~~~~
/usr/include/c++/7/array: In member function 'constexpr const value_type& std::array<_Tp, <declaration error> >::operator[](int) const':
/usr/include/c++/7/array:190:16: error: '_AT_Type' is not a class, namespace, or enumeration
       { return _AT_Type::_S_ref(_M_elems, __n); }
                ^~~~~~~~
/usr/include/c++/7/array: In member function 'std::array<_Tp, <declaration error> >::value_type& std::array<_Tp, <declaration error> >::at(int)':
/usr/include/c++/7/array:195:13: error: '_Nm' was not declared in this scope
  if (__n >= _Nm)
             ^~~
/usr/include/c++/7/array:199:9: error: '_AT_Type' is not a class, namespace, or enumeration
  return _AT_Type::_S_ref(_M_elems, __n);
         ^~~~~~~~
/usr/include/c++/7/array: In member function 'constexpr const value_type& std::array<_Tp, <declaration error> >::at(int) const':
/usr/include/c++/7/array:207:15: error: '_Nm' was not declared in this scope
  return __n < _Nm ? _AT_Type::_S_ref(_M_elems, __n)
               ^~~
/usr/include/c++/7/array:207:21: error: '_AT_Type' is not a class, namespace, or enumeration
  return __n < _Nm ? _AT_Type::_S_ref(_M_elems, __n)
                     ^~~~~~~~
/usr/include/c++/7/array:211:7: error: '_AT_Type' is not a class, namespace, or enumeration
       _AT_Type::_S_ref(_M_elems, 0));
       ^~~~~~~~
/usr/include/c++/7/array: In member function 'constexpr const value_type& std::array<_Tp, <declaration error> >::front() const':
/usr/include/c++/7/array:220:16: error: '_AT_Type' is not a class, namespace, or enumeration
       { return _AT_Type::_S_ref(_M_elems, 0); }
                ^~~~~~~~
/usr/include/c++/7/array: In member function 'std::array<_Tp, <declaration error> >::value_type& std::array<_Tp, <declaration error> >::back()':
/usr/include/c++/7/array:224:16: error: '_Nm' was not declared in this scope
       { return _Nm ? *(end() - 1) : *end(); }
                ^~~
/usr/include/c++/7/array: In member function 'constexpr const value_type& std::array<_Tp, <declaration error> >::back() const':
/usr/include/c++/7/array:229:9: error: '_Nm' was not declared in this scope
  return _Nm ? _AT_Type::_S_ref(_M_elems, _Nm - 1)
         ^~~
/usr/include/c++/7/array:229:15: error: '_AT_Type' is not a class, namespace, or enumeration
  return _Nm ? _AT_Type::_S_ref(_M_elems, _Nm - 1)
               ^~~~~~~~
/usr/include/c++/7/array:230:16: error: '_AT_Type' is not a class, namespace, or enumeration
              : _AT_Type::_S_ref(_M_elems, 0);
                ^~~~~~~~
/usr/include/c++/7/array: In member function 'std::array<_Tp, <declaration error> >::value_type* std::array<_Tp, <declaration error> >::data()':
/usr/include/c++/7/array:235:16: error: '_AT_Type' is not a class, namespace, or enumeration
       { return _AT_Type::_S_ptr(_M_elems); }
                ^~~~~~~~
/usr/include/c++/7/array: In member function 'const value_type* std::array<_Tp, <declaration error> >::data() const':
/usr/include/c++/7/array:239:16: error: '_AT_Type' is not a class, namespace, or enumeration
       { return _AT_Type::_S_ptr(_M_elems); }
                ^~~~~~~~
/usr/include/c++/7/array: At global scope:
/usr/include/c++/7/array:250:31: error: 'std::size_t' has not been declared
   template<typename _Tp, std::size_t _Nm>
                               ^~~~~~
/usr/include/c++/7/array:252:33: error: '_Nm' was not declared in this scope
     operator==(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                 ^~~
/usr/include/c++/7/array:252:36: error: template argument 2 is invalid
     operator==(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                    ^
/usr/include/c++/7/array:252:63: error: '_Nm' was not declared in this scope
     operator==(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                                               ^~~
/usr/include/c++/7/array:252:66: error: template argument 2 is invalid
     operator==(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                                                  ^
/usr/include/c++/7/array:252:74: error: 'bool std::operator==(const int&, const int&)' must have an argument of class or enumerated type
     operator==(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                                                          ^
/usr/include/c++/7/array:255:31: error: 'std::size_t' has not been declared
   template<typename _Tp, std::size_t _Nm>
                               ^~~~~~
/usr/include/c++/7/array:257:33: error: '_Nm' was not declared in this scope
     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                 ^~~
/usr/include/c++/7/array:257:36: error: template argument 2 is invalid
     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                    ^
/usr/include/c++/7/array:257:63: error: '_Nm' was not declared in this scope
     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                                               ^~~
/usr/include/c++/7/array:257:66: error: template argument 2 is invalid
     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                                                  ^
/usr/include/c++/7/array:257:74: error: 'bool std::operator!=(const int&, const int&)' must have an argument of class or enumerated type
     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                                                          ^
/usr/include/c++/7/array:260:31: error: 'std::size_t' has not been declared
   template<typename _Tp, std::size_t _Nm>
                               ^~~~~~
/usr/include/c++/7/array:262:32: error: '_Nm' was not declared in this scope
     operator<(const array<_Tp, _Nm>& __a, const array<_Tp, _Nm>& __b)
                                ^~~
/usr/include/c++/7/array:262:35: error: template argument 2 is invalid
     operator<(const array<_Tp, _Nm>& __a, const array<_Tp, _Nm>& __b)
                                   ^
/usr/include/c++/7/array:262:60: error: '_Nm' was not declared in this scope
     operator<(const array<_Tp, _Nm>& __a, const array<_Tp, _Nm>& __b)
                                                            ^~~
/usr/include/c++/7/array:262:63: error: template argument 2 is invalid
     operator<(const array<_Tp, _Nm>& __a, const array<_Tp, _Nm>& __b)
                                                               ^
/usr/include/c++/7/array:262:69: error: 'bool std::operator<(const int&, const int&)' must have an argument of class or enumerated type
     operator<(const array<_Tp, _Nm>& __a, const array<_Tp, _Nm>& __b)
                                                                     ^
/usr/include/c++/7/array:268:31: error: 'std::size_t' has not been declared
   template<typename _Tp, std::size_t _Nm>
                               ^~~~~~
/usr/include/c++/7/array:270:32: error: '_Nm' was not declared in this scope
     operator>(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                ^~~
/usr/include/c++/7/array:270:35: error: template argument 2 is invalid
     operator>(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                   ^
/usr/include/c++/7/array:270:62: error: '_Nm' was not declared in this scope
     operator>(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                                              ^~~
/usr/include/c++/7/array:270:65: error: template argument 2 is invalid
     operator>(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                                                 ^
/usr/include/c++/7/array:270:73: error: 'bool std::operator>(const int&, const int&)' must have an argument of class or enumerated type
     operator>(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                                                         ^
/usr/include/c++/7/array:273:31: error: 'std::size_t' has not been declared
   template<typename _Tp, std::size_t _Nm>
                               ^~~~~~
/usr/include/c++/7/array:275:33: error: '_Nm' was not declared in this scope
     operator<=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                 ^~~
/usr/include/c++/7/array:275:36: error: template argument 2 is invalid
     operator<=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                    ^
/usr/include/c++/7/array:275:63: error: '_Nm' was not declared in this scope
     operator<=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                                               ^~~
/usr/include/c++/7/array:275:66: error: template argument 2 is invalid
     operator<=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                                                  ^
/usr/include/c++/7/array:275:74: error: 'bool std::operator<=(const int&, const int&)' must have an argument of class or enumerated type
     operator<=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                                                          ^
/usr/include/c++/7/array:278:31: error: 'std::size_t' has not been declared
   template<typename _Tp, std::size_t _Nm>
                               ^~~~~~
/usr/include/c++/7/array:280:33: error: '_Nm' was not declared in this scope
     operator>=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                 ^~~
/usr/include/c++/7/array:280:36: error: template argument 2 is invalid
     operator>=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                    ^
/usr/include/c++/7/array:280:63: error: '_Nm' was not declared in this scope
     operator>=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                                               ^~~
/usr/include/c++/7/array:280:66: error: template argument 2 is invalid
     operator>=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                                                  ^
/usr/include/c++/7/array:280:74: error: 'bool std::operator>=(const int&, const int&)' must have an argument of class or enumerated type
     operator>=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
                                                                          ^
/usr/include/c++/7/array:284:31: error: 'std::size_t' has not been declared
   template<typename _Tp, std::size_t _Nm>
                               ^~~~~~
/usr/include/c++/7/array:294:21: error: '_Nm' was not declared in this scope
     swap(array<_Tp, _Nm>& __one, array<_Tp, _Nm>& __two)
                     ^~~
/usr/include/c++/7/array:294:24: error: template argument 2 is invalid
     swap(array<_Tp, _Nm>& __one, array<_Tp, _Nm>& __two)
                        ^
/usr/include/c++/7/array:294:45: error: '_Nm' was not declared in this scope
     swap(array<_Tp, _Nm>& __one, array<_Tp, _Nm>& __two)
                                             ^~~
/usr/include/c++/7/array:294:48: error: template argument 2 is invalid
     swap(array<_Tp, _Nm>& __one, array<_Tp, _Nm>& __two)
                                                ^
/usr/include/c++/7/array:295:29: error: request for member 'swap' in '__one', which is of non-class type 'int'
     noexcept(noexcept(__one.swap(__two)))
                             ^~~~
/usr/include/c++/7/array: In function 'void std::swap(int&, int&)':
/usr/include/c++/7/array:296:13: error: request for member 'swap' in '__one', which is of non-class type 'int'
     { __one.swap(__two); }
             ^~~~
/usr/include/c++/7/array: At global scope:
/usr/include/c++/7/array:305:17: error: 'std::size_t' has not been declared
   template<std::size_t _Int, typename _Tp, std::size_t _Nm>
                 ^~~~~~
/usr/include/c++/7/array:305:49: error: 'std::size_t' has not been declared
   template<std::size_t _Int, typename _Tp, std::size_t _Nm>
                                                 ^~~~~~
/usr/include/c++/7/array:307:20: error: '_Nm' was not declared in this scope
     get(array<_Tp, _Nm>& __arr) noexcept
                    ^~~
/usr/include/c++/7/array:307:23: error: template argument 2 is invalid
     get(array<_Tp, _Nm>& __arr) noexcept
                       ^
/usr/include/c++/7/array: In function 'constexpr _Tp& std::get(int&)':
/usr/include/c++/7/array:309:21: error: '_Int' was not declared in this scope
       static_assert(_Int < _Nm, "array index is within bounds");
                     ^~~~
/usr/include/c++/7/array:309:21: note: suggested alternative: 'rint'
       static_assert(_Int < _Nm, "array index is within bounds");
                     ^~~~
                     rint
/usr/include/c++/7/array:309:28: error: '_Nm' was not declared in this scope
       static_assert(_Int < _Nm, "array index is within bounds");
                            ^~~
/usr/include/c++/7/array:311:15: error: request for member '_M_elems' in '__arr', which is of non-class type 'int'
  _S_ref(__arr._M_elems, _Int);
               ^~~~~~~~
/usr/include/c++/7/array: At global scope:
/usr/include/c++/7/array:314:17: error: 'std::size_t' has not been declared
   template<std::size_t _Int, typename _Tp, std::size_t _Nm>
                 ^~~~~~
/usr/include/c++/7/array:314:49: error: 'std::size_t' has not been declared
   template<std::size_t _Int, typename _Tp, std::size_t _Nm>
                                                 ^~~~~~
/usr/include/c++/7/array:316:20: error: '_Nm' was not declared in this scope
     get(array<_Tp, _Nm>&& __arr) noexcept
                    ^~~
/usr/include/c++/7/array:316:23: error: template argument 2 is invalid
     get(array<_Tp, _Nm>&& __arr) noexcept
                       ^
/usr/include/c++/7/array: In function 'constexpr _Tp&& std::get(int&&)':
/usr/include/c++/7/array:318:21: error: '_Int' was not declared in this scope
       static_assert(_Int < _Nm, "array index is within bounds");
                     ^~~~
/usr/include/c++/7/array:318:21: note: suggested alternative: 'rint'
       static_assert(_Int < _Nm, "array index is within bounds");
                     ^~~~
                     rint
/usr/include/c++/7/array:318:28: error: '_Nm' was not declared in this scope
       static_assert(_Int < _Nm, "array index is within bounds");
                            ^~~
/usr/include/c++/7/array:319:55: error: no matching function for call to 'get<_Int>(int&)'
       return std::move(_GLIBCXX_STD_C::get<_Int>(__arr));
                                                       ^
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array: At global scope:
/usr/include/c++/7/array:322:17: error: 'std::size_t' has not been declared
   template<std::size_t _Int, typename _Tp, std::size_t _Nm>
                 ^~~~~~
/usr/include/c++/7/array:322:49: error: 'std::size_t' has not been declared
   template<std::size_t _Int, typename _Tp, std::size_t _Nm>
                                                 ^~~~~~
/usr/include/c++/7/array:324:26: error: '_Nm' was not declared in this scope
     get(const array<_Tp, _Nm>& __arr) noexcept
                          ^~~
/usr/include/c++/7/array:324:29: error: template argument 2 is invalid
     get(const array<_Tp, _Nm>& __arr) noexcept
                             ^
/usr/include/c++/7/array: In function 'constexpr const _Tp& std::get(const int&)':
/usr/include/c++/7/array:326:21: error: '_Int' was not declared in this scope
       static_assert(_Int < _Nm, "array index is within bounds");
                     ^~~~
/usr/include/c++/7/array:326:21: note: suggested alternative: 'rint'
       static_assert(_Int < _Nm, "array index is within bounds");
                     ^~~~
                     rint
/usr/include/c++/7/array:326:28: error: '_Nm' was not declared in this scope
       static_assert(_Int < _Nm, "array index is within bounds");
                            ^~~
/usr/include/c++/7/array:328:15: error: request for member '_M_elems' in '__arr', which is of non-class type 'const int'
  _S_ref(__arr._M_elems, _Int);
               ^~~~~~~~
/usr/include/c++/7/array: At global scope:
/usr/include/c++/7/array:345:31: error: 'std::size_t' has not been declared
   template<typename _Tp, std::size_t _Nm>
                               ^~~~~~
/usr/include/c++/7/array:346:50: error: '_Nm' was not declared in this scope
     struct tuple_size<_GLIBCXX_STD_C::array<_Tp, _Nm>>
                                                  ^~~
/usr/include/c++/7/array:346:50: error: template argument 2 is invalid
/usr/include/c++/7/array:346:53: error: template argument 1 is invalid
     struct tuple_size<_GLIBCXX_STD_C::array<_Tp, _Nm>>
                                                     ^~
/usr/include/c++/7/array:347:37: error: 'size_t' is not a member of 'std'
     : public integral_constant<std::size_t, _Nm> { };
                                     ^~~~~~
/usr/include/c++/7/array:347:37: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:347:37: error: 'size_t' is not a member of 'std'
     : public integral_constant<std::size_t, _Nm> { };
                                     ^~~~~~
/usr/include/c++/7/array:347:37: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:347:45: error: '_Nm' was not declared in this scope
     : public integral_constant<std::size_t, _Nm> { };
                                             ^~~
/usr/include/c++/7/array:347:48: error: template argument 1 is invalid
     : public integral_constant<std::size_t, _Nm> { };
                                                ^
/usr/include/c++/7/array:347:48: error: template argument 2 is invalid
/usr/include/c++/7/array:350:17: error: 'std::size_t' has not been declared
   template<std::size_t _Int, typename _Tp>
                 ^~~~~~
/usr/include/c++/7/array:354:17: error: 'std::size_t' has not been declared
   template<std::size_t _Int, typename _Tp, std::size_t _Nm>
                 ^~~~~~
/usr/include/c++/7/array:354:49: error: 'std::size_t' has not been declared
   template<std::size_t _Int, typename _Tp, std::size_t _Nm>
                                                 ^~~~~~
/usr/include/c++/7/array:355:26: error: '_Int' was not declared in this scope
     struct tuple_element<_Int, _GLIBCXX_STD_C::array<_Tp, _Nm>>
                          ^~~~
/usr/include/c++/7/array:355:26: note: suggested alternative: 'rint'
     struct tuple_element<_Int, _GLIBCXX_STD_C::array<_Tp, _Nm>>
                          ^~~~
                          rint
/usr/include/c++/7/array:355:59: error: '_Nm' was not declared in this scope
     struct tuple_element<_Int, _GLIBCXX_STD_C::array<_Tp, _Nm>>
                                                           ^~~
/usr/include/c++/7/array:355:59: error: template argument 2 is invalid
/usr/include/c++/7/array:355:62: error: template argument 1 is invalid
     struct tuple_element<_Int, _GLIBCXX_STD_C::array<_Tp, _Nm>>
                                                              ^~
/usr/include/c++/7/array:355:62: error: template argument 2 is invalid
/usr/include/c++/7/array:361:31: error: 'std::size_t' has not been declared
   template<typename _Tp, std::size_t _Nm>
                               ^~~~~~
/usr/include/c++/7/array:362:60: error: '_Nm' was not declared in this scope
     struct __is_tuple_like_impl<_GLIBCXX_STD_C::array<_Tp, _Nm>> : true_type
                                                            ^~~
/usr/include/c++/7/array:362:60: error: template argument 2 is invalid
/usr/include/c++/7/array:362:63: error: template argument 1 is invalid
     struct __is_tuple_like_impl<_GLIBCXX_STD_C::array<_Tp, _Nm>> : true_type
                                                               ^~
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:68:17: error: 'std::size_t' has not been declared
   template<std::size_t _Idx, typename _Head,
                 ^~~~~~
/usr/include/c++/7/tuple:70:12: error: no default argument for '_Head'
     struct _Head_base;
            ^~~~~~~~~~
/usr/include/c++/7/tuple:72:17: error: 'std::size_t' has not been declared
   template<std::size_t _Idx, typename _Head>
                 ^~~~~~
/usr/include/c++/7/tuple:73:23: error: '_Idx' was not declared in this scope
     struct _Head_base<_Idx, _Head, true>
                       ^~~~
/usr/include/c++/7/tuple:73:40: error: template argument 1 is invalid
     struct _Head_base<_Idx, _Head, true>
                                        ^
/usr/include/c++/7/tuple:119:17: error: 'std::size_t' has not been declared
   template<std::size_t _Idx, typename _Head>
                 ^~~~~~
/usr/include/c++/7/tuple:120:23: error: '_Idx' was not declared in this scope
     struct _Head_base<_Idx, _Head, false>
                       ^~~~
/usr/include/c++/7/tuple:120:41: error: template argument 1 is invalid
     struct _Head_base<_Idx, _Head, false>
                                         ^
/usr/include/c++/7/tuple:176:17: error: 'std::size_t' has not been declared
   template<std::size_t _Idx, typename... _Elements>
                 ^~~~~~
/usr/include/c++/7/tuple:184:17: error: 'std::size_t' has not been declared
   template<std::size_t _Idx, typename _Head, typename... _Tail>
                 ^~~~~~
/usr/include/c++/7/tuple:185:24: error: '_Idx' was not declared in this scope
     struct _Tuple_impl<_Idx, _Head, _Tail...>
                        ^~~~
/usr/include/c++/7/tuple:185:45: error: template argument 1 is invalid
     struct _Tuple_impl<_Idx, _Head, _Tail...>
                                             ^
/usr/include/c++/7/tuple:186:26: error: '_Idx' was not declared in this scope
     : public _Tuple_impl<_Idx + 1, _Tail...>,
                          ^~~~
/usr/include/c++/7/tuple:186:44: error: template argument 1 is invalid
     : public _Tuple_impl<_Idx + 1, _Tail...>,
                                            ^
/usr/include/c++/7/tuple:187:26: error: '_Idx' was not declared in this scope
       private _Head_base<_Idx, _Head>
                          ^~~~
/usr/include/c++/7/tuple:187:37: error: template argument 1 is invalid
       private _Head_base<_Idx, _Head>
                                     ^
/usr/include/c++/7/tuple:342:17: error: 'std::size_t' has not been declared
   template<std::size_t _Idx, typename _Head>
                 ^~~~~~
/usr/include/c++/7/tuple:343:24: error: '_Idx' was not declared in this scope
     struct _Tuple_impl<_Idx, _Head>
                        ^~~~
/usr/include/c++/7/tuple:343:35: error: template argument 1 is invalid
     struct _Tuple_impl<_Idx, _Head>
                                   ^
/usr/include/c++/7/tuple:344:26: error: '_Idx' was not declared in this scope
     : private _Head_base<_Idx, _Head>
                          ^~~~
/usr/include/c++/7/tuple:344:37: error: template argument 1 is invalid
     : private _Head_base<_Idx, _Head>
                                     ^
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_Elements>::tuple()':
/usr/include/c++/7/tuple:582:9: error: 'typedef int std::tuple<_Elements>::_Inherited' is not a non-static data member of 'std::tuple<_Elements>'
       : _Inherited() { }
         ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_Elements>::tuple()':
/usr/include/c++/7/tuple:592:9: error: 'typedef int std::tuple<_Elements>::_Inherited' is not a non-static data member of 'std::tuple<_Elements>'
       : _Inherited() { }
         ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_Elements>::tuple(const _Elements& ...)':
/usr/include/c++/7/tuple:609:9: error: 'typedef int std::tuple<_Elements>::_Inherited' is not a non-static data member of 'std::tuple<_Elements>'
       : _Inherited(__elements...) { }
         ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_Elements>::tuple(const _Elements& ...)':
/usr/include/c++/7/tuple:620:9: error: 'typedef int std::tuple<_Elements>::_Inherited' is not a non-static data member of 'std::tuple<_Elements>'
       : _Inherited(__elements...) { }
         ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_Elements>::tuple(_UElements&& ...)':
/usr/include/c++/7/tuple:647:11: error: 'typedef int std::tuple<_Elements>::_Inherited' is not a non-static data member of 'std::tuple<_Elements>'
         : _Inherited(std::forward<_UElements>(__elements)...) { }
           ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_Elements>::tuple(_UElements&& ...)':
/usr/include/c++/7/tuple:658:4: error: 'typedef int std::tuple<_Elements>::_Inherited' is not a non-static data member of 'std::tuple<_Elements>'
  : _Inherited(std::forward<_UElements>(__elements)...) { }
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_Elements>::tuple(const std::tuple<_Args1 ...>&)':
/usr/include/c++/7/tuple:679:11: error: 'typedef int std::tuple<_Elements>::_Inherited' is not a non-static data member of 'std::tuple<_Elements>'
         : _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
           ^~~~~~~~~~
/usr/include/c++/7/tuple:679:69: error: expected '>' before '&' token
         : _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
                                                                     ^
/usr/include/c++/7/tuple:679:69: error: expected '(' before '&' token
/usr/include/c++/7/tuple:679:70: error: expected primary-expression before '>' token
         : _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
                                                                      ^
/usr/include/c++/7/tuple:680:11: error: expected '{' at end of input
         { }
           ^
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_Elements>::tuple(const std::tuple<_Args1 ...>&)':
/usr/include/c++/7/tuple:691:11: error: 'typedef int std::tuple<_Elements>::_Inherited' is not a non-static data member of 'std::tuple<_Elements>'
         : _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
           ^~~~~~~~~~
/usr/include/c++/7/tuple:691:69: error: expected '>' before '&' token
         : _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
                                                                     ^
/usr/include/c++/7/tuple:691:69: error: expected '(' before '&' token
/usr/include/c++/7/tuple:691:70: error: expected primary-expression before '>' token
         : _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
                                                                      ^
/usr/include/c++/7/tuple:692:11: error: expected '{' at end of input
         { }
           ^
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_Elements>::tuple(std::tuple<_Args1 ...>&&)':
/usr/include/c++/7/tuple:703:11: error: 'typedef int std::tuple<_Elements>::_Inherited' is not a non-static data member of 'std::tuple<_Elements>'
         : _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
           ^~~~~~~~~~
/usr/include/c++/7/tuple:703:63: error: expected '>' before '&&' token
         : _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
                                                               ^~
/usr/include/c++/7/tuple:703:63: error: expected '(' before '&&' token
/usr/include/c++/7/tuple:703:65: error: expected identifier before '>' token
         : _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
                                                                 ^
/usr/include/c++/7/tuple:703:76: error: expected '{' at end of input
         : _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
                                                                            ^
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_Elements>::tuple(std::tuple<_Args1 ...>&&)':
/usr/include/c++/7/tuple:714:11: error: 'typedef int std::tuple<_Elements>::_Inherited' is not a non-static data member of 'std::tuple<_Elements>'
         : _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
           ^~~~~~~~~~
/usr/include/c++/7/tuple:714:63: error: expected '>' before '&&' token
         : _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
                                                               ^~
/usr/include/c++/7/tuple:714:63: error: expected '(' before '&&' token
/usr/include/c++/7/tuple:714:65: error: expected identifier before '>' token
         : _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
                                                                 ^
/usr/include/c++/7/tuple:714:76: error: expected '{' at end of input
         : _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
                                                                            ^
/usr/include/c++/7/tuple: In constructor 'std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&)':
/usr/include/c++/7/tuple:720:4: error: 'typedef int std::tuple<_Elements>::_Inherited' is not a non-static data member of 'std::tuple<_Elements>'
  : _Inherited(__tag, __a) { }
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&, const _Elements& ...)':
/usr/include/c++/7/tuple:731:4: error: 'typedef int std::tuple<_Elements>::_Inherited' is not a non-static data member of 'std::tuple<_Elements>'
  : _Inherited(__tag, __a, __elements...) { }
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&, const _Elements& ...)':
/usr/include/c++/7/tuple:742:4: error: 'typedef int std::tuple<_Elements>::_Inherited' is not a non-static data member of 'std::tuple<_Elements>'
  : _Inherited(__tag, __a, __elements...) { }
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&, _UElements&& ...)':
/usr/include/c++/7/tuple:752:4: error: 'typedef int std::tuple<_Elements>::_Inherited' is not a non-static data member of 'std::tuple<_Elements>'
  : _Inherited(__tag, __a, std::forward<_UElements>(__elements)...)
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&, _UElements&& ...)':
/usr/include/c++/7/tuple:763:4: error: 'typedef int std::tuple<_Elements>::_Inherited' is not a non-static data member of 'std::tuple<_Elements>'
  : _Inherited(__tag, __a, std::forward<_UElements>(__elements)...)
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&, const std::tuple<_Elements>&)':
/usr/include/c++/7/tuple:768:4: error: 'typedef int std::tuple<_Elements>::_Inherited' is not a non-static data member of 'std::tuple<_Elements>'
  : _Inherited(__tag, __a, static_cast<const _Inherited&>(__in)) { }
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&, std::tuple<_Elements>&&)':
/usr/include/c++/7/tuple:772:4: error: 'typedef int std::tuple<_Elements>::_Inherited' is not a non-static data member of 'std::tuple<_Elements>'
  : _Inherited(__tag, __a, static_cast<_Inherited&&>(__in)) { }
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&, const std::tuple<_UElements ...>&)':
/usr/include/c++/7/tuple:785:4: error: 'typedef int std::tuple<_Elements>::_Inherited' is not a non-static data member of 'std::tuple<_Elements>'
  : _Inherited(__tag, __a,
    ^~~~~~~~~~
/usr/include/c++/7/tuple:786:62: error: expected '>' before '&' token
               static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
                                                              ^
/usr/include/c++/7/tuple:786:62: error: expected '(' before '&' token
/usr/include/c++/7/tuple:786:63: error: expected primary-expression before '>' token
               static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
                                                               ^
/usr/include/c++/7/tuple:787:4: error: expected '{' at end of input
  { }
    ^
/usr/include/c++/7/tuple: In constructor 'std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&, const std::tuple<_UElements ...>&)':
/usr/include/c++/7/tuple:800:4: error: 'typedef int std::tuple<_Elements>::_Inherited' is not a non-static data member of 'std::tuple<_Elements>'
  : _Inherited(__tag, __a,
    ^~~~~~~~~~
/usr/include/c++/7/tuple:801:62: error: expected '>' before '&' token
               static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
                                                              ^
/usr/include/c++/7/tuple:801:62: error: expected '(' before '&' token
/usr/include/c++/7/tuple:801:63: error: expected primary-expression before '>' token
               static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
                                                               ^
/usr/include/c++/7/tuple:802:4: error: expected '{' at end of input
  { }
    ^
/usr/include/c++/7/tuple: In constructor 'std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&, std::tuple<_UElements ...>&&)':
/usr/include/c++/7/tuple:815:4: error: 'typedef int std::tuple<_Elements>::_Inherited' is not a non-static data member of 'std::tuple<_Elements>'
  : _Inherited(__tag, __a,
    ^~~~~~~~~~
/usr/include/c++/7/tuple:816:56: error: expected '>' before '&&' token
               static_cast<_Tuple_impl<0, _UElements...>&&>(__in))
                                                        ^~
/usr/include/c++/7/tuple:816:56: error: expected '(' before '&&' token
/usr/include/c++/7/tuple:816:58: error: expected identifier before '>' token
               static_cast<_Tuple_impl<0, _UElements...>&&>(__in))
                                                          ^
/usr/include/c++/7/tuple:817:4: error: expected '{' at end of input
  { }
    ^
/usr/include/c++/7/tuple: In constructor 'std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&, std::tuple<_UElements ...>&&)':
/usr/include/c++/7/tuple:830:4: error: 'typedef int std::tuple<_Elements>::_Inherited' is not a non-static data member of 'std::tuple<_Elements>'
  : _Inherited(__tag, __a,
    ^~~~~~~~~~
/usr/include/c++/7/tuple:831:56: error: expected '>' before '&&' token
               static_cast<_Tuple_impl<0, _UElements...>&&>(__in))
                                                        ^~
/usr/include/c++/7/tuple:831:56: error: expected '(' before '&&' token
/usr/include/c++/7/tuple:831:58: error: expected identifier before '>' token
               static_cast<_Tuple_impl<0, _UElements...>&&>(__in))
                                                          ^
/usr/include/c++/7/tuple:832:4: error: expected '{' at end of input
  { }
    ^
/usr/include/c++/7/tuple: In member function 'void std::tuple<_Elements>::swap(std::tuple<_Elements>&)':
/usr/include/c++/7/tuple:872:28: error: qualified-id in declaration before '(' token
       { _Inherited::_M_swap(__in); }
                            ^
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_T1, _T2>::tuple()':
/usr/include/c++/7/tuple:920:9: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
       : _Inherited() { }
         ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_T1, _T2>::tuple()':
/usr/include/c++/7/tuple:934:9: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
       : _Inherited() { }
         ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_T1, _T2>::tuple(const _T1&, const _T2&)':
/usr/include/c++/7/tuple:948:11: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
         : _Inherited(__a1, __a2) { }
           ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_T1, _T2>::tuple(const _T1&, const _T2&)':
/usr/include/c++/7/tuple:957:11: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
         : _Inherited(__a1, __a2) { }
           ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_T1, _T2>::tuple(_U1&&, _U2&&)':
/usr/include/c++/7/tuple:972:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(std::forward<_U1>(__a1), std::forward<_U2>(__a2)) { }
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_T1, _T2>::tuple(_U1&&, _U2&&)':
/usr/include/c++/7/tuple:983:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(std::forward<_U1>(__a1), std::forward<_U2>(__a2)) { }
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_T1, _T2>::tuple(const std::tuple<_U1, _U2>&)':
/usr/include/c++/7/tuple:996:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in)) { }
    ^~~~~~~~~~
/usr/include/c++/7/tuple:996:57: error: expected '>' before '&' token
  : _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in)) { }
                                                         ^
/usr/include/c++/7/tuple:996:57: error: expected '(' before '&' token
/usr/include/c++/7/tuple:996:58: error: expected primary-expression before '>' token
  : _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in)) { }
                                                          ^
/usr/include/c++/7/tuple:996:69: error: expected '{' at end of input
  : _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in)) { }
                                                                     ^
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_T1, _T2>::tuple(const std::tuple<_U1, _U2>&)':
/usr/include/c++/7/tuple:1005:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in)) { }
    ^~~~~~~~~~
/usr/include/c++/7/tuple:1005:57: error: expected '>' before '&' token
  : _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in)) { }
                                                         ^
/usr/include/c++/7/tuple:1005:57: error: expected '(' before '&' token
/usr/include/c++/7/tuple:1005:58: error: expected primary-expression before '>' token
  : _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in)) { }
                                                          ^
/usr/include/c++/7/tuple:1005:69: error: expected '{' at end of input
  : _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in)) { }
                                                                     ^
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_T1, _T2>::tuple(std::tuple<_U1, _U2>&&)':
/usr/include/c++/7/tuple:1014:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in)) { }
    ^~~~~~~~~~
/usr/include/c++/7/tuple:1014:51: error: expected '>' before '&&' token
  : _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in)) { }
                                                   ^~
/usr/include/c++/7/tuple:1014:51: error: expected '(' before '&&' token
/usr/include/c++/7/tuple:1014:53: error: expected identifier before '>' token
  : _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in)) { }
                                                     ^
/usr/include/c++/7/tuple:1014:64: error: expected '{' at end of input
  : _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in)) { }
                                                                ^
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_T1, _T2>::tuple(std::tuple<_U1, _U2>&&)':
/usr/include/c++/7/tuple:1023:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in)) { }
    ^~~~~~~~~~
/usr/include/c++/7/tuple:1023:51: error: expected '>' before '&&' token
  : _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in)) { }
                                                   ^~
/usr/include/c++/7/tuple:1023:51: error: expected '(' before '&&' token
/usr/include/c++/7/tuple:1023:53: error: expected identifier before '>' token
  : _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in)) { }
                                                     ^
/usr/include/c++/7/tuple:1023:64: error: expected '{' at end of input
  : _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in)) { }
                                                                ^
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_T1, _T2>::tuple(const std::pair<_U1, _U2>&)':
/usr/include/c++/7/tuple:1032:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(__in.first, __in.second) { }
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_T1, _T2>::tuple(const std::pair<_U1, _U2>&)':
/usr/include/c++/7/tuple:1041:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(__in.first, __in.second) { }
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_T1, _T2>::tuple(std::pair<_U1, _U2>&&)':
/usr/include/c++/7/tuple:1050:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(std::forward<_U1>(__in.first),
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'constexpr std::tuple<_T1, _T2>::tuple(std::pair<_U1, _U2>&&)':
/usr/include/c++/7/tuple:1060:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(std::forward<_U1>(__in.first),
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&)':
/usr/include/c++/7/tuple:1067:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(__tag, __a) { }
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, const _T1&, const _T2&)':
/usr/include/c++/7/tuple:1079:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(__tag, __a, __a1, __a2) { }
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, const _T1&, const _T2&)':
/usr/include/c++/7/tuple:1091:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(__tag, __a, __a1, __a2) { }
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, _U1&&, _U2&&)':
/usr/include/c++/7/tuple:1100:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(__tag, __a, std::forward<_U1>(__a1),
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, _U1&&, _U2&&)':
/usr/include/c++/7/tuple:1111:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(__tag, __a, std::forward<_U1>(__a1),
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, const std::tuple<_T1, _T2>&)':
/usr/include/c++/7/tuple:1116:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(__tag, __a, static_cast<const _Inherited&>(__in)) { }
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, std::tuple<_T1, _T2>&&)':
/usr/include/c++/7/tuple:1120:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(__tag, __a, static_cast<_Inherited&&>(__in)) { }
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, const std::tuple<_U1, _U2>&)':
/usr/include/c++/7/tuple:1130:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(__tag, __a,
    ^~~~~~~~~~
/usr/include/c++/7/tuple:1131:57: error: expected '>' before '&' token
               static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in))
                                                         ^
/usr/include/c++/7/tuple:1131:57: error: expected '(' before '&' token
/usr/include/c++/7/tuple:1131:58: error: expected primary-expression before '>' token
               static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in))
                                                          ^
/usr/include/c++/7/tuple:1132:4: error: expected '{' at end of input
  { }
    ^
/usr/include/c++/7/tuple: In constructor 'std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, const std::tuple<_U1, _U2>&)':
/usr/include/c++/7/tuple:1142:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(__tag, __a,
    ^~~~~~~~~~
/usr/include/c++/7/tuple:1143:57: error: expected '>' before '&' token
               static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in))
                                                         ^
/usr/include/c++/7/tuple:1143:57: error: expected '(' before '&' token
/usr/include/c++/7/tuple:1143:58: error: expected primary-expression before '>' token
               static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in))
                                                          ^
/usr/include/c++/7/tuple:1144:4: error: expected '{' at end of input
  { }
    ^
/usr/include/c++/7/tuple: In constructor 'std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, std::tuple<_U1, _U2>&&)':
/usr/include/c++/7/tuple:1153:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in))
    ^~~~~~~~~~
/usr/include/c++/7/tuple:1153:63: error: expected '>' before '&&' token
  : _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in))
                                                               ^~
/usr/include/c++/7/tuple:1153:63: error: expected '(' before '&&' token
/usr/include/c++/7/tuple:1153:65: error: expected identifier before '>' token
  : _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in))
                                                                 ^
/usr/include/c++/7/tuple:1154:4: error: expected '{' at end of input
  { }
    ^
/usr/include/c++/7/tuple: In constructor 'std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, std::tuple<_U1, _U2>&&)':
/usr/include/c++/7/tuple:1164:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in))
    ^~~~~~~~~~
/usr/include/c++/7/tuple:1164:63: error: expected '>' before '&&' token
  : _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in))
                                                               ^~
/usr/include/c++/7/tuple:1164:63: error: expected '(' before '&&' token
/usr/include/c++/7/tuple:1164:65: error: expected identifier before '>' token
  : _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in))
                                                                 ^
/usr/include/c++/7/tuple:1165:4: error: expected '{' at end of input
  { }
    ^
/usr/include/c++/7/tuple: In constructor 'std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, const std::pair<_U1, _U2>&)':
/usr/include/c++/7/tuple:1175:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(__tag, __a, __in.first, __in.second) { }
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, const std::pair<_U1, _U2>&)':
/usr/include/c++/7/tuple:1185:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(__tag, __a, __in.first, __in.second) { }
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, std::pair<_U1, _U2>&&)':
/usr/include/c++/7/tuple:1194:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(__tag, __a, std::forward<_U1>(__in.first),
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In constructor 'std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, std::pair<_U1, _U2>&&)':
/usr/include/c++/7/tuple:1205:4: error: 'typedef int std::tuple<_T1, _T2>::_Inherited' is not a non-static data member of 'std::tuple<_T1, _T2>'
  : _Inherited(__tag, __a, std::forward<_U1>(__in.first),
    ^~~~~~~~~~
/usr/include/c++/7/tuple: In member function 'void std::tuple<_T1, _T2>::swap(std::tuple<_T1, _T2>&)':
/usr/include/c++/7/tuple:1260:28: error: qualified-id in declaration before '(' token
       { _Inherited::_M_swap(__in); }
                            ^
/usr/include/c++/7/tuple: At global scope:
/usr/include/c++/7/tuple:1267:37: error: 'size_t' is not a member of 'std'
     : public integral_constant<std::size_t, sizeof...(_Elements)> { };
                                     ^~~~~~
/usr/include/c++/7/tuple:1267:37: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1267:37: error: 'size_t' is not a member of 'std'
     : public integral_constant<std::size_t, sizeof...(_Elements)> { };
                                     ^~~~~~
/usr/include/c++/7/tuple:1267:37: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1267:65: error: template argument 1 is invalid
     : public integral_constant<std::size_t, sizeof...(_Elements)> { };
                                                                 ^
/usr/include/c++/7/tuple:1267:65: note: invalid template non-type parameter
/usr/include/c++/7/tuple:1278:17: error: 'std::size_t' has not been declared
   template<std::size_t __i, typename _Head, typename... _Tail>
                 ^~~~~~
/usr/include/c++/7/tuple:1279:26: error: '__i' was not declared in this scope
     struct tuple_element<__i, tuple<_Head, _Tail...> >
                          ^~~
/usr/include/c++/7/tuple:1279:26: note: suggested alternative: '__N'
     struct tuple_element<__i, tuple<_Head, _Tail...> >
                          ^~~
                          __N
/usr/include/c++/7/tuple:1279:54: error: template argument 1 is invalid
     struct tuple_element<__i, tuple<_Head, _Tail...> >
                                                      ^
/usr/include/c++/7/tuple:1280:21: error: '__i' was not declared in this scope
     : tuple_element<__i - 1, tuple<_Tail...> > { };
                     ^~~
/usr/include/c++/7/tuple:1280:21: note: suggested alternative: '__N'
     : tuple_element<__i - 1, tuple<_Tail...> > { };
                     ^~~
                     __N
/usr/include/c++/7/tuple:1280:46: error: template argument 1 is invalid
     : tuple_element<__i - 1, tuple<_Tail...> > { };
                                              ^
/usr/include/c++/7/tuple:1301:17: error: 'std::size_t' has not been declared
   template<std::size_t __i, typename _Head, typename... _Tail>
                 ^~~~~~
/usr/include/c++/7/tuple:1303:30: error: '__i' was not declared in this scope
     __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
                              ^~~
/usr/include/c++/7/tuple:1303:30: note: suggested alternative: '__N'
     __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
                              ^~~
                              __N
/usr/include/c++/7/tuple:1303:50: error: template argument 1 is invalid
     __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
                                                  ^
/usr/include/c++/7/tuple: In function 'constexpr _Head& std::__get_helper(int&)':
/usr/include/c++/7/tuple:1304:26: error: '__i' was not declared in this scope
     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
                          ^~~
/usr/include/c++/7/tuple:1304:26: note: suggested alternative: '__t'
     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
                          ^~~
                          __t
/usr/include/c++/7/tuple:1304:46: error: template argument 1 is invalid
     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
                                              ^
/usr/include/c++/7/tuple: At global scope:
/usr/include/c++/7/tuple:1306:17: error: 'std::size_t' has not been declared
   template<std::size_t __i, typename _Head, typename... _Tail>
                 ^~~~~~
/usr/include/c++/7/tuple:1308:36: error: '__i' was not declared in this scope
     __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
                                    ^~~
/usr/include/c++/7/tuple:1308:36: note: suggested alternative: '__N'
     __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
                                    ^~~
                                    __N
/usr/include/c++/7/tuple:1308:56: error: template argument 1 is invalid
     __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
                                                        ^
/usr/include/c++/7/tuple: In function 'constexpr const _Head& std::__get_helper(const int&)':
/usr/include/c++/7/tuple:1309:26: error: '__i' was not declared in this scope
     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
                          ^~~
/usr/include/c++/7/tuple:1309:26: note: suggested alternative: '__t'
     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
                          ^~~
                          __t
/usr/include/c++/7/tuple:1309:46: error: template argument 1 is invalid
     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
                                              ^
/usr/include/c++/7/tuple: At global scope:
/usr/include/c++/7/tuple:1312:17: error: 'std::size_t' has not been declared
   template<std::size_t __i, typename... _Elements>
                 ^~~~~~
/usr/include/c++/7/tuple:1313:15: error: '__tuple_element_t' does not name a type; did you mean 'tuple_element'?
     constexpr __tuple_element_t<__i, tuple<_Elements...>>&
               ^~~~~~~~~~~~~~~~~
               tuple_element
/usr/include/c++/7/tuple:1318:17: error: 'std::size_t' has not been declared
   template<std::size_t __i, typename... _Elements>
                 ^~~~~~
/usr/include/c++/7/tuple:1319:21: error: '__tuple_element_t' does not name a type; did you mean 'tuple_element'?
     constexpr const __tuple_element_t<__i, tuple<_Elements...>>&
                     ^~~~~~~~~~~~~~~~~
                     tuple_element
/usr/include/c++/7/tuple:1324:17: error: 'std::size_t' has not been declared
   template<std::size_t __i, typename... _Elements>
                 ^~~~~~
/usr/include/c++/7/tuple:1325:15: error: '__tuple_element_t' does not name a type; did you mean 'tuple_element'?
     constexpr __tuple_element_t<__i, tuple<_Elements...>>&&
               ^~~~~~~~~~~~~~~~~
               tuple_element
/usr/include/c++/7/tuple:1468:18: error: '__tuple_element_t' was not declared in this scope
    tuple<_Tp..., __tuple_element_t<_Idx, _Tuple>>,
                  ^~~~~~~~~~~~~~~~~
/usr/include/c++/7/tuple:1468:18: note: suggested alternative: 'tuple_element'
    tuple<_Tp..., __tuple_element_t<_Idx, _Tuple>>,
                  ^~~~~~~~~~~~~~~~~
                  tuple_element
/usr/include/c++/7/tuple:1468:42: error: template argument 2 is invalid
    tuple<_Tp..., __tuple_element_t<_Idx, _Tuple>>,
                                          ^~~~~~
/usr/include/c++/7/tuple:1468:48: error: wrong number of template arguments (2, should be 4)
    tuple<_Tp..., __tuple_element_t<_Idx, _Tuple>>,
                                                ^~
/usr/include/c++/7/tuple:1463:12: note: provided for 'template<long unsigned int <anonymous>, class, class, long unsigned int <anonymous> > struct std::__make_tuple_impl'
     struct __make_tuple_impl;
            ^~~~~~~~~~~~~~~~~
/usr/include/c++/7/tuple:1469:15: error: expected class-name before '>' token
    _Tuple, _Nm>
               ^
/usr/include/c++/7/tuple:1469:15: error: expected '{' before '>' token
/usr/include/c++/7/tuple:1472:17: error: 'std::size_t' has not been declared
   template<std::size_t _Nm, typename _Tuple, typename... _Tp>
                 ^~~~~~
/usr/include/c++/7/tuple:1473:30: error: '_Nm' was not declared in this scope
     struct __make_tuple_impl<_Nm, tuple<_Tp...>, _Tuple, _Nm>
                              ^~~
/usr/include/c++/7/tuple:1473:58: error: '_Nm' was not declared in this scope
     struct __make_tuple_impl<_Nm, tuple<_Tp...>, _Tuple, _Nm>
                                                          ^~~
/usr/include/c++/7/tuple:1473:61: error: template argument 1 is invalid
     struct __make_tuple_impl<_Nm, tuple<_Tp...>, _Tuple, _Nm>
                                                             ^
/usr/include/c++/7/tuple:1473:61: error: template argument 4 is invalid
/usr/include/c++/7/tuple:1545:32: error: 'std::size_t' has not been declared
   template<typename _Ret, std::size_t... _Is, typename _Tp, typename... _Tpls>
                                ^~~~~~
/usr/include/c++/7/tuple:1546:53: error: '_Is' was not declared in this scope
     struct __tuple_concater<_Ret, std::_Index_tuple<_Is...>, _Tp, _Tpls...>
                                                     ^~~
/usr/include/c++/7/tuple:1546:56: error: expected parameter pack before '...'
     struct __tuple_concater<_Ret, std::_Index_tuple<_Is...>, _Tp, _Tpls...>
                                                        ^~~
/usr/include/c++/7/tuple:1546:59: error: template argument 1 is invalid
     struct __tuple_concater<_Ret, std::_Index_tuple<_Is...>, _Tp, _Tpls...>
                                                           ^
/usr/include/c++/7/tuple:1546:75: error: template argument 2 is invalid
     struct __tuple_concater<_Ret, std::_Index_tuple<_Is...>, _Tp, _Tpls...>
                                                                           ^
/usr/include/c++/7/tuple:1645:39: error: 'std::size_t' has not been declared
     template<typename... _Args1, std::size_t... _Indexes1,
                                       ^~~~~~
/usr/include/c++/7/tuple:1646:39: error: 'std::size_t' has not been declared
              typename... _Args2, std::size_t... _Indexes2>
                                       ^~~~~~
/usr/include/c++/7/tuple:1650:18: error: '_Indexes1' was not declared in this scope
     _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
                  ^~~~~~~~~
/usr/include/c++/7/tuple:1650:27: error: expected parameter pack before '...'
     _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
                           ^~~
/usr/include/c++/7/tuple:1650:30: error: template argument 1 is invalid
     _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
                              ^
/usr/include/c++/7/tuple:1650:46: error: '_Indexes2' was not declared in this scope
     _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
                                              ^~~~~~~~~
/usr/include/c++/7/tuple:1650:55: error: expected parameter pack before '...'
     _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
                                                       ^~~
/usr/include/c++/7/tuple:1650:58: error: template argument 1 is invalid
     _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
                                                          ^
/usr/include/c++/7/tuple:1650:59: error: default argument for template parameter for class enclosing 'std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, int, int)'
     _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
                                                           ^
/usr/include/c++/7/tuple: In constructor 'std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, int, int)':
/usr/include/c++/7/tuple:1651:45: error: '_Indexes1' was not declared in this scope
       : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
                                             ^~~~~~~~~
/usr/include/c++/7/tuple:1652:46: error: '_Indexes2' was not declared in this scope
         second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
                                              ^~~~~~~~~
In file included from /usr/include/c++/7/bits/shared_ptr_base.h:55:0,
                 from /usr/include/c++/7/bits/shared_ptr.h:52,
                 from /usr/include/c++/7/memory:81,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/allocated_ptr.h: At global scope:
/usr/include/c++/7/bits/allocated_ptr.h:78:31: error: declaration of 'operator=' as non-function
       operator=(std::nullptr_t) noexcept
                               ^
/usr/include/c++/7/bits/allocated_ptr.h:78:15: error: expected ';' at end of member declaration
       operator=(std::nullptr_t) noexcept
               ^
/usr/include/c++/7/bits/allocated_ptr.h:78:31: error: invalid use of '::'
       operator=(std::nullptr_t) noexcept
                               ^
/usr/include/c++/7/bits/allocated_ptr.h:78:31: error: expected ';' at end of member declaration
/usr/include/c++/7/bits/allocated_ptr.h:78:33: error: expected unqualified-id before 'noexcept'
       operator=(std::nullptr_t) noexcept
                                 ^~~~~~~~
In file included from /usr/include/c++/7/bits/shared_ptr_base.h:58:0,
                 from /usr/include/c++/7/bits/shared_ptr.h:52,
                 from /usr/include/c++/7/memory:81,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/aligned_buffer.h:59:42: error: invalid use of '::'
       __aligned_membuf(std::nullptr_t) { }
                                          ^
/usr/include/c++/7/ext/aligned_buffer.h:59:42: error: expected ';' at end of member declaration
/usr/include/c++/7/ext/aligned_buffer.h:94:42: error: invalid use of '::'
       __aligned_buffer(std::nullptr_t) { }
                                          ^
/usr/include/c++/7/ext/aligned_buffer.h:94:42: error: expected ';' at end of member declaration
In file included from /llvm/include/llvm/ADT/STLExtras.h:21:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/iterator.h:65:43: error: 'ptrdiff_t' in namespace 'std' does not name a type
           typename DifferenceTypeT = std::ptrdiff_t, typename PointerT = T *,
                                           ^~~~~~~~~
/llvm/include/llvm/ADT/iterator.h:343:16: error: 'ptrdiff_t' is not a member of 'std'
           std::ptrdiff_t, NodeRef *, NodeRef &> {
                ^~~~~~~~~
/llvm/include/llvm/ADT/iterator.h:343:16: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:149:26: note:   'ptrdiff_t'
 typedef __PTRDIFF_TYPE__ ptrdiff_t;
                          ^~~~~~~~~
In file included from /llvm/include/llvm/ADT/STLExtras.h:21:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/iterator.h:343:16: error: 'ptrdiff_t' is not a member of 'std'
           std::ptrdiff_t, NodeRef *, NodeRef &> {
                ^~~~~~~~~
/llvm/include/llvm/ADT/iterator.h:343:16: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:149:26: note:   'ptrdiff_t'
 typedef __PTRDIFF_TYPE__ ptrdiff_t;
                          ^~~~~~~~~
In file included from /llvm/include/llvm/ADT/STLExtras.h:21:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/iterator.h:343:47: error: template argument 5 is invalid
           std::ptrdiff_t, NodeRef *, NodeRef &> {
                                               ^
/llvm/include/llvm/ADT/iterator.h:347:12: error: 'ptrdiff_t' is not a member of 'std'
       std::ptrdiff_t, NodeRef *, NodeRef &>;
            ^~~~~~~~~
/llvm/include/llvm/ADT/iterator.h:347:12: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:149:26: note:   'ptrdiff_t'
 typedef __PTRDIFF_TYPE__ ptrdiff_t;
                          ^~~~~~~~~
In file included from /llvm/include/llvm/ADT/STLExtras.h:21:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/iterator.h:347:12: error: 'ptrdiff_t' is not a member of 'std'
       std::ptrdiff_t, NodeRef *, NodeRef &>;
            ^~~~~~~~~
/llvm/include/llvm/ADT/iterator.h:347:12: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:149:26: note:   'ptrdiff_t'
 typedef __PTRDIFF_TYPE__ ptrdiff_t;
                          ^~~~~~~~~
In file included from /llvm/include/llvm/ADT/STLExtras.h:21:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/iterator.h:347:43: error: template argument 5 is invalid
       std::ptrdiff_t, NodeRef *, NodeRef &>;
                                           ^
/llvm/include/llvm/ADT/iterator.h: In constructor 'llvm::WrappedPairNodeDataIterator<ItType, NodeRef, DataRef>::WrappedPairNodeDataIterator(ItType, DataRef)':
/llvm/include/llvm/ADT/iterator.h:354:9: error: class 'llvm::WrappedPairNodeDataIterator<ItType, NodeRef, DataRef>' does not have any field named 'BaseT'
       : BaseT(Begin), DR(DR) {
         ^~~~~
In file included from /usr/include/c++/7/functional:58:0,
                 from /llvm/include/llvm/ADT/STLExtras.h:30,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/std_function.h: At global scope:
/usr/include/c++/7/bits/std_function.h:153:23: error: 'size_t' in namespace 'std' does not name a type
     static const std::size_t _M_max_size = sizeof(_Nocopy_types);
                       ^~~~~~
/usr/include/c++/7/bits/std_function.h:154:23: error: 'size_t' in namespace 'std' does not name a type
     static const std::size_t _M_max_align = __alignof__(_Nocopy_types);
                       ^~~~~~
/usr/include/c++/7/bits/std_function.h:162:26: error: '_M_max_size' was not declared in this scope
   && sizeof(_Functor) <= _M_max_size
                          ^~~~~~~~~~~
/usr/include/c++/7/bits/std_function.h:163:31: error: '_M_max_align' was not declared in this scope
   && __alignof__(_Functor) <= _M_max_align
                               ^~~~~~~~~~~~
/usr/include/c++/7/bits/std_function.h:163:31: note: suggested alternative: 'max_align_t'
   && __alignof__(_Functor) <= _M_max_align
                               ^~~~~~~~~~~~
                               max_align_t
/usr/include/c++/7/bits/std_function.h:164:7: error: '_M_max_align' was not declared in this scope
   && (_M_max_align % __alignof__(_Functor) == 0));
       ^~~~~~~~~~~~
/usr/include/c++/7/bits/std_function.h:164:7: note: suggested alternative: 'max_align_t'
   && (_M_max_align % __alignof__(_Functor) == 0));
       ^~~~~~~~~~~~
       max_align_t
In file included from /llvm/include/llvm/ADT/STLExtras.h:30:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/functional:326:17: error: 'std::size_t' has not been declared
   template<std::size_t __i, typename _Tuple>
                 ^~~~~~
/usr/include/c++/7/functional:328:29: error: '__i' was not declared in this scope
       = typename enable_if<(__i < tuple_size<_Tuple>::value),
                             ^~~
/usr/include/c++/7/functional:328:29: note: suggested alternative: '__N'
       = typename enable_if<(__i < tuple_size<_Tuple>::value),
                             ^~~
                             __N
/usr/include/c++/7/functional:329:21: error: '__i' was not declared in this scope
       tuple_element<__i, _Tuple>>::type::type;
                     ^~~
/usr/include/c++/7/functional:329:21: note: suggested alternative: '__N'
       tuple_element<__i, _Tuple>>::type::type;
                     ^~~
                     __N
/usr/include/c++/7/functional:329:26: error: template argument 1 is invalid
       tuple_element<__i, _Tuple>>::type::type;
                          ^~~~~~
/usr/include/c++/7/functional:329:32: error: template argument 2 is invalid
       tuple_element<__i, _Tuple>>::type::type;
                                ^~
/usr/include/c++/7/functional:329:36: error: '<expression error>::type' has not been declared
       tuple_element<__i, _Tuple>>::type::type;
                                    ^~~~
/usr/include/c++/7/functional:391:57: error: 'std::size_t' has not been declared
       template<typename _CVArg, typename... _Args, std::size_t... _Indexes>
                                                         ^~~~~~
/usr/include/c++/7/functional:394:28: error: '_Indexes' was not declared in this scope
         const _Index_tuple<_Indexes...>&) const volatile
                            ^~~~~~~~
/usr/include/c++/7/functional:394:28: note: suggested alternative: 'rindex'
         const _Index_tuple<_Indexes...>&) const volatile
                            ^~~~~~~~
                            rindex
/usr/include/c++/7/functional:394:36: error: expected parameter pack before '...'
         const _Index_tuple<_Indexes...>&) const volatile
                                    ^~~
/usr/include/c++/7/functional:394:39: error: template argument 1 is invalid
         const _Index_tuple<_Indexes...>&) const volatile
                                       ^
/usr/include/c++/7/functional: In member function 'decltype (__arg((declval<_Args>)()...)) std::_Mu<_Arg, true, false>::__call(_CVArg&, std::tuple<_Args2 ...>&, const int&) const volatile':
/usr/include/c++/7/functional:397:26: error: '_Indexes' was not declared in this scope
    return __arg(std::get<_Indexes>(std::move(__tuple))...);
                          ^~~~~~~~
/usr/include/c++/7/functional:397:26: note: suggested alternative: 'rindex'
    return __arg(std::get<_Indexes>(std::move(__tuple))...);
                          ^~~~~~~~
                          rindex
/usr/include/c++/7/functional:397:55: error: expansion pattern 'get<<expression error> >(std::move(__tuple))' contains no argument packs
    return __arg(std::get<_Indexes>(std::move(__tuple))...);
                                                       ^~~
/usr/include/c++/7/functional: At global scope:
/usr/include/c++/7/functional:411:2: error: '_Safe_tuple_element_t' does not name a type; did you mean 'tuple_element'?
  _Safe_tuple_element_t<(is_placeholder<_Arg>::value - 1), _Tuple>&&
  ^~~~~~~~~~~~~~~~~~~~~
  tuple_element
/usr/include/c++/7/functional:435:17: error: 'std::size_t' has not been declared
   template<std::size_t _Ind, typename... _Tp>
                 ^~~~~~
/usr/include/c++/7/functional:438:8: error: '__tuple_element_t' does not name a type; did you mean 'tuple_element'?
     -> __tuple_element_t<_Ind, tuple<_Tp...>> volatile&
        ^~~~~~~~~~~~~~~~~
        tuple_element
/usr/include/c++/7/functional:438:25: error: expected initializer before '<' token
     -> __tuple_element_t<_Ind, tuple<_Tp...>> volatile&
                         ^
/usr/include/c++/7/functional:442:17: error: 'std::size_t' has not been declared
   template<std::size_t _Ind, typename... _Tp>
                 ^~~~~~
/usr/include/c++/7/functional:445:8: error: '__tuple_element_t' does not name a type; did you mean 'tuple_element'?
     -> __tuple_element_t<_Ind, tuple<_Tp...>> const volatile&
        ^~~~~~~~~~~~~~~~~
        tuple_element
/usr/include/c++/7/functional:445:25: error: expected initializer before '<' token
     -> __tuple_element_t<_Ind, tuple<_Tp...>> const volatile&
                         ^
/usr/include/c++/7/functional:463:58: error: 'std::size_t' has not been declared
       template<typename _Result, typename... _Args, std::size_t... _Indexes>
                                                          ^~~~~~
/usr/include/c++/7/functional:465:48: error: '_Indexes' was not declared in this scope
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>)
                                                ^~~~~~~~
/usr/include/c++/7/functional:465:48: note: suggested alternative: 'rindex'
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>)
                                                ^~~~~~~~
                                                rindex
/usr/include/c++/7/functional:465:56: error: expected parameter pack before '...'
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>)
                                                        ^~~
/usr/include/c++/7/functional:465:59: error: template argument 1 is invalid
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>)
                                                           ^
/usr/include/c++/7/functional:473:58: error: 'std::size_t' has not been declared
       template<typename _Result, typename... _Args, std::size_t... _Indexes>
                                                          ^~~~~~
/usr/include/c++/7/functional:475:50: error: '_Indexes' was not declared in this scope
  __call_c(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) const
                                                  ^~~~~~~~
/usr/include/c++/7/functional:475:50: note: suggested alternative: 'rindex'
  __call_c(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) const
                                                  ^~~~~~~~
                                                  rindex
/usr/include/c++/7/functional:475:58: error: expected parameter pack before '...'
  __call_c(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) const
                                                          ^~~
/usr/include/c++/7/functional:475:61: error: template argument 1 is invalid
  __call_c(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) const
                                                             ^
/usr/include/c++/7/functional:483:58: error: 'std::size_t' has not been declared
       template<typename _Result, typename... _Args, std::size_t... _Indexes>
                                                          ^~~~~~
/usr/include/c++/7/functional:486:17: error: '_Indexes' was not declared in this scope
    _Index_tuple<_Indexes...>) volatile
                 ^~~~~~~~
/usr/include/c++/7/functional:486:17: note: suggested alternative: 'rindex'
    _Index_tuple<_Indexes...>) volatile
                 ^~~~~~~~
                 rindex
/usr/include/c++/7/functional:486:25: error: expected parameter pack before '...'
    _Index_tuple<_Indexes...>) volatile
                         ^~~
/usr/include/c++/7/functional:486:28: error: template argument 1 is invalid
    _Index_tuple<_Indexes...>) volatile
                            ^
/usr/include/c++/7/functional:494:58: error: 'std::size_t' has not been declared
       template<typename _Result, typename... _Args, std::size_t... _Indexes>
                                                          ^~~~~~
/usr/include/c++/7/functional:497:19: error: '_Indexes' was not declared in this scope
      _Index_tuple<_Indexes...>) const volatile
                   ^~~~~~~~
/usr/include/c++/7/functional:497:19: note: suggested alternative: 'rindex'
      _Index_tuple<_Indexes...>) const volatile
                   ^~~~~~~~
                   rindex
/usr/include/c++/7/functional:497:27: error: expected parameter pack before '...'
      _Index_tuple<_Indexes...>) const volatile
                           ^~~
/usr/include/c++/7/functional:497:30: error: template argument 1 is invalid
      _Index_tuple<_Indexes...>) const volatile
                              ^
/usr/include/c++/7/functional: In member function '_Result std::_Bind<_Functor(_Bound_args ...)>::__call(std::tuple<_Args2 ...>&&, int)':
/usr/include/c++/7/functional:468:36: error: '_Indexes' was not declared in this scope
        _Mu<_Bound_args>()(std::get<_Indexes>(_M_bound_args), __args)...
                                    ^~~~~~~~
/usr/include/c++/7/functional:468:36: note: suggested alternative: 'rindex'
        _Mu<_Bound_args>()(std::get<_Indexes>(_M_bound_args), __args)...
                                    ^~~~~~~~
                                    rindex
/usr/include/c++/7/functional: In member function '_Result std::_Bind<_Functor(_Bound_args ...)>::__call_c(std::tuple<_Args2 ...>&&, int) const':
/usr/include/c++/7/functional:478:36: error: '_Indexes' was not declared in this scope
        _Mu<_Bound_args>()(std::get<_Indexes>(_M_bound_args), __args)...
                                    ^~~~~~~~
/usr/include/c++/7/functional:478:36: note: suggested alternative: 'rindex'
        _Mu<_Bound_args>()(std::get<_Indexes>(_M_bound_args), __args)...
                                    ^~~~~~~~
                                    rindex
/usr/include/c++/7/functional: In member function '_Result std::_Bind<_Functor(_Bound_args ...)>::__call_v(std::tuple<_Args2 ...>&&, int) volatile':
/usr/include/c++/7/functional:489:27: error: '__volget' was not declared in this scope
        _Mu<_Bound_args>()(__volget<_Indexes>(_M_bound_args), __args)...
                           ^~~~~~~~
/usr/include/c++/7/functional:489:27: note: suggested alternative: '__void_t'
        _Mu<_Bound_args>()(__volget<_Indexes>(_M_bound_args), __args)...
                           ^~~~~~~~
                           __void_t
/usr/include/c++/7/functional:489:36: error: '_Indexes' was not declared in this scope
        _Mu<_Bound_args>()(__volget<_Indexes>(_M_bound_args), __args)...
                                    ^~~~~~~~
/usr/include/c++/7/functional:489:36: note: suggested alternative: 'rindex'
        _Mu<_Bound_args>()(__volget<_Indexes>(_M_bound_args), __args)...
                                    ^~~~~~~~
                                    rindex
/usr/include/c++/7/functional: In member function '_Result std::_Bind<_Functor(_Bound_args ...)>::__call_c_v(std::tuple<_Args2 ...>&&, int) const volatile':
/usr/include/c++/7/functional:500:27: error: '__volget' was not declared in this scope
        _Mu<_Bound_args>()(__volget<_Indexes>(_M_bound_args), __args)...
                           ^~~~~~~~
/usr/include/c++/7/functional:500:27: note: suggested alternative: '__void_t'
        _Mu<_Bound_args>()(__volget<_Indexes>(_M_bound_args), __args)...
                           ^~~~~~~~
                           __void_t
/usr/include/c++/7/functional:500:36: error: '_Indexes' was not declared in this scope
        _Mu<_Bound_args>()(__volget<_Indexes>(_M_bound_args), __args)...
                                    ^~~~~~~~
/usr/include/c++/7/functional:500:36: note: suggested alternative: 'rindex'
        _Mu<_Bound_args>()(__volget<_Indexes>(_M_bound_args), __args)...
                                    ^~~~~~~~
                                    rindex
/usr/include/c++/7/functional: At global scope:
/usr/include/c++/7/functional:619:55: error: 'std::size_t' has not been declared
       template<typename _Res, typename... _Args, std::size_t... _Indexes>
                                                       ^~~~~~
/usr/include/c++/7/functional:621:48: error: '_Indexes' was not declared in this scope
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>)
                                                ^~~~~~~~
/usr/include/c++/7/functional:621:48: note: suggested alternative: 'rindex'
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>)
                                                ^~~~~~~~
                                                rindex
/usr/include/c++/7/functional:621:56: error: expected parameter pack before '...'
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>)
                                                        ^~~
/usr/include/c++/7/functional:621:59: error: template argument 1 is invalid
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>)
                                                           ^
/usr/include/c++/7/functional:628:55: error: 'std::size_t' has not been declared
       template<typename _Res, typename... _Args, std::size_t... _Indexes>
                                                       ^~~~~~
/usr/include/c++/7/functional:630:48: error: '_Indexes' was not declared in this scope
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>)
                                                ^~~~~~~~
/usr/include/c++/7/functional:630:48: note: suggested alternative: 'rindex'
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>)
                                                ^~~~~~~~
                                                rindex
/usr/include/c++/7/functional:630:56: error: expected parameter pack before '...'
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>)
                                                        ^~~
/usr/include/c++/7/functional:630:59: error: template argument 1 is invalid
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>)
                                                           ^
/usr/include/c++/7/functional:637:55: error: 'std::size_t' has not been declared
       template<typename _Res, typename... _Args, std::size_t... _Indexes>
                                                       ^~~~~~
/usr/include/c++/7/functional:639:48: error: '_Indexes' was not declared in this scope
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) const
                                                ^~~~~~~~
/usr/include/c++/7/functional:639:48: note: suggested alternative: 'rindex'
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) const
                                                ^~~~~~~~
                                                rindex
/usr/include/c++/7/functional:639:56: error: expected parameter pack before '...'
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) const
                                                        ^~~
/usr/include/c++/7/functional:639:59: error: template argument 1 is invalid
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) const
                                                           ^
/usr/include/c++/7/functional:646:55: error: 'std::size_t' has not been declared
       template<typename _Res, typename... _Args, std::size_t... _Indexes>
                                                       ^~~~~~
/usr/include/c++/7/functional:648:48: error: '_Indexes' was not declared in this scope
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) const
                                                ^~~~~~~~
/usr/include/c++/7/functional:648:48: note: suggested alternative: 'rindex'
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) const
                                                ^~~~~~~~
                                                rindex
/usr/include/c++/7/functional:648:56: error: expected parameter pack before '...'
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) const
                                                        ^~~
/usr/include/c++/7/functional:648:59: error: template argument 1 is invalid
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) const
                                                           ^
/usr/include/c++/7/functional:655:55: error: 'std::size_t' has not been declared
       template<typename _Res, typename... _Args, std::size_t... _Indexes>
                                                       ^~~~~~
/usr/include/c++/7/functional:657:48: error: '_Indexes' was not declared in this scope
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) volatile
                                                ^~~~~~~~
/usr/include/c++/7/functional:657:48: note: suggested alternative: 'rindex'
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) volatile
                                                ^~~~~~~~
                                                rindex
/usr/include/c++/7/functional:657:56: error: expected parameter pack before '...'
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) volatile
                                                        ^~~
/usr/include/c++/7/functional:657:59: error: template argument 1 is invalid
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) volatile
                                                           ^
/usr/include/c++/7/functional:664:55: error: 'std::size_t' has not been declared
       template<typename _Res, typename... _Args, std::size_t... _Indexes>
                                                       ^~~~~~
/usr/include/c++/7/functional:666:48: error: '_Indexes' was not declared in this scope
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) volatile
                                                ^~~~~~~~
/usr/include/c++/7/functional:666:48: note: suggested alternative: 'rindex'
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) volatile
                                                ^~~~~~~~
                                                rindex
/usr/include/c++/7/functional:666:56: error: expected parameter pack before '...'
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) volatile
                                                        ^~~
/usr/include/c++/7/functional:666:59: error: template argument 1 is invalid
  __call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) volatile
                                                           ^
/usr/include/c++/7/functional:673:55: error: 'std::size_t' has not been declared
       template<typename _Res, typename... _Args, std::size_t... _Indexes>
                                                       ^~~~~~
/usr/include/c++/7/functional:676:22: error: '_Indexes' was not declared in this scope
         _Index_tuple<_Indexes...>) const volatile
                      ^~~~~~~~
/usr/include/c++/7/functional:676:22: note: suggested alternative: 'rindex'
         _Index_tuple<_Indexes...>) const volatile
                      ^~~~~~~~
                      rindex
/usr/include/c++/7/functional:676:30: error: expected parameter pack before '...'
         _Index_tuple<_Indexes...>) const volatile
                              ^~~
/usr/include/c++/7/functional:676:33: error: template argument 1 is invalid
         _Index_tuple<_Indexes...>) const volatile
                                 ^
/usr/include/c++/7/functional:683:55: error: 'std::size_t' has not been declared
       template<typename _Res, typename... _Args, std::size_t... _Indexes>
                                                       ^~~~~~
/usr/include/c++/7/functional:686:22: error: '_Indexes' was not declared in this scope
         _Index_tuple<_Indexes...>) const volatile
                      ^~~~~~~~
/usr/include/c++/7/functional:686:22: note: suggested alternative: 'rindex'
         _Index_tuple<_Indexes...>) const volatile
                      ^~~~~~~~
                      rindex
/usr/include/c++/7/functional:686:30: error: expected parameter pack before '...'
         _Index_tuple<_Indexes...>) const volatile
                              ^~~
/usr/include/c++/7/functional:686:33: error: template argument 1 is invalid
         _Index_tuple<_Indexes...>) const volatile
                                 ^
/usr/include/c++/7/functional: In member function 'std::_Bind_result<_Result, _Functor(_Bound_args ...)>::__disable_if_void<_Res> std::_Bind_result<_Result, _Functor(_Bound_args ...)>::__call(std::tuple<_Args2 ...>&&, int)':
/usr/include/c++/7/functional:624:19: error: '_Indexes' was not declared in this scope
         (std::get<_Indexes>(_M_bound_args), __args)...);
                   ^~~~~~~~
/usr/include/c++/7/functional:624:19: note: suggested alternative: 'rindex'
         (std::get<_Indexes>(_M_bound_args), __args)...);
                   ^~~~~~~~
                   rindex
/usr/include/c++/7/functional: In member function 'std::_Bind_result<_Result, _Functor(_Bound_args ...)>::__enable_if_void<_Res> std::_Bind_result<_Result, _Functor(_Bound_args ...)>::__call(std::tuple<_Args2 ...>&&, int)':
/usr/include/c++/7/functional:633:19: error: '_Indexes' was not declared in this scope
         (std::get<_Indexes>(_M_bound_args), __args)...);
                   ^~~~~~~~
/usr/include/c++/7/functional:633:19: note: suggested alternative: 'rindex'
         (std::get<_Indexes>(_M_bound_args), __args)...);
                   ^~~~~~~~
                   rindex
/usr/include/c++/7/functional: In member function 'std::_Bind_result<_Result, _Functor(_Bound_args ...)>::__disable_if_void<_Res> std::_Bind_result<_Result, _Functor(_Bound_args ...)>::__call(std::tuple<_Args2 ...>&&, int) const':
/usr/include/c++/7/functional:642:19: error: '_Indexes' was not declared in this scope
         (std::get<_Indexes>(_M_bound_args), __args)...);
                   ^~~~~~~~
/usr/include/c++/7/functional:642:19: note: suggested alternative: 'rindex'
         (std::get<_Indexes>(_M_bound_args), __args)...);
                   ^~~~~~~~
                   rindex
/usr/include/c++/7/functional: In member function 'std::_Bind_result<_Result, _Functor(_Bound_args ...)>::__enable_if_void<_Res> std::_Bind_result<_Result, _Functor(_Bound_args ...)>::__call(std::tuple<_Args2 ...>&&, int) const':
/usr/include/c++/7/functional:651:19: error: '_Indexes' was not declared in this scope
         (std::get<_Indexes>(_M_bound_args),  __args)...);
                   ^~~~~~~~
/usr/include/c++/7/functional:651:19: note: suggested alternative: 'rindex'
         (std::get<_Indexes>(_M_bound_args),  __args)...);
                   ^~~~~~~~
                   rindex
/usr/include/c++/7/functional: In member function 'std::_Bind_result<_Result, _Functor(_Bound_args ...)>::__disable_if_void<_Res> std::_Bind_result<_Result, _Functor(_Bound_args ...)>::__call(std::tuple<_Args2 ...>&&, int) volatile':
/usr/include/c++/7/functional:660:10: error: '__volget' was not declared in this scope
         (__volget<_Indexes>(_M_bound_args), __args)...);
          ^~~~~~~~
/usr/include/c++/7/functional:660:10: note: suggested alternative: '__void_t'
         (__volget<_Indexes>(_M_bound_args), __args)...);
          ^~~~~~~~
          __void_t
/usr/include/c++/7/functional:660:19: error: '_Indexes' was not declared in this scope
         (__volget<_Indexes>(_M_bound_args), __args)...);
                   ^~~~~~~~
/usr/include/c++/7/functional:660:19: note: suggested alternative: 'rindex'
         (__volget<_Indexes>(_M_bound_args), __args)...);
                   ^~~~~~~~
                   rindex
/usr/include/c++/7/functional: In member function 'std::_Bind_result<_Result, _Functor(_Bound_args ...)>::__enable_if_void<_Res> std::_Bind_result<_Result, _Functor(_Bound_args ...)>::__call(std::tuple<_Args2 ...>&&, int) volatile':
/usr/include/c++/7/functional:669:10: error: '__volget' was not declared in this scope
         (__volget<_Indexes>(_M_bound_args), __args)...);
          ^~~~~~~~
/usr/include/c++/7/functional:669:10: note: suggested alternative: '__void_t'
         (__volget<_Indexes>(_M_bound_args), __args)...);
          ^~~~~~~~
          __void_t
/usr/include/c++/7/functional:669:19: error: '_Indexes' was not declared in this scope
         (__volget<_Indexes>(_M_bound_args), __args)...);
                   ^~~~~~~~
/usr/include/c++/7/functional:669:19: note: suggested alternative: 'rindex'
         (__volget<_Indexes>(_M_bound_args), __args)...);
                   ^~~~~~~~
                   rindex
/usr/include/c++/7/functional: In member function 'std::_Bind_result<_Result, _Functor(_Bound_args ...)>::__disable_if_void<_Res> std::_Bind_result<_Result, _Functor(_Bound_args ...)>::__call(std::tuple<_Args2 ...>&&, int) const volatile':
/usr/include/c++/7/functional:679:10: error: '__volget' was not declared in this scope
         (__volget<_Indexes>(_M_bound_args), __args)...);
          ^~~~~~~~
/usr/include/c++/7/functional:679:10: note: suggested alternative: '__void_t'
         (__volget<_Indexes>(_M_bound_args), __args)...);
          ^~~~~~~~
          __void_t
/usr/include/c++/7/functional:679:19: error: '_Indexes' was not declared in this scope
         (__volget<_Indexes>(_M_bound_args), __args)...);
                   ^~~~~~~~
/usr/include/c++/7/functional:679:19: note: suggested alternative: 'rindex'
         (__volget<_Indexes>(_M_bound_args), __args)...);
                   ^~~~~~~~
                   rindex
/usr/include/c++/7/functional: In member function 'std::_Bind_result<_Result, _Functor(_Bound_args ...)>::__enable_if_void<_Res> std::_Bind_result<_Result, _Functor(_Bound_args ...)>::__call(std::tuple<_Args2 ...>&&, int) const volatile':
/usr/include/c++/7/functional:689:10: error: '__volget' was not declared in this scope
         (__volget<_Indexes>(_M_bound_args), __args)...);
          ^~~~~~~~
/usr/include/c++/7/functional:689:10: note: suggested alternative: '__void_t'
         (__volget<_Indexes>(_M_bound_args), __args)...);
          ^~~~~~~~
          __void_t
/usr/include/c++/7/functional:689:19: error: '_Indexes' was not declared in this scope
         (__volget<_Indexes>(_M_bound_args), __args)...);
                   ^~~~~~~~
/usr/include/c++/7/functional:689:19: note: suggested alternative: 'rindex'
         (__volget<_Indexes>(_M_bound_args), __args)...);
                   ^~~~~~~~
                   rindex
In file included from /llvm/include/llvm/ADT/StringRef.h:12:0,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/STLExtras.h: At global scope:
/llvm/include/llvm/ADT/STLExtras.h:131:33: error: invalid use of '::'
   function_ref(std::nullptr_t) {}
                                 ^
/llvm/include/llvm/ADT/STLExtras.h:131:33: error: expected ';' at end of member declaration
/llvm/include/llvm/ADT/STLExtras.h:548:39: error: template argument 1 is invalid
         0, std::tuple<Iters...>>::type>::difference_type,
                                       ^
/llvm/include/llvm/ADT/STLExtras.h:554:42: error: template argument 4 is invalid
     typename ZipTupleType<Iters...>::type>;
                                          ^
/llvm/include/llvm/ADT/STLExtras.h:557:38: error: expected template-name before '<' token
 struct zip_common : public zip_traits<ZipType, Iters...> {
                                      ^
/llvm/include/llvm/ADT/STLExtras.h:557:38: error: expected '{' before '<' token
/llvm/include/llvm/ADT/STLExtras.h:711:45: error: template argument 1 is invalid
               0, std::tuple<Iters...>>::type>::difference_type,
                                             ^
/llvm/include/llvm/ADT/STLExtras.h:713:55: error: template argument 4 is invalid
           typename ZipLongestTupleType<Iters...>::type> {
                                                       ^
/llvm/include/llvm/ADT/STLExtras.h:814:68: error: template argument 4 is invalid
                                   std::forward_iterator_tag, ValueT> {
                                                                    ^
/llvm/include/llvm/ADT/STLExtras.h:997:47: error: 'size_t' is not a member of 'std'
 struct index_sequence : integer_sequence<std::size_t, I...> {};
                                               ^~~~~~
/llvm/include/llvm/ADT/STLExtras.h:997:47: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /llvm/include/llvm/ADT/StringRef.h:12:0,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/STLExtras.h:997:47: error: 'size_t' is not a member of 'std'
 struct index_sequence : integer_sequence<std::size_t, I...> {};
                                               ^~~~~~
/llvm/include/llvm/ADT/STLExtras.h:997:47: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /llvm/include/llvm/ADT/StringRef.h:12:0,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/STLExtras.h:997:59: error: template argument 1 is invalid
 struct index_sequence : integer_sequence<std::size_t, I...> {};
                                                           ^
/llvm/include/llvm/ADT/STLExtras.h:997:59: note: invalid template non-type parameter
/llvm/include/llvm/ADT/STLExtras.h:999:16: error: 'std::size_t' has not been declared
 template <std::size_t N, std::size_t... I>
                ^~~~~~
/llvm/include/llvm/ADT/STLExtras.h:999:31: error: 'std::size_t' has not been declared
 template <std::size_t N, std::size_t... I>
                               ^~~~~~
/llvm/include/llvm/ADT/STLExtras.h:1000:44: error: 'N' was not declared in this scope
 struct build_index_impl : build_index_impl<N - 1, N - 1, I...> {};
                                            ^
/llvm/include/llvm/ADT/STLExtras.h:1000:51: error: 'N' was not declared in this scope
 struct build_index_impl : build_index_impl<N - 1, N - 1, I...> {};
                                                   ^
/llvm/include/llvm/ADT/STLExtras.h:1000:58: error: 'I' was not declared in this scope
 struct build_index_impl : build_index_impl<N - 1, N - 1, I...> {};
                                                          ^
/llvm/include/llvm/ADT/STLExtras.h:1000:59: error: expected parameter pack before '...'
 struct build_index_impl : build_index_impl<N - 1, N - 1, I...> {};
                                                           ^~~
/llvm/include/llvm/ADT/STLExtras.h:1000:62: error: wrong number of template arguments (3, should be at least 0)
 struct build_index_impl : build_index_impl<N - 1, N - 1, I...> {};
                                                              ^
/llvm/include/llvm/ADT/STLExtras.h:1000:8: note: provided for 'template<<declaration error>, <declaration error> > struct llvm::build_index_impl'
 struct build_index_impl : build_index_impl<N - 1, N - 1, I...> {};
        ^~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/STLExtras.h:1001:16: error: 'std::size_t' has not been declared
 template <std::size_t... I>
                ^~~~~~
/llvm/include/llvm/ADT/STLExtras.h:1002:28: error: 'I' was not declared in this scope
 struct build_index_impl<0, I...> : index_sequence<I...> {};
                            ^
/llvm/include/llvm/ADT/STLExtras.h:1002:29: error: expected parameter pack before '...'
 struct build_index_impl<0, I...> : index_sequence<I...> {};
                             ^~~
/llvm/include/llvm/ADT/STLExtras.h:1002:32: error: template argument 2 is invalid
 struct build_index_impl<0, I...> : index_sequence<I...> {};
                                ^
/llvm/include/llvm/ADT/STLExtras.h:1002:51: error: 'I' was not declared in this scope
 struct build_index_impl<0, I...> : index_sequence<I...> {};
                                                   ^
/llvm/include/llvm/ADT/STLExtras.h:1002:52: error: expected parameter pack before '...'
 struct build_index_impl<0, I...> : index_sequence<I...> {};
                                                    ^~~
/llvm/include/llvm/ADT/STLExtras.h:1002:55: error: template argument 1 is invalid
 struct build_index_impl<0, I...> : index_sequence<I...> {};
                                                       ^
/llvm/include/llvm/ADT/STLExtras.h:1006:59: error: template argument 2 is invalid
 struct index_sequence_for : build_index_impl<sizeof...(Ts)> {};
                                                           ^
/llvm/include/llvm/ADT/STLExtras.h:1042:25: error: 'std::size_t' has not been declared
 template <class T, std::size_t N>
                         ^~~~~~
/llvm/include/llvm/ADT/STLExtras.h:1043:46: error: 'N' was not declared in this scope
 constexpr inline size_t array_lengthof(T (&)[N]) {
                                              ^
/llvm/include/llvm/ADT/STLExtras.h: In function 'constexpr size_t llvm::array_lengthof(...)':
/llvm/include/llvm/ADT/STLExtras.h:1044:10: error: 'N' was not declared in this scope
   return N;
          ^
/llvm/include/llvm/ADT/STLExtras.h: At global scope:
/llvm/include/llvm/ADT/STLExtras.h:1423:27: error: expected ')' before 'Index'
   result_pair(std::size_t Index, IterOfRange<R> Iter)
                           ^~~~~
/llvm/include/llvm/ADT/STLExtras.h:1432:8: error: 'size_t' in namespace 'std' does not name a type
   std::size_t index() const { return Index; }
        ^~~~~~
/llvm/include/llvm/ADT/STLExtras.h:1437:8: error: 'size_t' in namespace 'std' does not name a type
   std::size_t Index = std::numeric_limits<std::size_t>::max();
        ^~~~~~
/llvm/include/llvm/ADT/STLExtras.h: In member function 'llvm::detail::result_pair<R>& llvm::detail::result_pair<R>::operator=(const llvm::detail::result_pair<R>&)':
/llvm/include/llvm/ADT/STLExtras.h:1427:5: error: 'Index' was not declared in this scope
     Index = Other.Index;
     ^~~~~
/llvm/include/llvm/ADT/STLExtras.h:1427:5: note: suggested alternative: 'index'
     Index = Other.Index;
     ^~~~~
     index
/llvm/include/llvm/ADT/STLExtras.h: At global scope:
/llvm/include/llvm/ADT/STLExtras.h:1454:31: error: expected ')' before 'Index'
   enumerator_iter(std::size_t Index, IterOfRange<R> Iter)
                               ^~~~~
/llvm/include/llvm/ADT/STLExtras.h:1522:44: error: 'std::size_t' has not been declared
 template <typename F, typename Tuple, std::size_t... I>
                                            ^~~~~~
/llvm/include/llvm/ADT/STLExtras.h:1523:56: error: 'I' was not declared in this scope
 auto apply_tuple_impl(F &&f, Tuple &&t, index_sequence<I...>)
                                                        ^
/llvm/include/llvm/ADT/STLExtras.h:1523:57: error: expected parameter pack before '...'
 auto apply_tuple_impl(F &&f, Tuple &&t, index_sequence<I...>)
                                                         ^~~
/llvm/include/llvm/ADT/STLExtras.h:1523:60: error: template argument 1 is invalid
 auto apply_tuple_impl(F &&f, Tuple &&t, index_sequence<I...>)
                                                            ^
/llvm/include/llvm/ADT/STLExtras.h:1524:45: error: 'I' was not declared in this scope
     -> decltype(std::forward<F>(f)(std::get<I>(std::forward<Tuple>(t))...)) {
                                             ^
/llvm/include/llvm/ADT/STLExtras.h:1524:71: error: expansion pattern 'get<<expression error> >(forward<Tuple>(t))' contains no argument packs
     -> decltype(std::forward<F>(f)(std::get<I>(std::forward<Tuple>(t))...)) {
                                                                       ^~~
/llvm/include/llvm/ADT/STLExtras.h:1524:71: error: expansion pattern 'get<<expression error> >(forward<Tuple>(t))' contains no argument packs
/llvm/include/llvm/ADT/STLExtras.h: In function 'decltype (forward<F>(f)(<expression error>)) llvm::detail::apply_tuple_impl(F&&, Tuple&&, int)':
/llvm/include/llvm/ADT/STLExtras.h:1525:38: error: 'I' was not declared in this scope
   return std::forward<F>(f)(std::get<I>(std::forward<Tuple>(t))...);
                                      ^
/llvm/include/llvm/ADT/STLExtras.h:1525:64: error: expansion pattern 'get<<expression error> >(forward<Tuple>(t))' contains no argument packs
   return std::forward<F>(f)(std::get<I>(std::forward<Tuple>(t))...);
                                                                ^~~
/llvm/include/llvm/ADT/STLExtras.h: At global scope:
/llvm/include/llvm/ADT/STLExtras.h:1537:65: error: template argument 2 is invalid
         std::tuple_size<typename std::decay<Tuple>::type>::value>{})) {
                                                                 ^
/llvm/include/llvm/ADT/STLExtras.h: In function 'decltype (llvm::detail::apply_tuple_impl(forward<F>(f), forward<Tuple>(t), <expression error>)) llvm::apply_tuple(F&&, Tuple&&)':
/llvm/include/llvm/ADT/STLExtras.h:1539:63: error: template argument 2 is invalid
       std::tuple_size<typename std::decay<Tuple>::type>::value>;
                                                               ^
/llvm/include/llvm/ADT/STLExtras.h:1542:35: error: 'Indices' was not declared in this scope
                                   Indices{});
                                   ^~~~~~~
In file included from /llvm/include/llvm/ADT/SmallString.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringRef.h: At global scope:
/llvm/include/llvm/ADT/StringRef.h:79:33: error: invalid use of '::'
     StringRef(std::nullptr_t) = delete;
                                 ^~~~~~
/llvm/include/llvm/ADT/StringRef.h: In constructor 'llvm::StringRef::StringRef(const string&)':
/llvm/include/llvm/ADT/StringRef.h:91:38: error: 'const string {aka const class std::__cxx11::basic_string<char>}' has no member named 'length'
       : Data(Str.data()), Length(Str.length()) {}
                                      ^~~~~~
/llvm/include/llvm/ADT/StringRef.h: In member function 'std::__cxx11::string llvm::StringRef::str() const':
/llvm/include/llvm/ADT/StringRef.h:220:38: error: no matching function for call to 'std::__cxx11::basic_string<char>::basic_string(const char* const&, const size_t&)'
       return std::string(Data, Length);
                                      ^
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:604:9: note: candidate: template<class _InputIterator, class> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterator, _InputIterator, const _Alloc&)
         basic_string(_InputIterator __beg, _InputIterator __end,
         ^~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:604:9: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/ADT/SmallString.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringRef.h:220:38: note:   deduced conflicting types for parameter '_InputIterator' ('const char*' and 'long unsigned int')
       return std::string(Data, Length);
                                      ^
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:566:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       basic_string(basic_string&& __str, const _Alloc& __a)
       ^~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:566:7: note:   no known conversion for argument 2 from 'const size_t {aka const long unsigned int}' to 'const std::allocator<char>&'
/usr/include/c++/7/bits/basic_string.h:562:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       basic_string(const basic_string& __str, const _Alloc& __a)
       ^~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:562:7: note:   no known conversion for argument 2 from 'const size_t {aka const long unsigned int}' to 'const std::allocator<char>&'
/usr/include/c++/7/bits/basic_string.h:558:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::initializer_list<_Tp>, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
       ^~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:558:7: note:   no known conversion for argument 1 from 'const char* const' to 'std::initializer_list<char>'
/usr/include/c++/7/bits/basic_string.h:531:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       basic_string(basic_string&& __str) noexcept
       ^~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:531:7: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/7/bits/basic_string.h:509:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
       ^~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:509:7: note:   no known conversion for argument 2 from 'const size_t {aka const long unsigned int}' to 'const std::allocator<char>&'
/usr/include/c++/7/bits/basic_string.h:437:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       basic_string(const basic_string& __str)
       ^~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:437:7: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/7/bits/basic_string.h:429:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
       ^~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:429:7: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/7/bits/basic_string.h:420:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       basic_string()
       ^~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:420:7: note:   candidate expects 0 arguments, 2 provided
In file included from /llvm/include/llvm/ADT/SmallString.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringRef.h: In function 'std::__cxx11::string& llvm::operator+=(std::__cxx11::string&, llvm::StringRef)':
/llvm/include/llvm/ADT/StringRef.h:889:54: error: no matching function for call to 'std::__cxx11::basic_string<char>::append(const char*, size_t)'
     return buffer.append(string.data(), string.size());
                                                      ^
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:1202:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       append(const basic_string& __str)
       ^~~~~~
/usr/include/c++/7/bits/basic_string.h:1202:7: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/7/bits/basic_string.h:1244:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       append(const _CharT* __s)
       ^~~~~~
/usr/include/c++/7/bits/basic_string.h:1244:7: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/7/bits/basic_string.h:1271:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(std::initializer_list<_Tp>) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       append(initializer_list<_CharT> __l)
       ^~~~~~
/usr/include/c++/7/bits/basic_string.h:1271:7: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/7/bits/basic_string.h:1290:9: note: candidate: template<class _InputIterator, class> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(_InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
         append(_InputIterator __first, _InputIterator __last)
         ^~~~~~
/usr/include/c++/7/bits/basic_string.h:1290:9: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/ADT/SmallString.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringRef.h:889:54: note:   deduced conflicting types for parameter '_InputIterator' ('const char*' and 'long unsigned int')
     return buffer.append(string.data(), string.size());
                                                      ^
In file included from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:21:0,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/raw_ostream.h: In member function 'llvm::raw_ostream& llvm::raw_ostream::operator<<(const string&)':
/llvm/include/llvm/Support/raw_ostream.h:191:34: error: 'const string {aka const class std::__cxx11::basic_string<char>}' has no member named 'length'
     return write(Str.data(), Str.length());
                                  ^~~~~~
/llvm/include/llvm/Support/raw_ostream.h: In member function 'virtual uint64_t llvm::raw_string_ostream::current_pos() const':
/llvm/include/llvm/Support/raw_ostream.h:490:53: error: 'std::__cxx11::string {aka class std::__cxx11::basic_string<char>}' has no member named 'size'
   uint64_t current_pos() const override { return OS.size(); }
                                                     ^~~~
In file included from /llvm/include/llvm/Support/Host.h:16:0,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringMap.h: At global scope:
/llvm/include/llvm/ADT/StringMap.h:452:42: error: template argument 4 is invalid
                                   ValueTy> {
                                          ^
In file included from /llvm/include/llvm/ADT/APFloat.h:20:0,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/ArrayRef.h: In constructor 'constexpr llvm::ArrayRef<T>::ArrayRef(const int&)':
/llvm/include/llvm/ADT/ArrayRef.h:93:20: error: request for member 'data' in 'Arr', which is of non-class type 'const int'
         : Data(Arr.data()), Length(N) {}
                    ^~~~
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APFloat.h: In member function 'llvm::detail::DoubleAPFloat& llvm::detail::DoubleAPFloat::operator=(llvm::detail::DoubleAPFloat&&)':
/llvm/include/llvm/ADT/APFloat.h:598:46: error: no matching function for call to 'operator new(sizetype, llvm::detail::DoubleAPFloat*)'
       new (this) DoubleAPFloat(std::move(RHS));
                                              ^
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/ASTContext.h:17:0,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:26:7: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 void *operator new(size_t Bytes, const clang::ASTContext &C,
       ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:26:7: note:   no known conversion for argument 2 from 'llvm::detail::DoubleAPFloat*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APFloat.h:598:46: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::detail::DoubleAPFloat*'
       new (this) DoubleAPFloat(std::move(RHS));
                                              ^
/llvm/include/llvm/ADT/APFloat.h: In copy constructor 'llvm::APFloat::Storage::Storage(const llvm::APFloat::Storage&)':
/llvm/include/llvm/ADT/APFloat.h:717:38: error: no matching function for call to 'operator new(sizetype, llvm::APFloat::Storage*)'
         new (this) IEEEFloat(RHS.IEEE);
                                      ^
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/ASTContext.h:17:0,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:26:7: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 void *operator new(size_t Bytes, const clang::ASTContext &C,
       ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:26:7: note:   no known conversion for argument 2 from 'llvm::APFloat::Storage*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APFloat.h:717:38: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::APFloat::Storage*'
         new (this) IEEEFloat(RHS.IEEE);
                                      ^
/llvm/include/llvm/ADT/APFloat.h:721:44: error: no matching function for call to 'operator new(sizetype, llvm::APFloat::Storage*)'
         new (this) DoubleAPFloat(RHS.Double);
                                            ^
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/ASTContext.h:17:0,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:26:7: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 void *operator new(size_t Bytes, const clang::ASTContext &C,
       ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:26:7: note:   no known conversion for argument 2 from 'llvm::APFloat::Storage*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APFloat.h:721:44: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::APFloat::Storage*'
         new (this) DoubleAPFloat(RHS.Double);
                                            ^
/llvm/include/llvm/ADT/APFloat.h: In constructor 'llvm::APFloat::Storage::Storage(llvm::APFloat::Storage&&)':
/llvm/include/llvm/ADT/APFloat.h:729:49: error: no matching function for call to 'operator new(sizetype, llvm::APFloat::Storage*)'
         new (this) IEEEFloat(std::move(RHS.IEEE));
                                                 ^
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/ASTContext.h:17:0,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:26:7: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 void *operator new(size_t Bytes, const clang::ASTContext &C,
       ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:26:7: note:   no known conversion for argument 2 from 'llvm::APFloat::Storage*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APFloat.h:729:49: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::APFloat::Storage*'
         new (this) IEEEFloat(std::move(RHS.IEEE));
                                                 ^
/llvm/include/llvm/ADT/APFloat.h:733:55: error: no matching function for call to 'operator new(sizetype, llvm::APFloat::Storage*)'
         new (this) DoubleAPFloat(std::move(RHS.Double));
                                                       ^
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/ASTContext.h:17:0,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:26:7: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 void *operator new(size_t Bytes, const clang::ASTContext &C,
       ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:26:7: note:   no known conversion for argument 2 from 'llvm::APFloat::Storage*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APFloat.h:733:55: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::APFloat::Storage*'
         new (this) DoubleAPFloat(std::move(RHS.Double));
                                                       ^
/llvm/include/llvm/ADT/APFloat.h: In member function 'llvm::APFloat::Storage& llvm::APFloat::Storage::operator=(const llvm::APFloat::Storage&)':
/llvm/include/llvm/ADT/APFloat.h:748:31: error: no matching function for call to 'operator new(sizetype, llvm::APFloat::Storage*)'
         new (this) Storage(RHS);
                               ^
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/ASTContext.h:17:0,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:26:7: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 void *operator new(size_t Bytes, const clang::ASTContext &C,
       ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:26:7: note:   no known conversion for argument 2 from 'llvm::APFloat::Storage*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APFloat.h:748:31: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::APFloat::Storage*'
         new (this) Storage(RHS);
                               ^
/llvm/include/llvm/ADT/APFloat.h: In member function 'llvm::APFloat::Storage& llvm::APFloat::Storage::operator=(llvm::APFloat::Storage&&)':
/llvm/include/llvm/ADT/APFloat.h:762:42: error: no matching function for call to 'operator new(sizetype, llvm::APFloat::Storage*)'
         new (this) Storage(std::move(RHS));
                                          ^
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/ASTContext.h:17:0,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:26:7: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 void *operator new(size_t Bytes, const clang::ASTContext &C,
       ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:26:7: note:   no known conversion for argument 2 from 'llvm::APFloat::Storage*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APFloat.h:762:42: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::APFloat::Storage*'
         new (this) Storage(std::move(RHS));
                                          ^
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<long unsigned int> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<long unsigned int, std::allocator<long unsigned int> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<long unsigned int, std::allocator<long unsigned int> >'
/llvm/include/llvm/ADT/APFloat.h:1071:5:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<long unsigned int> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<long unsigned int> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<long unsigned int> >::_Base_type {aka std::allocator_traits<std::allocator<long unsigned int> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<long unsigned int> >::_Base_type {aka struct std::allocator_traits<std::allocator<long unsigned int> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APFloat.h: In member function 'llvm::APFloatBase::opStatus llvm::APFloat::convertToInteger(llvm::MutableArrayRef<long unsigned int>, unsigned int, bool, llvm::APFloatBase::roundingMode, bool*) const':
/llvm/include/llvm/ADT/APFloat.h:279:12: note:   initializing argument 1 of 'llvm::APFloatBase::opStatus llvm::detail::IEEEFloat::convertToInteger(llvm::MutableArrayRef<long unsigned int>, unsigned int, bool, llvm::APFloatBase::roundingMode, bool*) const'
   opStatus convertToInteger(MutableArrayRef<integerPart>, unsigned int, bool,
            ^~~~~~~~~~~~~~~~
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:21:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/PointerUnion.h: At global scope:
/llvm/include/llvm/ADT/PointerUnion.h:165:47: error: declaration of 'operator=' as non-function
   const PointerUnion &operator=(std::nullptr_t) {
                                               ^
/llvm/include/llvm/ADT/PointerUnion.h:165:31: error: expected ';' at end of member declaration
   const PointerUnion &operator=(std::nullptr_t) {
                               ^
/llvm/include/llvm/ADT/PointerUnion.h:168:3: error: ISO C++ forbids declaration of 'nullptr_t' with no type [-fpermissive]
   }
   ^
/llvm/include/llvm/ADT/PointerUnion.h:168:3: error: invalid use of '::'
/llvm/include/llvm/ADT/PointerUnion.h:168:3: error: expected ';' at end of member declaration
/llvm/include/llvm/ADT/PointerUnion.h:301:48: error: declaration of 'operator=' as non-function
   const PointerUnion3 &operator=(std::nullptr_t) {
                                                ^
/llvm/include/llvm/ADT/PointerUnion.h:301:32: error: expected ';' at end of member declaration
   const PointerUnion3 &operator=(std::nullptr_t) {
                                ^
/llvm/include/llvm/ADT/PointerUnion.h:304:3: error: ISO C++ forbids declaration of 'nullptr_t' with no type [-fpermissive]
   }
   ^
/llvm/include/llvm/ADT/PointerUnion.h:304:3: error: invalid use of '::'
/llvm/include/llvm/ADT/PointerUnion.h:304:3: error: expected ';' at end of member declaration
/llvm/include/llvm/ADT/PointerUnion.h:410:48: error: declaration of 'operator=' as non-function
   const PointerUnion4 &operator=(std::nullptr_t) {
                                                ^
/llvm/include/llvm/ADT/PointerUnion.h:410:32: error: expected ';' at end of member declaration
   const PointerUnion4 &operator=(std::nullptr_t) {
                                ^
/llvm/include/llvm/ADT/PointerUnion.h:413:3: error: ISO C++ forbids declaration of 'nullptr_t' with no type [-fpermissive]
   }
   ^
/llvm/include/llvm/ADT/PointerUnion.h:413:3: error: invalid use of '::'
/llvm/include/llvm/ADT/PointerUnion.h:413:3: error: expected ';' at end of member declaration
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::APValue::LValuePathEntry> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::APValue::LValuePathEntry, std::allocator<clang::APValue::LValuePathEntry> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::APValue::LValuePathEntry, std::allocator<clang::APValue::LValuePathEntry> >'
/llvm/tools/clang/include/clang/AST/APValue.h:201:65:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::APValue::LValuePathEntry> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::APValue::LValuePathEntry> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::APValue::LValuePathEntry> >::_Base_type {aka std::allocator_traits<std::allocator<clang::APValue::LValuePathEntry> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::APValue::LValuePathEntry> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::APValue::LValuePathEntry> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/AST/Decl.h:16:0,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/APValue.h: In constructor 'clang::APValue::APValue(clang::APValue::LValueBase, const clang::CharUnits&, llvm::ArrayRef<clang::APValue::LValuePathEntry>, bool, bool)':
/llvm/tools/clang/include/clang/AST/APValue.h:449:8: note:   initializing argument 3 of 'void clang::APValue::setLValue(clang::APValue::LValueBase, const clang::CharUnits&, llvm::ArrayRef<clang::APValue::LValuePathEntry>, bool, bool)'
   void setLValue(LValueBase B, const CharUnits &O,
        ^~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<const clang::CXXRecordDecl*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<const clang::CXXRecordDecl*, std::allocator<const clang::CXXRecordDecl*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<const clang::CXXRecordDecl*, std::allocator<const clang::CXXRecordDecl*> >'
/llvm/tools/clang/include/clang/AST/APValue.h:215:52:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<const clang::CXXRecordDecl*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<const clang::CXXRecordDecl*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<const clang::CXXRecordDecl*> >::_Base_type {aka std::allocator_traits<std::allocator<const clang::CXXRecordDecl*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<const clang::CXXRecordDecl*> >::_Base_type {aka struct std::allocator_traits<std::allocator<const clang::CXXRecordDecl*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/AST/Decl.h:16:0,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/APValue.h: In constructor 'clang::APValue::APValue(const clang::ValueDecl*, bool, llvm::ArrayRef<const clang::CXXRecordDecl*>)':
/llvm/tools/clang/include/clang/AST/APValue.h:517:8: note:   initializing argument 3 of 'void clang::APValue::MakeMemberPointer(const clang::ValueDecl*, bool, llvm::ArrayRef<const clang::CXXRecordDecl*>)'
   void MakeMemberPointer(const ValueDecl *Member, bool IsDerivedMember,
        ^~~~~~~~~~~~~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'clang::APValue::APSInt& clang::APValue::getInt()':
/llvm/tools/clang/include/clang/AST/APValue.h:259:34: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     return *(APSInt*)(char*)Data.buffer;
                                  ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'clang::APValue::APFloat& clang::APValue::getFloat()':
/llvm/tools/clang/include/clang/AST/APValue.h:267:35: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     return *(APFloat*)(char*)Data.buffer;
                                   ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'clang::APFixedPoint& clang::APValue::getFixedPoint()':
/llvm/tools/clang/include/clang/AST/APValue.h:275:42: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     return *(APFixedPoint *)(char *)Data.buffer;
                                          ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'clang::APValue::APSInt& clang::APValue::getComplexIntReal()':
/llvm/tools/clang/include/clang/AST/APValue.h:283:41: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     return ((ComplexAPSInt*)(char*)Data.buffer)->Real;
                                         ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'clang::APValue::APSInt& clang::APValue::getComplexIntImag()':
/llvm/tools/clang/include/clang/AST/APValue.h:291:41: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     return ((ComplexAPSInt*)(char*)Data.buffer)->Imag;
                                         ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'clang::APValue::APFloat& clang::APValue::getComplexFloatReal()':
/llvm/tools/clang/include/clang/AST/APValue.h:299:42: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     return ((ComplexAPFloat*)(char*)Data.buffer)->Real;
                                          ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'clang::APValue::APFloat& clang::APValue::getComplexFloatImag()':
/llvm/tools/clang/include/clang/AST/APValue.h:307:42: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     return ((ComplexAPFloat*)(char*)Data.buffer)->Imag;
                                          ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'clang::APValue& clang::APValue::getVectorElt(unsigned int)':
/llvm/tools/clang/include/clang/AST/APValue.h:328:31: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     return ((Vec*)(char*)Data.buffer)->Elts[I];
                               ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'unsigned int clang::APValue::getVectorLength() const':
/llvm/tools/clang/include/clang/AST/APValue.h:335:44: error: 'const DataType {aka const struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     return ((const Vec*)(const void *)Data.buffer)->NumElts;
                                            ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'clang::APValue& clang::APValue::getArrayInitializedElt(unsigned int)':
/llvm/tools/clang/include/clang/AST/APValue.h:341:31: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     return ((Arr*)(char*)Data.buffer)->Elts[I];
                               ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'clang::APValue& clang::APValue::getArrayFiller()':
/llvm/tools/clang/include/clang/AST/APValue.h:352:31: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     return ((Arr*)(char*)Data.buffer)->Elts[getArrayInitializedElts()];
                               ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'unsigned int clang::APValue::getArrayInitializedElts() const':
/llvm/tools/clang/include/clang/AST/APValue.h:359:44: error: 'const DataType {aka const struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     return ((const Arr*)(const void *)Data.buffer)->NumElts;
                                            ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'unsigned int clang::APValue::getArraySize() const':
/llvm/tools/clang/include/clang/AST/APValue.h:363:44: error: 'const DataType {aka const struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     return ((const Arr*)(const void *)Data.buffer)->ArrSize;
                                            ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'unsigned int clang::APValue::getStructNumBases() const':
/llvm/tools/clang/include/clang/AST/APValue.h:368:50: error: 'const DataType {aka const struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     return ((const StructData*)(const char*)Data.buffer)->NumBases;
                                                  ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'unsigned int clang::APValue::getStructNumFields() const':
/llvm/tools/clang/include/clang/AST/APValue.h:372:50: error: 'const DataType {aka const struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     return ((const StructData*)(const char*)Data.buffer)->NumFields;
                                                  ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'clang::APValue& clang::APValue::getStructBase(unsigned int)':
/llvm/tools/clang/include/clang/AST/APValue.h:376:38: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     return ((StructData*)(char*)Data.buffer)->Elts[i];
                                      ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'clang::APValue& clang::APValue::getStructField(unsigned int)':
/llvm/tools/clang/include/clang/AST/APValue.h:380:38: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     return ((StructData*)(char*)Data.buffer)->Elts[getStructNumBases() + i];
                                      ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'const clang::FieldDecl* clang::APValue::getUnionField() const':
/llvm/tools/clang/include/clang/AST/APValue.h:391:49: error: 'const DataType {aka const struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     return ((const UnionData*)(const char*)Data.buffer)->Field;
                                                 ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'clang::APValue& clang::APValue::getUnionValue()':
/llvm/tools/clang/include/clang/AST/APValue.h:395:38: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     return *((UnionData*)(char*)Data.buffer)->Value;
                                      ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'const clang::AddrLabelExpr* clang::APValue::getAddrLabelDiffLHS() const':
/llvm/tools/clang/include/clang/AST/APValue.h:407:57: error: 'const DataType {aka const struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     return ((const AddrLabelDiffData*)(const char*)Data.buffer)->LHSExpr;
                                                         ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'const clang::AddrLabelExpr* clang::APValue::getAddrLabelDiffRHS() const':
/llvm/tools/clang/include/clang/AST/APValue.h:411:57: error: 'const DataType {aka const struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     return ((const AddrLabelDiffData*)(const char*)Data.buffer)->RHSExpr;
                                                         ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'void clang::APValue::setInt(clang::APValue::APSInt)':
/llvm/tools/clang/include/clang/AST/APValue.h:416:29: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     *(APSInt *)(char *)Data.buffer = std::move(I);
                             ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'void clang::APValue::setFloat(clang::APValue::APFloat)':
/llvm/tools/clang/include/clang/AST/APValue.h:420:30: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     *(APFloat *)(char *)Data.buffer = std::move(F);
                              ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'void clang::APValue::setFixedPoint(clang::APFixedPoint)':
/llvm/tools/clang/include/clang/AST/APValue.h:424:35: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     *(APFixedPoint *)(char *)Data.buffer = std::move(FX);
                                   ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'void clang::APValue::setVector(const clang::APValue*, unsigned int)':
/llvm/tools/clang/include/clang/AST/APValue.h:428:24: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     ((Vec*)(char*)Data.buffer)->Elts = new APValue[N];
                        ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h:429:24: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     ((Vec*)(char*)Data.buffer)->NumElts = N;
                        ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h:431:26: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
       ((Vec*)(char*)Data.buffer)->Elts[i] = E[i];
                          ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'void clang::APValue::setComplexInt(clang::APValue::APSInt, clang::APValue::APSInt)':
/llvm/tools/clang/include/clang/AST/APValue.h:437:36: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     ((ComplexAPSInt *)(char *)Data.buffer)->Real = std::move(R);
                                    ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h:438:36: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     ((ComplexAPSInt *)(char *)Data.buffer)->Imag = std::move(I);
                                    ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'void clang::APValue::setComplexFloat(clang::APValue::APFloat, clang::APValue::APFloat)':
/llvm/tools/clang/include/clang/AST/APValue.h:444:37: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     ((ComplexAPFloat *)(char *)Data.buffer)->Real = std::move(R);
                                     ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h:445:37: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     ((ComplexAPFloat *)(char *)Data.buffer)->Imag = std::move(I);
                                     ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'void clang::APValue::setUnion(const clang::FieldDecl*, const clang::APValue&)':
/llvm/tools/clang/include/clang/AST/APValue.h:454:30: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     ((UnionData*)(char*)Data.buffer)->Field = Field;
                              ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h:455:31: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     *((UnionData*)(char*)Data.buffer)->Value = Value;
                               ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'void clang::APValue::setAddrLabelDiff(const clang::AddrLabelExpr*, const clang::AddrLabelExpr*)':
/llvm/tools/clang/include/clang/AST/APValue.h:459:38: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     ((AddrLabelDiffData*)(char*)Data.buffer)->LHSExpr = LHSExpr;
                                      ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h:460:38: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     ((AddrLabelDiffData*)(char*)Data.buffer)->RHSExpr = RHSExpr;
                                      ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'void clang::APValue::MakeInt()':
/llvm/tools/clang/include/clang/AST/APValue.h:477:22: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     new ((void*)Data.buffer) APSInt(1);
                      ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'void clang::APValue::MakeFloat()':
/llvm/tools/clang/include/clang/AST/APValue.h:482:29: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     new ((void*)(char*)Data.buffer) APFloat(0.0);
                             ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'void clang::APValue::MakeFixedPoint(clang::APFixedPoint&&)':
/llvm/tools/clang/include/clang/AST/APValue.h:487:31: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     new ((void *)(char *)Data.buffer) APFixedPoint(std::move(FX));
                               ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'void clang::APValue::MakeVector()':
/llvm/tools/clang/include/clang/AST/APValue.h:492:29: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     new ((void*)(char*)Data.buffer) Vec();
                             ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'void clang::APValue::MakeComplexInt()':
/llvm/tools/clang/include/clang/AST/APValue.h:497:29: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     new ((void*)(char*)Data.buffer) ComplexAPSInt();
                             ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'void clang::APValue::MakeComplexFloat()':
/llvm/tools/clang/include/clang/AST/APValue.h:502:29: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     new ((void*)(char*)Data.buffer) ComplexAPFloat();
                             ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'void clang::APValue::MakeStruct(unsigned int, unsigned int)':
/llvm/tools/clang/include/clang/AST/APValue.h:509:29: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     new ((void*)(char*)Data.buffer) StructData(B, M);
                             ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'void clang::APValue::MakeUnion()':
/llvm/tools/clang/include/clang/AST/APValue.h:514:29: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     new ((void*)(char*)Data.buffer) UnionData();
                             ^~~~~~
/llvm/tools/clang/include/clang/AST/APValue.h: In member function 'void clang::APValue::MakeAddrLabelDiff()':
/llvm/tools/clang/include/clang/AST/APValue.h:521:29: error: 'clang::APValue::DataType {aka struct llvm::AlignedCharArrayUnion<void*, llvm::APSInt, llvm::APFloat, clang::APValue::ComplexAPSInt, clang::APValue::ComplexAPFloat, clang::APValue::Vec, clang::APValue::Arr, clang::APValue::StructData, clang::APValue::UnionData, clang::APValue::AddrLabelDiffData>}' has no member named 'buffer'
     new ((void*)(char*)Data.buffer) AddrLabelDiffData();
                             ^~~~~~
In file included from /llvm/tools/clang/include/clang/AST/DeclBase.h:16:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/AttrIterator.h: At global scope:
/llvm/tools/clang/include/clang/AST/AttrIterator.h:61:32: error: 'ptrdiff_t' in namespace 'std' does not name a type
   using difference_type = std::ptrdiff_t;
                                ^~~~~~~~~
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:228:22: error: declaration of 'operator==' as non-function
 bool operator==(std::nullptr_t A, const IntrusiveRefCntPtr<T> &B) {
                      ^~~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:228:22: error: 'nullptr_t' is not a member of 'std'
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:228:22: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:444:29: note:   'nullptr_t'
   typedef decltype(nullptr) nullptr_t;
                             ^~~~~~~~~
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:228:35: error: expected primary-expression before 'const'
 bool operator==(std::nullptr_t A, const IntrusiveRefCntPtr<T> &B) {
                                   ^~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:233:54: error: 'std::nullptr_t' has not been declared
 bool operator==(const IntrusiveRefCntPtr<T> &A, std::nullptr_t B) {
                                                      ^~~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:238:22: error: declaration of 'operator!=' as non-function
 bool operator!=(std::nullptr_t A, const IntrusiveRefCntPtr<T> &B) {
                      ^~~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:238:22: error: 'nullptr_t' is not a member of 'std'
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:238:22: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:444:29: note:   'nullptr_t'
   typedef decltype(nullptr) nullptr_t;
                             ^~~~~~~~~
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:238:35: error: expected primary-expression before 'const'
 bool operator!=(std::nullptr_t A, const IntrusiveRefCntPtr<T> &B) {
                                   ^~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:243:54: error: 'std::nullptr_t' has not been declared
 bool operator!=(const IntrusiveRefCntPtr<T> &A, std::nullptr_t B) {
                                                      ^~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<std::__cxx11::basic_string<char> >'
/llvm/tools/clang/include/clang/Basic/DiagnosticOptions.h:99:28:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::__cxx11::basic_string<char> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::__cxx11::basic_string<char> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::_Base_type {aka std::allocator_traits<std::allocator<std::__cxx11::basic_string<char> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::__cxx11::basic_string<char> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::DiagnosticsEngine::DiagState> >':
/usr/include/c++/7/bits/stl_list.h:304:24:   required from 'class std::__cxx11::_List_base<clang::DiagnosticsEngine::DiagState, std::allocator<clang::DiagnosticsEngine::DiagState> >'
/usr/include/c++/7/bits/stl_list.h:503:11:   required from 'class std::__cxx11::list<clang::DiagnosticsEngine::DiagState>'
/llvm/tools/clang/include/clang/Basic/Diagnostic.h:304:24:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::DiagnosticsEngine::DiagState> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::DiagnosticsEngine::DiagState> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::DiagnosticsEngine::DiagState> >::_Base_type {aka std::allocator_traits<std::allocator<clang::DiagnosticsEngine::DiagState> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::DiagnosticsEngine::DiagState> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::DiagnosticsEngine::DiagState> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::_List_node<clang::DiagnosticsEngine::DiagState> > >':
/usr/include/c++/7/bits/stl_list.h:382:7:   required from 'class std::__cxx11::_List_base<clang::DiagnosticsEngine::DiagState, std::allocator<clang::DiagnosticsEngine::DiagState> >'
/usr/include/c++/7/bits/stl_list.h:503:11:   required from 'class std::__cxx11::list<clang::DiagnosticsEngine::DiagState>'
/llvm/tools/clang/include/clang/Basic/Diagnostic.h:304:24:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::_List_node<clang::DiagnosticsEngine::DiagState> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::_List_node<clang::DiagnosticsEngine::DiagState> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::_List_node<clang::DiagnosticsEngine::DiagState> > >::_Base_type {aka std::allocator_traits<std::allocator<std::_List_node<clang::DiagnosticsEngine::DiagState> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::_List_node<clang::DiagnosticsEngine::DiagState> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::_List_node<clang::DiagnosticsEngine::DiagState> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> > >':
/usr/include/c++/7/bits/stl_map.h:139:28:   required from 'class std::map<clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File>'
/llvm/tools/clang/include/clang/Basic/Diagnostic.h:379:36:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> > >::_Base_type {aka std::allocator_traits<std::allocator<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::DiagnosticsEngine::DiagState*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::DiagnosticsEngine::DiagState*, std::allocator<clang::DiagnosticsEngine::DiagState*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::DiagnosticsEngine::DiagState*>'
/llvm/tools/clang/include/clang/Basic/Diagnostic.h:398:28:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::DiagnosticsEngine::DiagState*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::DiagnosticsEngine::DiagState*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::DiagnosticsEngine::DiagState*> >::_Base_type {aka std::allocator_traits<std::allocator<clang::DiagnosticsEngine::DiagState*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::DiagnosticsEngine::DiagState*> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::DiagnosticsEngine::DiagState*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::DiagnosticsEngine::ArgumentKind, long int> > >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<std::pair<clang::DiagnosticsEngine::ArgumentKind, long int>, std::allocator<std::pair<clang::DiagnosticsEngine::ArgumentKind, long int> > >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<std::pair<clang::DiagnosticsEngine::ArgumentKind, long int>, std::allocator<std::pair<clang::DiagnosticsEngine::ArgumentKind, long int> > >'
/llvm/tools/clang/include/clang/Basic/Diagnostic.h:788:50:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::pair<clang::DiagnosticsEngine::ArgumentKind, long int> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::pair<clang::DiagnosticsEngine::ArgumentKind, long int> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::DiagnosticsEngine::ArgumentKind, long int> > >::_Base_type {aka std::allocator_traits<std::allocator<std::pair<clang::DiagnosticsEngine::ArgumentKind, long int> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::DiagnosticsEngine::ArgumentKind, long int> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::pair<clang::DiagnosticsEngine::ArgumentKind, long int> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<long int> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<long int, std::allocator<long int> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<long int, std::allocator<long int> >'
/llvm/tools/clang/include/clang/Basic/Diagnostic.h:788:50:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<long int> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<long int> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<long int> >::_Base_type {aka std::allocator_traits<std::allocator<long int> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<long int> >::_Base_type {aka struct std::allocator_traits<std::allocator<long int> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::CharSourceRange> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::CharSourceRange, std::allocator<clang::CharSourceRange> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::CharSourceRange, std::allocator<clang::CharSourceRange> >'
/llvm/tools/clang/include/clang/Basic/Diagnostic.h:1441:32:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::CharSourceRange> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::CharSourceRange> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::CharSourceRange> >::_Base_type {aka std::allocator_traits<std::allocator<clang::CharSourceRange> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::CharSourceRange> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::CharSourceRange> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::FixItHint> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::FixItHint, std::allocator<clang::FixItHint> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::FixItHint, std::allocator<clang::FixItHint> >'
/llvm/tools/clang/include/clang/Basic/Diagnostic.h:1442:26:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::FixItHint> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::FixItHint> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::FixItHint> >::_Base_type {aka std::allocator_traits<std::allocator<clang::FixItHint> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::FixItHint> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::FixItHint> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/AST/Type.h:41:0,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Twine.h:278:42: error: invalid use of '::'
     /*implicit*/ Twine(std::nullptr_t) = delete;
                                          ^~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::QualType> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::QualType, std::allocator<clang::QualType> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::QualType, std::allocator<clang::QualType> >'
/llvm/tools/clang/include/clang/AST/Type.h:3895:67:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::QualType> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::QualType> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::QualType> >::_Base_type {aka std::allocator_traits<std::allocator<clang::QualType> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::QualType> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::QualType> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::FunctionType::ExtParameterInfo> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::FunctionType::ExtParameterInfo, std::allocator<clang::FunctionType::ExtParameterInfo> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::FunctionType::ExtParameterInfo, std::allocator<clang::FunctionType::ExtParameterInfo> >'
/llvm/tools/clang/include/clang/AST/Type.h:4065:53:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::FunctionType::ExtParameterInfo> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::FunctionType::ExtParameterInfo> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::FunctionType::ExtParameterInfo> >::_Base_type {aka std::allocator_traits<std::allocator<clang::FunctionType::ExtParameterInfo> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::FunctionType::ExtParameterInfo> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::FunctionType::ExtParameterInfo> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::TemplateArgument> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::TemplateArgument, std::allocator<clang::TemplateArgument> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::TemplateArgument, std::allocator<clang::TemplateArgument> >'
/llvm/tools/clang/include/clang/AST/Type.h:4932:52:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::TemplateArgument> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::TemplateArgument> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::TemplateArgument> >::_Base_type {aka std::allocator_traits<std::allocator<clang::TemplateArgument> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::TemplateArgument> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::TemplateArgument> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16:0,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/Type.h: In member function 'void clang::TemplateSpecializationType::Profile(llvm::FoldingSetNodeID&, const clang::ASTContext&)':
/llvm/tools/clang/include/clang/AST/Type.h:4937:15: note:   initializing argument 3 of 'static void clang::TemplateSpecializationType::Profile(llvm::FoldingSetNodeID&, clang::TemplateName, llvm::ArrayRef<clang::TemplateArgument>, const clang::ASTContext&)'
   static void Profile(llvm::FoldingSetNodeID &ID, TemplateName T,
               ^~~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::ObjCProtocolDecl*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::ObjCProtocolDecl*, std::allocator<clang::ObjCProtocolDecl*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::ObjCProtocolDecl*, std::allocator<clang::ObjCProtocolDecl*> >'
/llvm/tools/clang/include/clang/AST/Type.h:5700:70:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::ObjCProtocolDecl*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::ObjCProtocolDecl*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::ObjCProtocolDecl*> >::_Base_type {aka std::allocator_traits<std::allocator<clang::ObjCProtocolDecl*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::ObjCProtocolDecl*> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::ObjCProtocolDecl*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16:0,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/Type.h: In constructor 'clang::ObjCObjectTypeImpl::ObjCObjectTypeImpl(clang::QualType, clang::QualType, llvm::ArrayRef<clang::QualType>, llvm::ArrayRef<clang::ObjCProtocolDecl*>, bool)':
/llvm/tools/clang/include/clang/AST/Type.h:5578:3: note:   initializing argument 4 of 'clang::ObjCObjectType::ObjCObjectType(clang::QualType, clang::QualType, llvm::ArrayRef<clang::QualType>, llvm::ArrayRef<clang::ObjCProtocolDecl*>, bool)'
   ObjCObjectType(QualType Canonical, QualType Base,
   ^~~~~~~~~~~~~~
In file included from /llvm/tools/clang/include/clang/AST/DeclarationName.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/IdentifierTable.h: At global scope:
/llvm/tools/clang/include/clang/Basic/IdentifierTable.h:135:18: error: 'std::size_t' has not been declared
   template <std::size_t StrLen>
                  ^~~~~~
/llvm/tools/clang/include/clang/Basic/IdentifierTable.h:136:32: error: 'StrLen' was not declared in this scope
   bool isStr(const char (&Str)[StrLen]) const {
                                ^~~~~~
/llvm/tools/clang/include/clang/Basic/IdentifierTable.h:136:32: note: suggested alternative: 'strlen'
   bool isStr(const char (&Str)[StrLen]) const {
                                ^~~~~~
                                strlen
/llvm/tools/clang/include/clang/Basic/IdentifierTable.h: In member function 'bool clang::IdentifierInfo::isStr(...) const':
/llvm/tools/clang/include/clang/Basic/IdentifierTable.h:137:27: error: 'StrLen' was not declared in this scope
     return getLength() == StrLen-1 &&
                           ^~~~~~
/llvm/tools/clang/include/clang/Basic/IdentifierTable.h:137:27: note: suggested alternative: 'strlen'
     return getLength() == StrLen-1 &&
                           ^~~~~~
                           strlen
/llvm/tools/clang/include/clang/Basic/IdentifierTable.h:138:35: error: 'Str' was not declared in this scope
            memcmp(getNameStart(), Str, StrLen-1) == 0;
                                   ^~~
/llvm/tools/clang/include/clang/Basic/IdentifierTable.h:138:35: note: suggested alternative: 'isStr'
            memcmp(getNameStart(), Str, StrLen-1) == 0;
                                   ^~~
                                   isStr
/llvm/tools/clang/include/clang/Basic/IdentifierTable.h: In member function 'clang::IdentifierInfo& clang::IdentifierTable::get(llvm::StringRef)':
/llvm/tools/clang/include/clang/Basic/IdentifierTable.h:533:35: error: no matching function for call to 'operator new(sizetype, void*&)'
     II = new (Mem) IdentifierInfo();
                                   ^
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/ASTContext.h:17:0,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:26:7: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 void *operator new(size_t Bytes, const clang::ASTContext &C,
       ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:26:7: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/DeclarationName.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/IdentifierTable.h:533:35: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     II = new (Mem) IdentifierInfo();
                                   ^
/llvm/tools/clang/include/clang/Basic/IdentifierTable.h: In member function 'clang::IdentifierInfo& clang::IdentifierTable::getOwn(llvm::StringRef)':
/llvm/tools/clang/include/clang/Basic/IdentifierTable.h:564:35: error: no matching function for call to 'operator new(sizetype, void*&)'
     II = new (Mem) IdentifierInfo();
                                   ^
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/ASTContext.h:17:0,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:26:7: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 void *operator new(size_t Bytes, const clang::ASTContext &C,
       ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:26:7: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/DeclarationName.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/IdentifierTable.h:564:35: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     II = new (Mem) IdentifierInfo();
                                   ^
In file included from /llvm/tools/clang/include/clang/AST/Decl.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/DeclBase.h: At global scope:
/llvm/tools/clang/include/clang/AST/DeclBase.h:341:27: error: declaration of 'operator new' as non-function
   void *operator new(std::size_t Size, const ASTContext &Ctx, unsigned ID,
                           ^~~~~~
/llvm/tools/clang/include/clang/AST/DeclBase.h:341:18: error: expected ';' at end of member declaration
   void *operator new(std::size_t Size, const ASTContext &Ctx, unsigned ID,
                  ^~~
/llvm/tools/clang/include/clang/AST/DeclBase.h:341:34: error: expected ')' before 'Size'
   void *operator new(std::size_t Size, const ASTContext &Ctx, unsigned ID,
                                  ^~~~
/llvm/tools/clang/include/clang/AST/DeclBase.h:345:27: error: declaration of 'operator new' as non-function
   void *operator new(std::size_t Size, const ASTContext &Ctx,
                           ^~~~~~
/llvm/tools/clang/include/clang/AST/DeclBase.h:345:18: error: expected ';' at end of member declaration
   void *operator new(std::size_t Size, const ASTContext &Ctx,
                  ^~~
/llvm/tools/clang/include/clang/AST/DeclBase.h:345:34: error: expected ')' before 'Size'
   void *operator new(std::size_t Size, const ASTContext &Ctx,
                                  ^~~~
/llvm/tools/clang/include/clang/AST/DeclBase.h:904:34: error: 'ptrdiff_t' in namespace 'std' does not name a type
     using difference_type = std::ptrdiff_t;
                                  ^~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::NamedDecl*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::NamedDecl*, std::allocator<clang::NamedDecl*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::NamedDecl*, std::allocator<clang::NamedDecl*> >'
/llvm/tools/clang/include/clang/AST/DeclBase.h:1200:22:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::NamedDecl*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::NamedDecl*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::NamedDecl*> >::_Base_type {aka std::allocator_traits<std::allocator<clang::NamedDecl*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::NamedDecl*> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::NamedDecl*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/AST/Decl.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/DeclBase.h:1962:34: error: 'ptrdiff_t' in namespace 'std' does not name a type
     using difference_type = std::ptrdiff_t;
                                  ^~~~~~~~~
/llvm/tools/clang/include/clang/AST/DeclBase.h:2037:59: error: 'difference_type' in 'struct std::iterator_traits<clang::DeclContext::decl_iterator>' does not name a type
         std::iterator_traits<DeclContext::decl_iterator>::difference_type;
                                                           ^~~~~~~~~~~~~~~
/llvm/tools/clang/include/clang/AST/DeclBase.h:2115:59: error: 'difference_type' in 'struct std::iterator_traits<clang::DeclContext::decl_iterator>' does not name a type
         std::iterator_traits<DeclContext::decl_iterator>::difference_type;
                                                           ^~~~~~~~~~~~~~~
In file included from /llvm/tools/clang/include/clang/Basic/FileManager.h:25:0,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/ErrorOr.h: In member function 'std::error_code* llvm::ErrorOr<T>::getErrorStorage()':
/llvm/include/llvm/Support/ErrorOr.h:254:61: error: 'struct llvm::AlignedCharArrayUnion<std::error_code>' has no member named 'buffer'
     return reinterpret_cast<std::error_code *>(ErrorStorage.buffer);
                                                             ^~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<llvm::StringRef> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<llvm::StringRef, std::allocator<llvm::StringRef> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<llvm::StringRef>'
/llvm/include/llvm/ADT/StringExtras.h:44:74:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<llvm::StringRef> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<llvm::StringRef> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<llvm::StringRef> >::_Base_type {aka std::allocator_traits<std::allocator<llvm::StringRef> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<llvm::StringRef> >::_Base_type {aka struct std::allocator_traits<std::allocator<llvm::StringRef> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/include/llvm/Support/Error.h:19:0,
                 from /llvm/include/llvm/Support/FileSystem.h:34,
                 from /llvm/tools/clang/include/clang/Basic/FileManager.h:26,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringExtras.h: In function 'std::__cxx11::string llvm::toHex(llvm::StringRef, bool)':
/llvm/include/llvm/ADT/StringExtras.h:147:10: error: 'std::__cxx11::string {aka class std::__cxx11::basic_string<char>}' has no member named 'reserve'
   Output.reserve(2 * Length);
          ^~~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<unsigned char> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<unsigned char, std::allocator<unsigned char> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<unsigned char, std::allocator<unsigned char> >'
/llvm/include/llvm/ADT/StringExtras.h:157:33:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<unsigned char> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<unsigned char> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<unsigned char> >::_Base_type {aka std::allocator_traits<std::allocator<unsigned char> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<unsigned char> >::_Base_type {aka struct std::allocator_traits<std::allocator<unsigned char> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/include/llvm/Support/Error.h:19:0,
                 from /llvm/include/llvm/Support/FileSystem.h:34,
                 from /llvm/tools/clang/include/clang/Basic/FileManager.h:26,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringExtras.h: In function 'std::__cxx11::string llvm::toHex(llvm::ArrayRef<unsigned char>, bool)':
/llvm/include/llvm/ADT/StringExtras.h:55:18: note:   initializing argument 1 of 'llvm::StringRef llvm::toStringRef(llvm::ArrayRef<unsigned char>)'
 inline StringRef toStringRef(ArrayRef<uint8_t> Input) {
                  ^~~~~~~~~~~
/llvm/include/llvm/ADT/StringExtras.h: In function 'std::__cxx11::string llvm::fromHex(llvm::StringRef)':
/llvm/include/llvm/ADT/StringExtras.h:175:10: error: 'std::__cxx11::string {aka class std::__cxx11::basic_string<char>}' has no member named 'reserve'
   Output.reserve((Input.size() + 1) / 2);
          ^~~~~~~
/llvm/include/llvm/ADT/StringExtras.h: In function 'std::__cxx11::string llvm::detail::join_impl(IteratorT, IteratorT, llvm::StringRef, std::forward_iterator_tag)':
/llvm/include/llvm/ADT/StringExtras.h:322:5: error: 'std::__cxx11::string {aka class std::__cxx11::basic_string<char>}' has no member named 'reserve'
   S.reserve(Len);
     ^~~~~~~
/llvm/include/llvm/ADT/StringExtras.h: In function 'std::__cxx11::string llvm::join_items(Sep, Args&& ...)':
/llvm/include/llvm/ADT/StringExtras.h:394:10: error: 'std::__cxx11::string {aka class std::__cxx11::basic_string<char>}' has no member named 'reserve'
   Result.reserve(NI + (sizeof...(Items) - 1) * NS + 1);
          ^~~~~~~
In file included from /llvm/include/llvm/Support/Error.h:27:0,
                 from /llvm/include/llvm/Support/FileSystem.h:34,
                 from /llvm/tools/clang/include/clang/Basic/FileManager.h:26,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Format.h: At global scope:
/llvm/include/llvm/Support/Format.h:92:18: error: 'std::size_t' has not been declared
   template <std::size_t... Is>
                  ^~~~~~
/llvm/include/llvm/Support/Format.h:94:36: error: 'Is' was not declared in this scope
                     index_sequence<Is...>) const {
                                    ^~
/llvm/include/llvm/Support/Format.h:94:36: note: suggested alternative: 'Ts'
                     index_sequence<Is...>) const {
                                    ^~
                                    Ts
/llvm/include/llvm/Support/Format.h:94:38: error: expected parameter pack before '...'
                     index_sequence<Is...>) const {
                                      ^~~
/llvm/include/llvm/Support/Format.h:94:41: error: template argument 1 is invalid
                     index_sequence<Is...>) const {
                                         ^
/llvm/include/llvm/Support/Format.h: In member function 'int llvm::format_object<Ts>::snprint_tuple(char*, unsigned int, int) const':
/llvm/include/llvm/Support/Format.h:98:55: error: 'Is' was not declared in this scope
     return snprintf(Buffer, BufferSize, Fmt, std::get<Is>(Vals)...);
                                                       ^~
/llvm/include/llvm/Support/Format.h:98:55: note: suggested alternative: 'Ts'
     return snprintf(Buffer, BufferSize, Fmt, std::get<Is>(Vals)...);
                                                       ^~
                                                       Ts
/llvm/include/llvm/Support/Format.h:98:64: error: expansion pattern 'get<<expression error> >(((const llvm::format_object<Ts>*)this)->llvm::format_object<Ts>::Vals)' contains no argument packs
     return snprintf(Buffer, BufferSize, Fmt, std::get<Is>(Vals)...);
                                                                ^~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::unique_ptr<llvm::ErrorInfoBase> > >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<std::unique_ptr<llvm::ErrorInfoBase>, std::allocator<std::unique_ptr<llvm::ErrorInfoBase> > >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<std::unique_ptr<llvm::ErrorInfoBase> >'
/llvm/include/llvm/Support/Error.h:417:47:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::unique_ptr<llvm::ErrorInfoBase> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::unique_ptr<llvm::ErrorInfoBase> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::unique_ptr<llvm::ErrorInfoBase> > >::_Base_type {aka std::allocator_traits<std::allocator<std::unique_ptr<llvm::ErrorInfoBase> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::unique_ptr<llvm::ErrorInfoBase> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::unique_ptr<llvm::ErrorInfoBase> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/include/llvm/Support/FileSystem.h:34:0,
                 from /llvm/tools/clang/include/clang/Basic/FileManager.h:26,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Error.h: In member function 'llvm::Expected<T>::error_type* llvm::Expected<T>::getErrorStorage()':
/llvm/include/llvm/Support/Error.h:637:56: error: 'struct llvm::AlignedCharArrayUnion<std::unique_ptr<llvm::ErrorInfoBase> >' has no member named 'buffer'
     return reinterpret_cast<error_type *>(ErrorStorage.buffer);
                                                        ^~~~~~
/llvm/include/llvm/Support/Error.h: In member function 'const error_type* llvm::Expected<T>::getErrorStorage() const':
/llvm/include/llvm/Support/Error.h:642:62: error: 'const struct llvm::AlignedCharArrayUnion<std::unique_ptr<llvm::ErrorInfoBase> >' has no member named 'buffer'
     return reinterpret_cast<const error_type *>(ErrorStorage.buffer);
                                                              ^~~~~~
In file included from /llvm/include/llvm/Support/MD5.h:33:0,
                 from /llvm/include/llvm/Support/FileSystem.h:37,
                 from /llvm/tools/clang/include/clang/Basic/FileManager.h:26,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Endian.h: At global scope:
/llvm/include/llvm/Support/Endian.h:64:37: error: 'std::size_t' has not been declared
 template <typename value_type, std::size_t alignment>
                                     ^~~~~~
In file included from /llvm/include/llvm/ADT/APInt.h:18:0,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Endian.h: In function 'value_type llvm::support::endian::read(const void*, llvm::support::endianness)':
/llvm/include/llvm/Support/Endian.h:70:57: error: 'alignment' was not declared in this scope
              memory, (detail::PickAlignment<value_type, alignment>::value)),
                                                         ^
/llvm/include/llvm/Support/Compiler.h:323:64: note: in definition of macro 'LLVM_ASSUME_ALIGNED'
 # define LLVM_ASSUME_ALIGNED(p, a) __builtin_assume_aligned(p, a)
                                                                ^
/llvm/include/llvm/Support/Endian.h:70:57: note: suggested alternative: 'aligned'
              memory, (detail::PickAlignment<value_type, alignment>::value)),
                                                         ^
/llvm/include/llvm/Support/Compiler.h:323:64: note: in definition of macro 'LLVM_ASSUME_ALIGNED'
 # define LLVM_ASSUME_ALIGNED(p, a) __builtin_assume_aligned(p, a)
                                                                ^
/llvm/include/llvm/Support/Endian.h:70:66: error: template argument 2 is invalid
              memory, (detail::PickAlignment<value_type, alignment>::value)),
                                                                  ^
/llvm/include/llvm/Support/Compiler.h:323:64: note: in definition of macro 'LLVM_ASSUME_ALIGNED'
 # define LLVM_ASSUME_ALIGNED(p, a) __builtin_assume_aligned(p, a)
                                                                ^
In file included from /llvm/include/llvm/Support/MD5.h:33:0,
                 from /llvm/include/llvm/Support/FileSystem.h:37,
                 from /llvm/tools/clang/include/clang/Basic/FileManager.h:26,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Endian.h: At global scope:
/llvm/include/llvm/Support/Endian.h:77:15: error: 'std::size_t' has not been declared
          std::size_t alignment>
               ^~~~~~
/llvm/include/llvm/Support/Endian.h: In function 'value_type llvm::support::endian::read(const void*)':
/llvm/include/llvm/Support/Endian.h:79:27: error: 'alignment' was not declared in this scope
   return read<value_type, alignment>(memory, endian);
                           ^~~~~~~~~
/llvm/include/llvm/Support/Endian.h:79:27: note: suggested alternative: 'aligned'
   return read<value_type, alignment>(memory, endian);
                           ^~~~~~~~~
                           aligned
/llvm/include/llvm/Support/Endian.h: At global scope:
/llvm/include/llvm/Support/Endian.h:84:37: error: 'std::size_t' has not been declared
 template <typename value_type, std::size_t alignment, typename CharT>
                                     ^~~~~~
/llvm/include/llvm/Support/Endian.h: In function 'value_type llvm::support::endian::readNext(const CharT*&, llvm::support::endianness)':
/llvm/include/llvm/Support/Endian.h:86:37: error: 'alignment' was not declared in this scope
   value_type ret = read<value_type, alignment>(memory, endian);
                                     ^~~~~~~~~
/llvm/include/llvm/Support/Endian.h:86:37: note: suggested alternative: 'aligned'
   value_type ret = read<value_type, alignment>(memory, endian);
                                     ^~~~~~~~~
                                     aligned
/llvm/include/llvm/Support/Endian.h: At global scope:
/llvm/include/llvm/Support/Endian.h:91:55: error: 'std::size_t' has not been declared
 template<typename value_type, endianness endian, std::size_t alignment,
                                                       ^~~~~~
/llvm/include/llvm/Support/Endian.h: In function 'value_type llvm::support::endian::readNext(const CharT*&)':
/llvm/include/llvm/Support/Endian.h:94:31: error: 'alignment' was not declared in this scope
   return readNext<value_type, alignment, CharT>(memory, endian);
                               ^~~~~~~~~
/llvm/include/llvm/Support/Endian.h:94:31: note: suggested alternative: 'aligned'
   return readNext<value_type, alignment, CharT>(memory, endian);
                               ^~~~~~~~~
                               aligned
/llvm/include/llvm/Support/Endian.h: At global scope:
/llvm/include/llvm/Support/Endian.h:98:37: error: 'std::size_t' has not been declared
 template <typename value_type, std::size_t alignment>
                                     ^~~~~~
In file included from /llvm/include/llvm/ADT/APInt.h:18:0,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Endian.h: In function 'void llvm::support::endian::write(void*, value_type, llvm::support::endianness)':
/llvm/include/llvm/Support/Endian.h:102:57: error: 'alignment' was not declared in this scope
              memory, (detail::PickAlignment<value_type, alignment>::value)),
                                                         ^
/llvm/include/llvm/Support/Compiler.h:323:64: note: in definition of macro 'LLVM_ASSUME_ALIGNED'
 # define LLVM_ASSUME_ALIGNED(p, a) __builtin_assume_aligned(p, a)
                                                                ^
/llvm/include/llvm/Support/Endian.h:102:57: note: suggested alternative: 'aligned'
              memory, (detail::PickAlignment<value_type, alignment>::value)),
                                                         ^
/llvm/include/llvm/Support/Compiler.h:323:64: note: in definition of macro 'LLVM_ASSUME_ALIGNED'
 # define LLVM_ASSUME_ALIGNED(p, a) __builtin_assume_aligned(p, a)
                                                                ^
/llvm/include/llvm/Support/Endian.h:102:66: error: template argument 2 is invalid
              memory, (detail::PickAlignment<value_type, alignment>::value)),
                                                                  ^
/llvm/include/llvm/Support/Compiler.h:323:64: note: in definition of macro 'LLVM_ASSUME_ALIGNED'
 # define LLVM_ASSUME_ALIGNED(p, a) __builtin_assume_aligned(p, a)
                                                                ^
In file included from /llvm/include/llvm/Support/MD5.h:33:0,
                 from /llvm/include/llvm/Support/FileSystem.h:37,
                 from /llvm/tools/clang/include/clang/Basic/FileManager.h:26,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Endian.h: At global scope:
/llvm/include/llvm/Support/Endian.h:108:15: error: 'std::size_t' has not been declared
          std::size_t alignment>
               ^~~~~~
/llvm/include/llvm/Support/Endian.h: In function 'void llvm::support::endian::write(void*, value_type)':
/llvm/include/llvm/Support/Endian.h:110:21: error: 'alignment' was not declared in this scope
   write<value_type, alignment>(memory, value, endian);
                     ^~~~~~~~~
/llvm/include/llvm/Support/Endian.h:110:21: note: suggested alternative: 'aligned'
   write<value_type, alignment>(memory, value, endian);
                     ^~~~~~~~~
                     aligned
/llvm/include/llvm/Support/Endian.h: At global scope:
/llvm/include/llvm/Support/Endian.h:118:56: error: 'std::size_t' has not been declared
 template <typename value_type, endianness endian, std::size_t alignment>
                                                        ^~~~~~
/llvm/include/llvm/Support/Endian.h: In function 'value_type llvm::support::endian::readAtBitAlignment(const void*, uint64_t)':
/llvm/include/llvm/Support/Endian.h:122:37: error: 'alignment' was not declared in this scope
     return read<value_type, endian, alignment>(memory);
                                     ^~~~~~~~~
/llvm/include/llvm/Support/Endian.h:122:37: note: suggested alternative: 'aligned'
     return read<value_type, endian, alignment>(memory);
                                     ^~~~~~~~~
                                     aligned
In file included from /llvm/include/llvm/ADT/APInt.h:18:0,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Endian.h:128:59: error: 'alignment' was not declared in this scope
                memory, (detail::PickAlignment<value_type, alignment>::value)),
                                                           ^
/llvm/include/llvm/Support/Compiler.h:323:64: note: in definition of macro 'LLVM_ASSUME_ALIGNED'
 # define LLVM_ASSUME_ALIGNED(p, a) __builtin_assume_aligned(p, a)
                                                                ^
/llvm/include/llvm/Support/Endian.h:128:59: note: suggested alternative: 'aligned'
                memory, (detail::PickAlignment<value_type, alignment>::value)),
                                                           ^
/llvm/include/llvm/Support/Compiler.h:323:64: note: in definition of macro 'LLVM_ASSUME_ALIGNED'
 # define LLVM_ASSUME_ALIGNED(p, a) __builtin_assume_aligned(p, a)
                                                                ^
/llvm/include/llvm/Support/Endian.h:128:68: error: template argument 2 is invalid
                memory, (detail::PickAlignment<value_type, alignment>::value)),
                                                                    ^
/llvm/include/llvm/Support/Compiler.h:323:64: note: in definition of macro 'LLVM_ASSUME_ALIGNED'
 # define LLVM_ASSUME_ALIGNED(p, a) __builtin_assume_aligned(p, a)
                                                                ^
In file included from /llvm/include/llvm/Support/MD5.h:33:0,
                 from /llvm/include/llvm/Support/FileSystem.h:37,
                 from /llvm/tools/clang/include/clang/Basic/FileManager.h:26,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Endian.h: At global scope:
/llvm/include/llvm/Support/Endian.h:152:56: error: 'std::size_t' has not been declared
 template <typename value_type, endianness endian, std::size_t alignment>
                                                        ^~~~~~
/llvm/include/llvm/Support/Endian.h: In function 'void llvm::support::endian::writeAtBitAlignment(void*, value_type, uint64_t)':
/llvm/include/llvm/Support/Endian.h:157:31: error: 'alignment' was not declared in this scope
     write<value_type, endian, alignment>(memory, value);
                               ^~~~~~~~~
/llvm/include/llvm/Support/Endian.h:157:31: note: suggested alternative: 'aligned'
     write<value_type, endian, alignment>(memory, value);
                               ^~~~~~~~~
                               aligned
In file included from /llvm/include/llvm/ADT/APInt.h:18:0,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Endian.h:163:59: error: 'alignment' was not declared in this scope
                memory, (detail::PickAlignment<value_type, alignment>::value)),
                                                           ^
/llvm/include/llvm/Support/Compiler.h:323:64: note: in definition of macro 'LLVM_ASSUME_ALIGNED'
 # define LLVM_ASSUME_ALIGNED(p, a) __builtin_assume_aligned(p, a)
                                                                ^
/llvm/include/llvm/Support/Endian.h:163:59: note: suggested alternative: 'aligned'
                memory, (detail::PickAlignment<value_type, alignment>::value)),
                                                           ^
/llvm/include/llvm/Support/Compiler.h:323:64: note: in definition of macro 'LLVM_ASSUME_ALIGNED'
 # define LLVM_ASSUME_ALIGNED(p, a) __builtin_assume_aligned(p, a)
                                                                ^
/llvm/include/llvm/Support/Endian.h:163:68: error: template argument 2 is invalid
                memory, (detail::PickAlignment<value_type, alignment>::value)),
                                                                    ^
/llvm/include/llvm/Support/Compiler.h:323:64: note: in definition of macro 'LLVM_ASSUME_ALIGNED'
 # define LLVM_ASSUME_ALIGNED(p, a) __builtin_assume_aligned(p, a)
                                                                ^
/llvm/include/llvm/Support/Endian.h:197:68: error: could not convert template argument 'alignment' from '<type error>' to 'int'
                memory, (detail::PickAlignment<value_type, alignment>::value)),
                                                                    ^
/llvm/include/llvm/Support/Compiler.h:323:64: note: in definition of macro 'LLVM_ASSUME_ALIGNED'
 # define LLVM_ASSUME_ALIGNED(p, a) __builtin_assume_aligned(p, a)
                                                                ^
In file included from /llvm/include/llvm/Support/MD5.h:33:0,
                 from /llvm/include/llvm/Support/FileSystem.h:37,
                 from /llvm/tools/clang/include/clang/Basic/FileManager.h:26,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Endian.h: At global scope:
/llvm/include/llvm/Support/Endian.h:208:15: error: 'std::size_t' has not been declared
          std::size_t alignment>
               ^~~~~~
/llvm/include/llvm/Support/Endian.h:245:46: error: 'alignment' was not declared in this scope
   AlignedCharArray<PickAlignment<value_type, alignment>::value,
                                              ^~~~~~~~~
/llvm/include/llvm/Support/Endian.h:245:46: note: suggested alternative: 'aligned'
   AlignedCharArray<PickAlignment<value_type, alignment>::value,
                                              ^~~~~~~~~
                                              aligned
/llvm/include/llvm/Support/Endian.h:245:55: error: template argument 2 is invalid
   AlignedCharArray<PickAlignment<value_type, alignment>::value,
                                                       ^
/llvm/include/llvm/Support/Endian.h:246:38: error: template argument 1 is invalid
                    sizeof(value_type)> Value;
                                      ^
/llvm/include/llvm/Support/Endian.h: In member function 'llvm::support::detail::packed_endian_specific_integral<value_type, endian, <declaration error> >::operator value_type() const':
/llvm/include/llvm/Support/Endian.h:215:45: error: 'alignment' was not declared in this scope
     return endian::read<value_type, endian, alignment>(
                                             ^~~~~~~~~
/llvm/include/llvm/Support/Endian.h:215:45: note: suggested alternative: 'aligned'
     return endian::read<value_type, endian, alignment>(
                                             ^~~~~~~~~
                                             aligned
/llvm/include/llvm/Support/Endian.h:216:26: error: request for member 'buffer' in '((const llvm::support::detail::packed_endian_specific_integral<value_type, endian, <declaration error> >*)this)->llvm::support::detail::packed_endian_specific_integral<value_type, endian, <declaration error> >::Value', which is of non-class type 'const int'
       (const void*)Value.buffer);
                          ^~~~~~
/llvm/include/llvm/Support/Endian.h: In member function 'void llvm::support::detail::packed_endian_specific_integral<value_type, endian, <declaration error> >::operator=(value_type)':
/llvm/include/llvm/Support/Endian.h:220:39: error: 'alignment' was not declared in this scope
     endian::write<value_type, endian, alignment>(
                                       ^~~~~~~~~
/llvm/include/llvm/Support/Endian.h:220:39: note: suggested alternative: 'aligned'
     endian::write<value_type, endian, alignment>(
                                       ^~~~~~~~~
                                       aligned
/llvm/include/llvm/Support/Endian.h:221:20: error: request for member 'buffer' in '((llvm::support::detail::packed_endian_specific_integral<value_type, endian, <declaration error> >*)this)->llvm::support::detail::packed_endian_specific_integral<value_type, endian, <declaration error> >::Value', which is of non-class type 'int'
       (void*)Value.buffer, newValue);
                    ^~~~~~
/llvm/include/llvm/Support/Endian.h: In member function 'llvm::support::detail::packed_endian_specific_integral<value_type, endian, <declaration error> >::ref::operator value_type() const':
/llvm/include/llvm/Support/Endian.h:253:47: error: 'alignment' was not declared in this scope
       return endian::read<value_type, endian, alignment>(Ptr);
                                               ^~~~~~~~~
/llvm/include/llvm/Support/Endian.h:253:47: note: suggested alternative: 'aligned'
       return endian::read<value_type, endian, alignment>(Ptr);
                                               ^~~~~~~~~
                                               aligned
/llvm/include/llvm/Support/Endian.h: In member function 'void llvm::support::detail::packed_endian_specific_integral<value_type, endian, <declaration error> >::ref::operator=(value_type)':
/llvm/include/llvm/Support/Endian.h:257:41: error: 'alignment' was not declared in this scope
       endian::write<value_type, endian, alignment>(Ptr, NewValue);
                                         ^~~~~~~~~
/llvm/include/llvm/Support/Endian.h:257:41: note: suggested alternative: 'aligned'
       endian::write<value_type, endian, alignment>(Ptr, NewValue);
                                         ^~~~~~~~~
                                         aligned
/llvm/include/llvm/Support/Endian.h: In function 'T llvm::support::endian::read(const void*)':
/llvm/include/llvm/Support/Endian.h:344:12: error: expected primary-expression before 'const'
   return *(const detail::packed_endian_specific_integral<T, E, unaligned> *)P;
            ^~~~~
/llvm/include/llvm/Support/Endian.h:344:12: error: expected ')' before 'const'
/llvm/include/llvm/Support/Endian.h: In function 'void llvm::support::endian::write(void*, T)':
/llvm/include/llvm/Support/Endian.h:379:63: error: expected primary-expression before ')' token
   *(detail::packed_endian_specific_integral<T, E, unaligned> *)P = V;
                                                               ^
In file included from /llvm/include/llvm/Support/FileSystem.h:37:0,
                 from /llvm/tools/clang/include/clang/Basic/FileManager.h:26,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/MD5.h: In member function 'const uint8_t& llvm::MD5::MD5Result::operator[](size_t) const':
/llvm/include/llvm/Support/MD5.h:60:63: error: invalid types 'const int[size_t {aka long unsigned int}]' for array subscript
     const uint8_t &operator[](size_t I) const { return Bytes[I]; }
                                                               ^
/llvm/include/llvm/Support/MD5.h: In member function 'uint8_t& llvm::MD5::MD5Result::operator[](size_t)':
/llvm/include/llvm/Support/MD5.h:61:51: error: invalid types 'int[size_t {aka long unsigned int}]' for array subscript
     uint8_t &operator[](size_t I) { return Bytes[I]; }
                                                   ^
/llvm/include/llvm/Support/MD5.h: In member function 'uint64_t llvm::MD5::MD5Result::low() const':
/llvm/include/llvm/Support/MD5.h:69:62: error: request for member 'data' in '((const llvm::MD5::MD5Result*)this)->llvm::MD5::MD5Result::Bytes', which is of non-class type 'const int'
       return endian::read<uint64_t, little, unaligned>(Bytes.data());
                                                              ^~~~
/llvm/include/llvm/Support/MD5.h: In member function 'uint64_t llvm::MD5::MD5Result::high() const':
/llvm/include/llvm/Support/MD5.h:74:62: error: request for member 'data' in '((const llvm::MD5::MD5Result*)this)->llvm::MD5::MD5Result::Bytes', which is of non-class type 'const int'
       return endian::read<uint64_t, little, unaligned>(Bytes.data() + 8);
                                                              ^~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<llvm::sys::fs::directory_iterator> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<llvm::sys::fs::directory_iterator, std::allocator<llvm::sys::fs::directory_iterator> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<llvm::sys::fs::directory_iterator>'
/usr/include/c++/7/bits/stl_stack.h:126:47:   required from 'class std::stack<llvm::sys::fs::directory_iterator, std::vector<llvm::sys::fs::directory_iterator> >'
/llvm/include/llvm/Support/FileSystem.h:1249:69:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<llvm::sys::fs::directory_iterator> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<llvm::sys::fs::directory_iterator> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<llvm::sys::fs::directory_iterator> >::_Base_type {aka std::allocator_traits<std::allocator<llvm::sys::fs::directory_iterator> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<llvm::sys::fs::directory_iterator> >::_Base_type {aka struct std::allocator_traits<std::allocator<llvm::sys::fs::directory_iterator> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/include/llvm/Support/VirtualFileSystem.h:26:0,
                 from /llvm/tools/clang/include/clang/Basic/FileManager.h:27,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Path.h: At global scope:
/llvm/include/llvm/Support/Path.h:54:50: error: template argument 4 is invalid
                                   const StringRef> {
                                                  ^
/llvm/include/llvm/Support/Path.h:65:3: error: 'reference' does not name a type; did you mean 'reverse'?
   reference operator*() const { return Component; }
   ^~~~~~~~~
   reverse
/llvm/include/llvm/Support/Path.h:80:50: error: template argument 4 is invalid
                                   const StringRef> {
                                                  ^
/llvm/include/llvm/Support/Path.h:90:3: error: 'reference' does not name a type; did you mean 'reverse'?
   reference operator*() const { return Component; }
   ^~~~~~~~~
   reverse
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<llvm::SourceMgr::SrcBuffer> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<llvm::SourceMgr::SrcBuffer, std::allocator<llvm::SourceMgr::SrcBuffer> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<llvm::SourceMgr::SrcBuffer>'
/llvm/include/llvm/Support/SourceMgr.h:95:26:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<llvm::SourceMgr::SrcBuffer> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<llvm::SourceMgr::SrcBuffer> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<llvm::SourceMgr::SrcBuffer> >::_Base_type {aka std::allocator_traits<std::allocator<llvm::SourceMgr::SrcBuffer> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<llvm::SourceMgr::SrcBuffer> >::_Base_type {aka struct std::allocator_traits<std::allocator<llvm::SourceMgr::SrcBuffer> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::pair<unsigned int, unsigned int> > >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<std::pair<unsigned int, unsigned int> >'
/llvm/include/llvm/Support/SourceMgr.h:267:46:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::pair<unsigned int, unsigned int> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::pair<unsigned int, unsigned int> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::pair<unsigned int, unsigned int> > >::_Base_type {aka std::allocator_traits<std::allocator<std::pair<unsigned int, unsigned int> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::pair<unsigned int, unsigned int> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::pair<unsigned int, unsigned int> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<llvm::vfs::directory_iterator> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<llvm::vfs::directory_iterator, std::allocator<llvm::vfs::directory_iterator> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<llvm::vfs::directory_iterator>'
/usr/include/c++/7/bits/stl_stack.h:126:47:   required from 'class std::stack<llvm::vfs::directory_iterator, std::vector<llvm::vfs::directory_iterator> >'
/llvm/include/llvm/Support/VirtualFileSystem.h:200:67:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<llvm::vfs::directory_iterator> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<llvm::vfs::directory_iterator> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<llvm::vfs::directory_iterator> >::_Base_type {aka std::allocator_traits<std::allocator<llvm::vfs::directory_iterator> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<llvm::vfs::directory_iterator> >::_Base_type {aka struct std::allocator_traits<std::allocator<llvm::vfs::directory_iterator> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> > >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>, std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> > >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> >'
/llvm/include/llvm/Support/VirtualFileSystem.h:574:41:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> > >::_Base_type {aka std::allocator_traits<std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<llvm::vfs::YAMLVFSEntry> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<llvm::vfs::YAMLVFSEntry, std::allocator<llvm::vfs::YAMLVFSEntry> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<llvm::vfs::YAMLVFSEntry>'
/llvm/include/llvm/Support/VirtualFileSystem.h:733:29:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<llvm::vfs::YAMLVFSEntry> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<llvm::vfs::YAMLVFSEntry> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<llvm::vfs::YAMLVFSEntry> >::_Base_type {aka std::allocator_traits<std::allocator<llvm::vfs::YAMLVFSEntry> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<llvm::vfs::YAMLVFSEntry> >::_Base_type {aka struct std::allocator_traits<std::allocator<llvm::vfs::YAMLVFSEntry> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::pair<const llvm::sys::fs::UniqueID, clang::DirectoryEntry> > >':
/usr/include/c++/7/bits/stl_map.h:139:28:   required from 'class std::map<llvm::sys::fs::UniqueID, clang::DirectoryEntry>'
/llvm/tools/clang/include/clang/Basic/FileManager.h:125:53:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::pair<const llvm::sys::fs::UniqueID, clang::DirectoryEntry> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::pair<const llvm::sys::fs::UniqueID, clang::DirectoryEntry> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::pair<const llvm::sys::fs::UniqueID, clang::DirectoryEntry> > >::_Base_type {aka std::allocator_traits<std::allocator<std::pair<const llvm::sys::fs::UniqueID, clang::DirectoryEntry> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::pair<const llvm::sys::fs::UniqueID, clang::DirectoryEntry> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::pair<const llvm::sys::fs::UniqueID, clang::DirectoryEntry> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::pair<const llvm::sys::fs::UniqueID, clang::FileEntry> > >':
/usr/include/c++/7/bits/stl_map.h:139:28:   required from 'class std::map<llvm::sys::fs::UniqueID, clang::FileEntry>'
/llvm/tools/clang/include/clang/Basic/FileManager.h:128:48:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::pair<const llvm::sys::fs::UniqueID, clang::FileEntry> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::pair<const llvm::sys::fs::UniqueID, clang::FileEntry> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::pair<const llvm::sys::fs::UniqueID, clang::FileEntry> > >::_Base_type {aka std::allocator_traits<std::allocator<std::pair<const llvm::sys::fs::UniqueID, clang::FileEntry> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::pair<const llvm::sys::fs::UniqueID, clang::FileEntry> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::pair<const llvm::sys::fs::UniqueID, clang::FileEntry> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/Module.h:55:52: error: too many braces around initializer for 'int' [-fpermissive]
   ASTFileSignature(std::array<uint32_t, 5> S = {{0}})
                                                    ^
/llvm/tools/clang/include/clang/Basic/Module.h: In constructor 'clang::ASTFileSignature::ASTFileSignature(int)':
/llvm/tools/clang/include/clang/Basic/Module.h:56:32: error: expected '{' before '(' token
       : std::array<uint32_t, 5>(std::move(S)) {}
                                ^
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::Module*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::Module*, std::allocator<clang::Module*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::Module*>'
/llvm/tools/clang/include/clang/Basic/Module.h:116:25:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::Module*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::Module*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::Module*> >::_Base_type {aka std::allocator_traits<std::allocator<clang::Module*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::Module*> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::Module*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::Module::UnresolvedConflict> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::Module::UnresolvedConflict, std::allocator<clang::Module::UnresolvedConflict> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::Module::UnresolvedConflict>'
/llvm/tools/clang/include/clang/Basic/Module.h:356:35:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::Module::UnresolvedConflict> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::Module::UnresolvedConflict> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::Module::UnresolvedConflict> >::_Base_type {aka std::allocator_traits<std::allocator<clang::Module::UnresolvedConflict> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::Module::UnresolvedConflict> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::Module::UnresolvedConflict> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::Module::Conflict> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::Module::Conflict, std::allocator<clang::Module::Conflict> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::Module::Conflict>'
/llvm/tools/clang/include/clang/Basic/Module.h:368:25:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::Module::Conflict> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::Module::Conflict> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::Module::Conflict> >::_Base_type {aka std::allocator_traits<std::allocator<clang::Module::Conflict> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::Module::Conflict> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::Module::Conflict> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::SourceLocation> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::SourceLocation, std::allocator<clang::SourceLocation> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::SourceLocation>'
/llvm/tools/clang/include/clang/Basic/Module.h:643:31:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::SourceLocation> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::SourceLocation> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::SourceLocation> >::_Base_type {aka std::allocator_traits<std::allocator<clang::SourceLocation> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::SourceLocation> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::SourceLocation> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/AST/Decl.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/Redeclarable.h: At global scope:
/llvm/tools/clang/include/clang/AST/Redeclarable.h:250:34: error: 'ptrdiff_t' in namespace 'std' does not name a type
     using difference_type = std::ptrdiff_t;
                                  ^~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::ParmVarDecl*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::ParmVarDecl*, std::allocator<clang::ParmVarDecl*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::ParmVarDecl*, std::allocator<clang::ParmVarDecl*> >'
/llvm/tools/clang/include/clang/AST/Decl.h:2293:44:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::ParmVarDecl*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::ParmVarDecl*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::ParmVarDecl*> >::_Base_type {aka std::allocator_traits<std::allocator<clang::ParmVarDecl*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::ParmVarDecl*> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::ParmVarDecl*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/Decl.h: In member function 'void clang::FunctionDecl::setParams(llvm::ArrayRef<clang::ParmVarDecl*>)':
/llvm/tools/clang/include/clang/AST/Decl.h:1827:8: note:   initializing argument 2 of 'void clang::FunctionDecl::setParams(clang::ASTContext&, llvm::ArrayRef<clang::ParmVarDecl*>)'
   void setParams(ASTContext &C, ArrayRef<ParmVarDecl *> NewParamInfo);
        ^~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<const clang::Attr*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<const clang::Attr*, std::allocator<const clang::Attr*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<const clang::Attr*, std::allocator<const clang::Attr*> >'
/llvm/tools/clang/include/clang/AST/Stmt.h:1669:77:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<const clang::Attr*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<const clang::Attr*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<const clang::Attr*> >::_Base_type {aka std::allocator_traits<std::allocator<const clang::Attr*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<const clang::Attr*> >::_Base_type {aka struct std::allocator_traits<std::allocator<const clang::Attr*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::Expr*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::Expr*, std::allocator<clang::Expr*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::Expr*, std::allocator<clang::Expr*> >'
/llvm/tools/clang/include/clang/AST/Stmt.h:2927:53:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::Expr*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::Expr*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::Expr*> >::_Base_type {aka std::allocator_traits<std::allocator<clang::Expr*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::Expr*> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::Expr*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::TemplateArgumentLoc> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::TemplateArgumentLoc, std::allocator<clang::TemplateArgumentLoc> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::TemplateArgumentLoc, std::allocator<clang::TemplateArgumentLoc> >'
/llvm/tools/clang/include/clang/AST/TemplateBase.h:632:70:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::TemplateArgumentLoc> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::TemplateArgumentLoc> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::TemplateArgumentLoc> >::_Base_type {aka std::allocator_traits<std::allocator<clang::TemplateArgumentLoc> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::TemplateArgumentLoc> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::TemplateArgumentLoc> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<llvm::Triple> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<llvm::Triple, std::allocator<llvm::Triple> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<llvm::Triple>'
/llvm/tools/clang/include/clang/Basic/LangOptions.h:242:29:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<llvm::Triple> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<llvm::Triple> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<llvm::Triple> >::_Base_type {aka std::allocator_traits<std::allocator<llvm::Triple> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<llvm::Triple> >::_Base_type {aka struct std::allocator_traits<std::allocator<llvm::Triple> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<unsigned int> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<unsigned int, std::allocator<unsigned int> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<unsigned int>'
/llvm/tools/clang/include/clang/Basic/SyncScope.h:133:37:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<unsigned int> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<unsigned int> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<unsigned int> >::_Base_type {aka std::allocator_traits<std::allocator<unsigned int> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<unsigned int> >::_Base_type {aka struct std::allocator_traits<std::allocator<unsigned int> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::Stmt*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::Stmt*, std::allocator<clang::Stmt*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::Stmt*, std::allocator<clang::Stmt*> >'
/llvm/tools/clang/include/clang/AST/Expr.h:2612:77:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::Stmt*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::Stmt*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::Stmt*> >::_Base_type {aka std::allocator_traits<std::allocator<clang::Stmt*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::Stmt*> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::Stmt*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::TypeSourceInfo*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::TypeSourceInfo*, std::allocator<clang::TypeSourceInfo*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::TypeSourceInfo*, std::allocator<clang::TypeSourceInfo*> >'
/llvm/tools/clang/include/clang/AST/Expr.h:5064:72:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::TypeSourceInfo*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::TypeSourceInfo*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::TypeSourceInfo*> >::_Base_type {aka std::allocator_traits<std::allocator<clang::TypeSourceInfo*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::TypeSourceInfo*> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::TypeSourceInfo*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/AST/ASTContext.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTTypeTraits.h: In member function 'const T* clang::ast_type_traits::DynTypedNode::get() const':
/llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:233:52: error: 'const struct llvm::AlignedCharArrayUnion<const void*, clang::TemplateArgument, clang::NestedNameSpecifierLoc, clang::QualType, clang::TypeLoc>' has no member named 'buffer'
     return BaseConverter<T>::get(NodeKind, Storage.buffer);
                                                    ^~~~~~
/llvm/tools/clang/include/clang/AST/ASTTypeTraits.h: In member function 'const T& clang::ast_type_traits::DynTypedNode::getUnchecked() const':
/llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:241:61: error: 'const struct llvm::AlignedCharArrayUnion<const void*, clang::TemplateArgument, clang::NestedNameSpecifierLoc, clang::QualType, clang::TypeLoc>' has no member named 'buffer'
     return BaseConverter<T>::getUnchecked(NodeKind, Storage.buffer);
                                                             ^~~~~~
/llvm/tools/clang/include/clang/AST/ASTTypeTraits.h: In member function 'const void* clang::ast_type_traits::DynTypedNode::getMemoizationData() const':
/llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:253:59: error: 'const struct llvm::AlignedCharArrayUnion<const void*, clang::TemplateArgument, clang::NestedNameSpecifierLoc, clang::QualType, clang::TypeLoc>' has no member named 'buffer'
                ? *reinterpret_cast<void *const *>(Storage.buffer)
                                                           ^~~~~~
/llvm/tools/clang/include/clang/AST/ASTTypeTraits.h: In static member function 'static clang::ast_type_traits::DynTypedNode clang::ast_type_traits::DynTypedNode::DynCastPtrConverter<T, BaseT>::create(const BaseT&)':
/llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:388:27: error: 'struct llvm::AlignedCharArrayUnion<const void*, clang::TemplateArgument, clang::NestedNameSpecifierLoc, clang::QualType, clang::TypeLoc>' has no member named 'buffer'
       new (Result.Storage.buffer) const void *(&Node);
                           ^~~~~~
/llvm/tools/clang/include/clang/AST/ASTTypeTraits.h: In static member function 'static clang::ast_type_traits::DynTypedNode clang::ast_type_traits::DynTypedNode::PtrConverter<T>::create(const T&)':
/llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:408:27: error: 'struct llvm::AlignedCharArrayUnion<const void*, clang::TemplateArgument, clang::NestedNameSpecifierLoc, clang::QualType, clang::TypeLoc>' has no member named 'buffer'
       new (Result.Storage.buffer) const void *(&Node);
                           ^~~~~~
/llvm/tools/clang/include/clang/AST/ASTTypeTraits.h: In static member function 'static clang::ast_type_traits::DynTypedNode clang::ast_type_traits::DynTypedNode::ValueConverter<T>::create(const T&)':
/llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:427:27: error: 'struct llvm::AlignedCharArrayUnion<const void*, clang::TemplateArgument, clang::NestedNameSpecifierLoc, clang::QualType, clang::TypeLoc>' has no member named 'buffer'
       new (Result.Storage.buffer) T(Node);
                           ^~~~~~
In file included from /llvm/tools/clang/include/clang/Basic/SourceManager.h:41:0,
                 from /llvm/tools/clang/include/clang/AST/RawCommentList.h:13,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:29,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/BitVector.h: In member function 'int llvm::BitVector::find_first_in(unsigned int, unsigned int) const':
/llvm/include/llvm/ADT/BitVector.h:229:35: error: 'countTrailingZeros' was not declared in this scope
         return i * BITWORD_SIZE + countTrailingZeros(Copy);
                                   ^~~~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/BitVector.h:229:35: note: suggested alternative: 'maskTrailingZeros'
         return i * BITWORD_SIZE + countTrailingZeros(Copy);
                                   ^~~~~~~~~~~~~~~~~~
                                   maskTrailingZeros
/llvm/include/llvm/ADT/BitVector.h: In member function 'int llvm::BitVector::find_last_in(unsigned int, unsigned int) const':
/llvm/include/llvm/ADT/BitVector.h:259:51: error: 'countLeadingZeros' was not declared in this scope
         return (CurrentWord + 1) * BITWORD_SIZE - countLeadingZeros(Copy) - 1;
                                                   ^~~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/BitVector.h:259:51: note: suggested alternative: 'maskLeadingZeros'
         return (CurrentWord + 1) * BITWORD_SIZE - countLeadingZeros(Copy) - 1;
                                                   ^~~~~~~~~~~~~~~~~
                                                   maskLeadingZeros
/llvm/include/llvm/ADT/BitVector.h: In member function 'int llvm::BitVector::find_first_unset_in(unsigned int, unsigned int) const':
/llvm/include/llvm/ADT/BitVector.h:289:46: error: 'countTrailingOnes' was not declared in this scope
         unsigned Result = i * BITWORD_SIZE + countTrailingOnes(Copy);
                                              ^~~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/BitVector.h:289:46: note: suggested alternative: 'maskTrailingOnes'
         unsigned Result = i * BITWORD_SIZE + countTrailingOnes(Copy);
                                              ^~~~~~~~~~~~~~~~~
                                              maskTrailingOnes
/llvm/include/llvm/ADT/BitVector.h: In member function 'int llvm::BitVector::find_last_unset_in(unsigned int, unsigned int) const':
/llvm/include/llvm/ADT/BitVector.h:322:48: error: 'countLeadingOnes' was not declared in this scope
             (CurrentWord + 1) * BITWORD_SIZE - countLeadingOnes(Copy) - 1;
                                                ^~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/BitVector.h:322:48: note: suggested alternative: 'maskLeadingOnes'
             (CurrentWord + 1) * BITWORD_SIZE - countLeadingOnes(Copy) - 1;
                                                ^~~~~~~~~~~~~~~~
                                                maskLeadingOnes
/llvm/include/llvm/ADT/BitVector.h: In member function 'int llvm::BitVector::next_unset_in_word(int, llvm::BitVector::BitWord) const':
/llvm/include/llvm/ADT/BitVector.h:853:50: error: 'countTrailingOnes' was not declared in this scope
     unsigned Result = WordIndex * BITWORD_SIZE + countTrailingOnes(Word);
                                                  ^~~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/BitVector.h:853:50: note: suggested alternative: 'maskTrailingOnes'
     unsigned Result = WordIndex * BITWORD_SIZE + countTrailingOnes(Word);
                                                  ^~~~~~~~~~~~~~~~~
                                                  maskTrailingOnes
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::SrcMgr::ContentCache*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::SrcMgr::ContentCache*, std::allocator<clang::SrcMgr::ContentCache*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::SrcMgr::ContentCache*>'
/llvm/tools/clang/include/clang/Basic/SourceManager.h:633:38:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::SrcMgr::ContentCache*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::SrcMgr::ContentCache*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::SrcMgr::ContentCache*> >::_Base_type {aka std::allocator_traits<std::allocator<clang::SrcMgr::ContentCache*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::SrcMgr::ContentCache*> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::SrcMgr::ContentCache*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /usr/include/c++/7/utility:70:0,
                 from /usr/include/c++/7/algorithm:60,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_pair.h: In instantiation of 'constexpr std::pair<typename std::__decay_and_strip<_Tp>::__type, typename std::__decay_and_strip<_T2>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = clang::SourceLocation; _T2 = const char (&)[1]; typename std::__decay_and_strip<_T2>::__type = char [1]; typename std::__decay_and_strip<_Tp>::__type = clang::SourceLocation]':
/llvm/tools/clang/include/clang/Basic/SourceManager.h:1109:49:   required from here
/usr/include/c++/7/bits/stl_pair.h:524:14: error: no matching function for call to 'std::pair<clang::SourceLocation, char [1]>::pair(clang::SourceLocation, const char [1])'
       return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_pair.h:364:9: note: candidate: template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>)
         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
         ^~~~
/usr/include/c++/7/bits/stl_pair.h:364:9: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:524:14: note:   mismatched types 'std::tuple<_Tps ...>' and 'const char*'
       return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_pair.h:359:21: note: candidate: template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<clang::SourceLocation, _U1>::value) || (! std::is_same<char [1], _U2>::value)), clang::SourceLocation, char [1]>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<clang::SourceLocation, _U1>::value) || (! std::is_same<char [1], _U2>::value)), clang::SourceLocation, char [1]>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&)
  explicit constexpr pair(pair<_U1, _U2>&& __p)
                     ^~~~
/usr/include/c++/7/bits/stl_pair.h:359:21: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:524:14: note:   'clang::SourceLocation' is not derived from 'std::pair<_T1, _T2>'
       return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_pair.h:349:12: note: candidate: template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<clang::SourceLocation, _U1>::value) || (! std::is_same<char [1], _U2>::value)), clang::SourceLocation, char [1]>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<clang::SourceLocation, _U1>::value) || (! std::is_same<char [1], _U2>::value)), clang::SourceLocation, char [1]>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&)
  constexpr pair(pair<_U1, _U2>&& __p)
            ^~~~
/usr/include/c++/7/bits/stl_pair.h:349:12: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:524:14: note:   'clang::SourceLocation' is not derived from 'std::pair<_T1, _T2>'
       return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_pair.h:339:21: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&)
  explicit constexpr pair(_U1&& __x, _U2&& __y)
                     ^~~~
/usr/include/c++/7/bits/stl_pair.h:339:21: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:338:38: error: no type named 'type' in 'struct std::enable_if<false, bool>'
                          bool>::type=false>
                                      ^~~~~
/usr/include/c++/7/bits/stl_pair.h:338:38: note: invalid template non-type parameter
/usr/include/c++/7/bits/stl_pair.h:330:12: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&)
  constexpr pair(_U1&& __x, _U2&& __y)
            ^~~~
/usr/include/c++/7/bits/stl_pair.h:330:12: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:329:38: error: no type named 'type' in 'struct std::enable_if<false, bool>'
                          bool>::type=true>
                                      ^~~~
/usr/include/c++/7/bits/stl_pair.h:329:38: note: invalid template non-type parameter
/usr/include/c++/7/bits/stl_pair.h:321:17: note: candidate: template<class _U2, typename std::enable_if<_CopyMovePair<false, clang::SourceLocation, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&)
        explicit pair(const _T1& __x, _U2&& __y)
                 ^~~~
/usr/include/c++/7/bits/stl_pair.h:321:17: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:320:38: error: no type named 'type' in 'struct std::enable_if<false, bool>'
                          bool>::type=false>
                                      ^~~~~
/usr/include/c++/7/bits/stl_pair.h:320:38: note: invalid template non-type parameter
/usr/include/c++/7/bits/stl_pair.h:314:18: note: candidate: template<class _U2, typename std::enable_if<_CopyMovePair<true, clang::SourceLocation, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&)
        constexpr pair(const _T1& __x, _U2&& __y)
                  ^~~~
/usr/include/c++/7/bits/stl_pair.h:314:18: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:313:38: error: no type named 'type' in 'struct std::enable_if<false, bool>'
                          bool>::type=true>
                                      ^~~~
/usr/include/c++/7/bits/stl_pair.h:313:38: note: invalid template non-type parameter
/usr/include/c++/7/bits/stl_pair.h:307:27: note: candidate: template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, char [1]>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&)
        explicit constexpr pair(_U1&& __x, const _T2& __y)
                           ^~~~
/usr/include/c++/7/bits/stl_pair.h:307:27: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:306:38: error: no type named 'type' in 'struct std::enable_if<false, bool>'
                          bool>::type=false>
                                      ^~~~~
/usr/include/c++/7/bits/stl_pair.h:306:38: note: invalid template non-type parameter
/usr/include/c++/7/bits/stl_pair.h:300:18: note: candidate: template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, char [1]>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&)
        constexpr pair(_U1&& __x, const _T2& __y)
                  ^~~~
/usr/include/c++/7/bits/stl_pair.h:300:18: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:299:38: error: no type named 'type' in 'struct std::enable_if<false, bool>'
                          bool>::type=true>
                                      ^~~~
/usr/include/c++/7/bits/stl_pair.h:299:38: note: invalid template non-type parameter
/usr/include/c++/7/bits/stl_pair.h:293:17: note: candidate: constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = clang::SourceLocation; _T2 = char [1]]
       constexpr pair(pair&&) = default;
                 ^~~~
/usr/include/c++/7/bits/stl_pair.h:293:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/7/bits/stl_pair.h:292:17: note: candidate: constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = clang::SourceLocation; _T2 = char [1]]
       constexpr pair(const pair&) = default;
                 ^~~~
/usr/include/c++/7/bits/stl_pair.h:292:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/7/bits/stl_pair.h:289:21: note: candidate: template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<clang::SourceLocation, _U1>::value) || (! std::is_same<char [1], _U2>::value)), clang::SourceLocation, char [1]>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<clang::SourceLocation, _U1>::value) || (! std::is_same<char [1], _U2>::value)), clang::SourceLocation, char [1]>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&)
  explicit constexpr pair(const pair<_U1, _U2>& __p)
                     ^~~~
/usr/include/c++/7/bits/stl_pair.h:289:21: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:524:14: note:   'clang::SourceLocation' is not derived from 'const std::pair<_T1, _T2>'
       return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_pair.h:280:19: note: candidate: template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<clang::SourceLocation, _U1>::value) || (! std::is_same<char [1], _U2>::value)), clang::SourceLocation, char [1]>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<clang::SourceLocation, _U1>::value) || (! std::is_same<char [1], _U2>::value)), clang::SourceLocation, char [1]>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&)
         constexpr pair(const pair<_U1, _U2>& __p)
                   ^~~~
/usr/include/c++/7/bits/stl_pair.h:280:19: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:524:14: note:   'clang::SourceLocation' is not derived from 'const std::pair<_T1, _T2>'
       return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_pair.h:258:26: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&)
       explicit constexpr pair(const _T1& __a, const _T2& __b)
                          ^~~~
/usr/include/c++/7/bits/stl_pair.h:258:26: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:257:38: error: no type named 'type' in 'struct std::enable_if<false, bool>'
                          bool>::type=false>
                                      ^~~~~
/usr/include/c++/7/bits/stl_pair.h:257:38: note: invalid template non-type parameter
/usr/include/c++/7/bits/stl_pair.h:249:17: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&)
       constexpr pair(const _T1& __a, const _T2& __b)
                 ^~~~
/usr/include/c++/7/bits/stl_pair.h:249:17: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:248:38: error: no type named 'type' in 'struct std::enable_if<false, bool>'
                          bool>::type=true>
                                      ^~~~
/usr/include/c++/7/bits/stl_pair.h:248:38: note: invalid template non-type parameter
/usr/include/c++/7/bits/stl_pair.h:231:26: note: candidate: template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_Tp>, std::is_default_constructible<_Dp>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair()
       explicit constexpr pair()
                          ^~~~
/usr/include/c++/7/bits/stl_pair.h:231:26: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:524:14: note:   candidate expects 0 arguments, 2 provided
       return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_pair.h:218:26: note: candidate: template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair()
       _GLIBCXX_CONSTEXPR pair()
                          ^~~~
/usr/include/c++/7/bits/stl_pair.h:218:26: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_pair.h:524:14: note:   candidate expects 0 arguments, 2 provided
       return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_pair.h:525:5: error: body of constexpr function 'constexpr std::pair<typename std::__decay_and_strip<_Tp>::__type, typename std::__decay_and_strip<_T2>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = clang::SourceLocation; _T2 = const char (&)[1]; typename std::__decay_and_strip<_T2>::__type = char [1]; typename std::__decay_and_strip<_Tp>::__type = clang::SourceLocation]' not a return-statement
     }
     ^
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::RawComment*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::RawComment*, std::allocator<clang::RawComment*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::RawComment*>'
/llvm/tools/clang/include/clang/AST/RawCommentList.h:205:29:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::RawComment*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::RawComment*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::RawComment*> >::_Base_type {aka std::allocator_traits<std::allocator<clang::RawComment*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::RawComment*> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::RawComment*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h: At global scope:
/usr/include/c++/7/bits/hashtable_policy.h:281:12: error: 'size_t' in namespace 'std' does not name a type
       std::size_t  _M_hash_code;
            ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:342:20: error: 'ptrdiff_t' in namespace 'std' does not name a type
       typedef std::ptrdiff_t    difference_type;
                    ^~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:393:20: error: 'ptrdiff_t' in namespace 'std' does not name a type
       typedef std::ptrdiff_t    difference_type;
                    ^~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:441:18: error: 'size_t' in namespace 'std' does not name a type
     typedef std::size_t first_argument_type;
                  ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:442:18: error: 'size_t' in namespace 'std' does not name a type
     typedef std::size_t second_argument_type;
                  ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:443:18: error: 'size_t' in namespace 'std' does not name a type
     typedef std::size_t result_type;
                  ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:445:5: error: 'result_type' does not name a type; did you mean 'result_of'?
     result_type
     ^~~~~~~~~~~
     result_of
/usr/include/c++/7/bits/hashtable_policy.h:472:10: error: 'size_t' in namespace 'std' does not name a type
     std::size_t
          ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:476:10: error: 'size_t' in namespace 'std' does not name a type
     std::size_t
          ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:484:26: error: 'size_t' is not a member of 'std'
     std::pair<bool, std::size_t>
                          ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:484:26: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h:484:26: error: 'size_t' is not a member of 'std'
     std::pair<bool, std::size_t>
                          ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:484:26: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h:484:32: error: template argument 2 is invalid
     std::pair<bool, std::size_t>
                                ^
/usr/include/c++/7/bits/hashtable_policy.h:485:25: error: 'std::size_t' has not been declared
     _M_need_rehash(std::size_t __n_bkt, std::size_t __n_elt,
                         ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:485:46: error: 'std::size_t' has not been declared
     _M_need_rehash(std::size_t __n_bkt, std::size_t __n_elt,
                                              ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:486:11: error: 'std::size_t' has not been declared
      std::size_t __n_ins) const;
           ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:488:18: error: 'size_t' in namespace 'std' does not name a type
     typedef std::size_t _State;
                  ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:490:5: error: '_State' does not name a type; did you mean '_S_ate'?
     _State
     ^~~~~~
     _S_ate
/usr/include/c++/7/bits/hashtable_policy.h:499:14: error: '_State' has not been declared
     _M_reset(_State __state)
              ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:502:23: error: 'size_t' in namespace 'std' does not name a type
     static const std::size_t _S_growth_factor = 2;
                       ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:505:18: error: 'size_t' in namespace 'std' does not name a type
     mutable std::size_t _M_next_resize;
                  ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h: In constructor 'std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)':
/usr/include/c++/7/bits/hashtable_policy.h:465:32: error: class 'std::__detail::_Prime_rehash_policy' does not have any field named '_M_next_resize'
     : _M_max_load_factor(__z), _M_next_resize(0) { }
                                ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h: In member function 'void std::__detail::_Prime_rehash_policy::_M_reset()':
/usr/include/c++/7/bits/hashtable_policy.h:496:7: error: '_M_next_resize' was not declared in this scope
     { _M_next_resize = 0; }
       ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:496:7: note: suggested alternative: '_M_need_rehash'
     { _M_next_resize = 0; }
       ^~~~~~~~~~~~~~
       _M_need_rehash
/usr/include/c++/7/bits/hashtable_policy.h: In member function 'void std::__detail::_Prime_rehash_policy::_M_reset(int)':
/usr/include/c++/7/bits/hashtable_policy.h:500:7: error: '_M_next_resize' was not declared in this scope
     { _M_next_resize = __state; }
       ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:500:7: note: suggested alternative: '_M_need_rehash'
     { _M_next_resize = __state; }
       ^~~~~~~~~~~~~~
       _M_need_rehash
/usr/include/c++/7/bits/hashtable_policy.h: At global scope:
/usr/include/c++/7/bits/hashtable_policy.h:511:18: error: 'size_t' in namespace 'std' does not name a type
     typedef std::size_t first_argument_type;
                  ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:512:18: error: 'size_t' in namespace 'std' does not name a type
     typedef std::size_t second_argument_type;
                  ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:513:18: error: 'size_t' in namespace 'std' does not name a type
     typedef std::size_t result_type;
                  ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:515:5: error: 'result_type' does not name a type; did you mean 'result_of'?
     result_type
     ^~~~~~~~~~~
     result_of
/usr/include/c++/7/bits/hashtable_policy.h:523:15: error: 'size_t' in namespace 'std' does not name a type
   inline std::size_t
               ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:559:10: error: 'size_t' in namespace 'std' does not name a type
     std::size_t
          ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:585:10: error: 'size_t' in namespace 'std' does not name a type
     std::size_t
          ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:593:26: error: 'size_t' is not a member of 'std'
     std::pair<bool, std::size_t>
                          ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:593:26: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h:593:26: error: 'size_t' is not a member of 'std'
     std::pair<bool, std::size_t>
                          ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:593:26: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h:593:32: error: template argument 2 is invalid
     std::pair<bool, std::size_t>
                                ^
/usr/include/c++/7/bits/hashtable_policy.h:594:25: error: 'std::size_t' has not been declared
     _M_need_rehash(std::size_t __n_bkt, std::size_t __n_elt,
                         ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:594:46: error: 'std::size_t' has not been declared
     _M_need_rehash(std::size_t __n_bkt, std::size_t __n_elt,
                                              ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:595:11: error: 'std::size_t' has not been declared
      std::size_t __n_ins) noexcept
           ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:614:18: error: 'size_t' in namespace 'std' does not name a type
     typedef std::size_t _State;
                  ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:616:5: error: '_State' does not name a type; did you mean '_S_ate'?
     _State
     ^~~~~~
     _S_ate
/usr/include/c++/7/bits/hashtable_policy.h:625:14: error: '_State' has not been declared
     _M_reset(_State __state) noexcept
              ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:628:23: error: 'size_t' in namespace 'std' does not name a type
     static const std::size_t _S_growth_factor = 2;
                       ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:631:10: error: 'size_t' in namespace 'std' does not name a type
     std::size_t _M_next_resize;
          ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h: In constructor 'std::__detail::_Power2_rehash_policy::_Power2_rehash_policy(float)':
/usr/include/c++/7/bits/hashtable_policy.h:551:32: error: class 'std::__detail::_Power2_rehash_policy' does not have any field named '_M_next_resize'
     : _M_max_load_factor(__z), _M_next_resize(0) { }
                                ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h: In member function 'int std::__detail::_Power2_rehash_policy::_M_need_rehash(int, int, int)':
/usr/include/c++/7/bits/hashtable_policy.h:597:32: error: '_M_next_resize' was not declared in this scope
       if (__n_elt + __n_ins >= _M_next_resize)
                                ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:597:32: note: suggested alternative: '_M_need_rehash'
       if (__n_elt + __n_ins >= _M_next_resize)
                                ^~~~~~~~~~~~~~
                                _M_need_rehash
/usr/include/c++/7/bits/hashtable_policy.h:603:34: error: 'size_t' is not a member of 'std'
        _M_next_bkt(std::max<std::size_t>(__builtin_floor(__min_bkts) + 1,
                                  ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:603:34: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h:603:34: error: 'size_t' is not a member of 'std'
        _M_next_bkt(std::max<std::size_t>(__builtin_floor(__min_bkts) + 1,
                                  ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:603:34: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h:604:17: error: '_S_growth_factor' was not declared in this scope
       __n_bkt * _S_growth_factor)));
                 ^~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:604:17: note: suggested alternative: 'max_load_factor'
       __n_bkt * _S_growth_factor)));
                 ^~~~~~~~~~~~~~~~
                 max_load_factor
/usr/include/c++/7/bits/hashtable_policy.h:603:8: error: '_M_next_bkt' was not declared in this scope
        _M_next_bkt(std::max<std::size_t>(__builtin_floor(__min_bkts) + 1,
        ^~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:603:8: note: suggested alternative: '__n_bkt'
        _M_next_bkt(std::max<std::size_t>(__builtin_floor(__min_bkts) + 1,
        ^~~~~~~~~~~
        __n_bkt
/usr/include/c++/7/bits/hashtable_policy.h:608:34: error: cannot convert 'std::pair<bool, int>' to 'int' in return
    return std::make_pair(false, 0);
                                  ^
/usr/include/c++/7/bits/hashtable_policy.h:611:32: error: cannot convert 'std::pair<bool, int>' to 'int' in return
  return std::make_pair(false, 0);
                                ^
/usr/include/c++/7/bits/hashtable_policy.h: In member function 'void std::__detail::_Power2_rehash_policy::_M_reset()':
/usr/include/c++/7/bits/hashtable_policy.h:622:7: error: '_M_next_resize' was not declared in this scope
     { _M_next_resize = 0; }
       ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:622:7: note: suggested alternative: '_M_need_rehash'
     { _M_next_resize = 0; }
       ^~~~~~~~~~~~~~
       _M_need_rehash
/usr/include/c++/7/bits/hashtable_policy.h: In member function 'void std::__detail::_Power2_rehash_policy::_M_reset(int)':
/usr/include/c++/7/bits/hashtable_policy.h:626:7: error: '_M_next_resize' was not declared in this scope
     { _M_next_resize = __state; }
       ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:626:7: note: suggested alternative: '_M_need_rehash'
     { _M_next_resize = __state; }
       ^~~~~~~~~~~~~~
       _M_need_rehash
/usr/include/c++/7/bits/hashtable_policy.h: At global scope:
/usr/include/c++/7/bits/hashtable_policy.h:694:7: error: 'mapped_type' does not name a type; did you mean 'false_type'?
       mapped_type&
       ^~~~~~~~~~~
       false_type
/usr/include/c++/7/bits/hashtable_policy.h:697:7: error: 'mapped_type' does not name a type; did you mean 'false_type'?
       mapped_type&
       ^~~~~~~~~~~
       false_type
/usr/include/c++/7/bits/hashtable_policy.h:702:7: error: 'mapped_type' does not name a type; did you mean 'false_type'?
       mapped_type&
       ^~~~~~~~~~~
       false_type
/usr/include/c++/7/bits/hashtable_policy.h:705:13: error: 'mapped_type' does not name a type; did you mean 'false_type'?
       const mapped_type&
             ^~~~~~~~~~~
             false_type
/usr/include/c++/7/bits/hashtable_policy.h:716:8: error: 'mapped_type' does not name a type; did you mean 'false_type'?
     -> mapped_type&
        ^~~~~~~~~~~
        false_type
/usr/include/c++/7/bits/hashtable_policy.h:716:19: error: expected initializer before '&' token
     -> mapped_type&
                   ^
/usr/include/c++/7/bits/hashtable_policy.h:741:8: error: 'mapped_type' does not name a type; did you mean 'false_type'?
     -> mapped_type&
        ^~~~~~~~~~~
        false_type
/usr/include/c++/7/bits/hashtable_policy.h:741:19: error: expected initializer before '&' token
     -> mapped_type&
                   ^
/usr/include/c++/7/bits/hashtable_policy.h:766:8: error: 'mapped_type' does not name a type; did you mean 'false_type'?
     -> mapped_type&
        ^~~~~~~~~~~
        false_type
/usr/include/c++/7/bits/hashtable_policy.h:766:19: error: expected initializer before '&' token
     -> mapped_type&
                   ^
/usr/include/c++/7/bits/hashtable_policy.h:785:14: error: expected initializer before 'mapped_type'
     -> const mapped_type&
              ^~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h: In member function 'void std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_range(_InputIterator, _InputIterator, const _NodeGetter&)':
/usr/include/c++/7/bits/hashtable_policy.h:881:41: error: 'size_t' is not a member of 'std'
  using pair_type = std::pair<bool, std::size_t>;
                                         ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:881:41: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h:881:41: error: 'size_t' is not a member of 'std'
  using pair_type = std::pair<bool, std::size_t>;
                                         ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:881:41: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h:881:47: error: template argument 2 is invalid
  using pair_type = std::pair<bool, std::size_t>;
                                               ^
/usr/include/c++/7/bits/hashtable_policy.h:888:2: error: 'pair_type' was not declared in this scope
  pair_type __do_rehash = __rehash._M_need_rehash(__h._M_bucket_count,
  ^~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:888:2: note: suggested alternative: '_Bit_type'
  pair_type __do_rehash = __rehash._M_need_rehash(__h._M_bucket_count,
  ^~~~~~~~~
  _Bit_type
/usr/include/c++/7/bits/hashtable_policy.h:892:6: error: '__do_rehash' was not declared in this scope
  if (__do_rehash.first)
      ^~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:892:6: note: suggested alternative: '__rehash'
  if (__do_rehash.first)
      ^~~~~~~~~~~
      __rehash
/usr/include/c++/7/bits/hashtable_policy.h: At global scope:
/usr/include/c++/7/bits/hashtable_policy.h:1065:20: error: 'std::size_t' has not been declared
       reserve(std::size_t __n)
                    ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1190:12: error: 'size_t' in namespace 'std' does not name a type
       std::size_t
            ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1194:12: error: 'size_t' in namespace 'std' does not name a type
       std::size_t
            ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1266:20: error: 'size_t' in namespace 'std' does not name a type
       typedef std::size_t     __hash_code;
                    ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1278:7: error: '__hash_code' does not name a type; did you mean '_Hash_node'?
       __hash_code
       ^~~~~~~~~~~
       _Hash_node
/usr/include/c++/7/bits/hashtable_policy.h:1282:12: error: 'size_t' in namespace 'std' does not name a type
       std::size_t
            ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1286:12: error: 'size_t' in namespace 'std' does not name a type
       std::size_t
            ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1294:35: error: '__hash_code' has not been declared
       _M_store_code(__node_type*, __hash_code) const
                                   ^~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1356:20: error: 'size_t' in namespace 'std' does not name a type
       typedef std::size_t     __hash_code;
                    ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1366:7: error: '__hash_code' does not name a type; did you mean '_Hash_node'?
       __hash_code
       ^~~~~~~~~~~
       _Hash_node
/usr/include/c++/7/bits/hashtable_policy.h:1370:12: error: 'size_t' in namespace 'std' does not name a type
       std::size_t
            ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1375:12: error: 'size_t' in namespace 'std' does not name a type
       std::size_t
            ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1382:39: error: '__hash_code' has not been declared
       _M_store_code(__node_type* __n, __hash_code __c) const
                                       ^~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1463:12: error: 'std::size_t' has not been declared
       std::size_t __bkt, std::size_t __bkt_count)
            ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1463:31: error: 'std::size_t' has not been declared
       std::size_t __bkt, std::size_t __bkt_count)
                               ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1482:12: error: 'size_t' in namespace 'std' does not name a type
       std::size_t _M_bucket;
            ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1483:12: error: 'size_t' in namespace 'std' does not name a type
       std::size_t _M_bucket_count;
            ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1489:12: error: 'size_t' in namespace 'std' does not name a type
       std::size_t
            ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h: In constructor 'std::__detail::_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, true>::_Local_iterator_base(const __hash_code_base&, std::__detail::_Hash_node<_Value, true>*, int, int)':
/usr/include/c++/7/bits/hashtable_policy.h:1465:15: error: class 'std::__detail::_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, true>' does not have any field named '_M_bucket'
  _M_cur(__p), _M_bucket(__bkt), _M_bucket_count(__bkt_count) { }
               ^~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1465:33: error: class 'std::__detail::_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, true>' does not have any field named '_M_bucket_count'
  _M_cur(__p), _M_bucket(__bkt), _M_bucket_count(__bkt_count) { }
                                 ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h: In member function 'void std::__detail::_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, true>::_M_incr()':
/usr/include/c++/7/bits/hashtable_policy.h:1473:11: error: 'size_t' is not a member of 'std'
      std::size_t __bkt
           ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1473:11: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h:1476:10: error: '__bkt' was not declared in this scope
      if (__bkt != _M_bucket)
          ^~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1476:10: note: suggested alternative: '__cbrt'
      if (__bkt != _M_bucket)
          ^~~~~
          __cbrt
/usr/include/c++/7/bits/hashtable_policy.h:1476:19: error: '_M_bucket' was not declared in this scope
      if (__bkt != _M_bucket)
                   ^~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h: At global scope:
/usr/include/c++/7/bits/hashtable_policy.h:1545:12: error: 'std::size_t' has not been declared
       std::size_t __bkt, std::size_t __bkt_count)
            ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1545:31: error: 'std::size_t' has not been declared
       std::size_t __bkt, std::size_t __bkt_count)
                               ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1590:12: error: 'size_t' in namespace 'std' does not name a type
       std::size_t _M_bucket;
            ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1591:12: error: 'size_t' in namespace 'std' does not name a type
       std::size_t _M_bucket_count;
            ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1604:12: error: 'size_t' in namespace 'std' does not name a type
       std::size_t
            ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h: In constructor 'std::__detail::_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>::_Local_iterator_base()':
/usr/include/c++/7/bits/hashtable_policy.h:1541:32: error: class 'std::__detail::_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>' does not have any field named '_M_bucket_count'
       _Local_iterator_base() : _M_bucket_count(-1) { }
                                ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h: In constructor 'std::__detail::_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>::_Local_iterator_base(const __hash_code_base&, std::__detail::_Hash_node<_Value, false>*, int, int)':
/usr/include/c++/7/bits/hashtable_policy.h:1546:22: error: class 'std::__detail::_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>' does not have any field named '_M_bucket'
       : _M_cur(__p), _M_bucket(__bkt), _M_bucket_count(__bkt_count)
                      ^~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1546:40: error: class 'std::__detail::_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>' does not have any field named '_M_bucket_count'
       : _M_cur(__p), _M_bucket(__bkt), _M_bucket_count(__bkt_count)
                                        ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h: In destructor 'std::__detail::_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>::~_Local_iterator_base()':
/usr/include/c++/7/bits/hashtable_policy.h:1551:6: error: '_M_bucket_count' was not declared in this scope
  if (_M_bucket_count != -1)
      ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1551:6: note: suggested alternative: '__shared_count'
  if (_M_bucket_count != -1)
      ^~~~~~~~~~~~~~~
      __shared_count
/usr/include/c++/7/bits/hashtable_policy.h: In copy constructor 'std::__detail::_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>::_Local_iterator_base(const std::__detail::_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>&)':
/usr/include/c++/7/bits/hashtable_policy.h:1556:32: error: class 'std::__detail::_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>' does not have any field named '_M_bucket'
       : _M_cur(__iter._M_cur), _M_bucket(__iter._M_bucket),
                                ^~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1557:9: error: class 'std::__detail::_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>' does not have any field named '_M_bucket_count'
         _M_bucket_count(__iter._M_bucket_count)
         ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1559:6: error: '_M_bucket_count' was not declared in this scope
  if (_M_bucket_count != -1)
      ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1559:6: note: suggested alternative: '__shared_count'
  if (_M_bucket_count != -1)
      ^~~~~~~~~~~~~~~
      __shared_count
/usr/include/c++/7/bits/hashtable_policy.h: In member function 'std::__detail::_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>& std::__detail::_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>::operator=(const std::__detail::_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>&)':
/usr/include/c++/7/bits/hashtable_policy.h:1566:6: error: '_M_bucket_count' was not declared in this scope
  if (_M_bucket_count != -1)
      ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1566:6: note: suggested alternative: '__shared_count'
  if (_M_bucket_count != -1)
      ^~~~~~~~~~~~~~~
      __shared_count
/usr/include/c++/7/bits/hashtable_policy.h:1569:2: error: '_M_bucket' was not declared in this scope
  _M_bucket = __iter._M_bucket;
  ^~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1570:2: error: '_M_bucket_count' was not declared in this scope
  _M_bucket_count = __iter._M_bucket_count;
  ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1570:2: note: suggested alternative: '__shared_count'
  _M_bucket_count = __iter._M_bucket_count;
  ^~~~~~~~~~~~~~~
  __shared_count
/usr/include/c++/7/bits/hashtable_policy.h: In member function 'void std::__detail::_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>::_M_incr()':
/usr/include/c++/7/bits/hashtable_policy.h:1582:11: error: 'size_t' is not a member of 'std'
      std::size_t __bkt = this->_M_h()->_M_bucket_index(_M_cur,
           ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1582:11: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h:1584:10: error: '__bkt' was not declared in this scope
      if (__bkt != _M_bucket)
          ^~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1584:10: note: suggested alternative: '__cbrt'
      if (__bkt != _M_bucket)
          ^~~~~
          __cbrt
/usr/include/c++/7/bits/hashtable_policy.h:1584:19: error: '_M_bucket' was not declared in this scope
      if (__bkt != _M_bucket)
                   ^~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h: At global scope:
/usr/include/c++/7/bits/hashtable_policy.h:1646:20: error: 'ptrdiff_t' in namespace 'std' does not name a type
       typedef std::ptrdiff_t    difference_type;
                    ^~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1653:14: error: 'std::size_t' has not been declared
         std::size_t __bkt, std::size_t __bkt_count)
              ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1653:33: error: 'std::size_t' has not been declared
         std::size_t __bkt, std::size_t __bkt_count)
                                 ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1698:20: error: 'ptrdiff_t' in namespace 'std' does not name a type
       typedef std::ptrdiff_t    difference_type;
                    ^~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1705:13: error: 'std::size_t' has not been declared
        std::size_t __bkt, std::size_t __bkt_count)
             ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1705:32: error: 'std::size_t' has not been declared
        std::size_t __bkt, std::size_t __bkt_count)
                                ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1762:18: error: 'size_t' in namespace 'std' does not name a type
     typedef std::size_t     size_type;
                  ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1763:18: error: 'ptrdiff_t' in namespace 'std' does not name a type
     typedef std::ptrdiff_t    difference_type;
                  ^~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h: In static member function 'static bool std::__detail::_Equality_base::_S_is_permutation(_Uiterator, _Uiterator, _Uiterator)':
/usr/include/c++/7/bits/hashtable_policy.h:1872:9: error: 'ptrdiff_t' is not a member of 'std'
    std::ptrdiff_t __n2 = 0;
         ^~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1872:9: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:149:26: note:   'ptrdiff_t'
 typedef __PTRDIFF_TYPE__ ptrdiff_t;
                          ^~~~~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h:1875:10: error: '__n2' was not declared in this scope
        ++__n2;
          ^~~~
/usr/include/c++/7/bits/hashtable_policy.h:1875:10: note: suggested alternative: '__lg'
        ++__n2;
          ^~~~
          __lg
/usr/include/c++/7/bits/hashtable_policy.h:1877:9: error: '__n2' was not declared in this scope
    if (!__n2)
         ^~~~
/usr/include/c++/7/bits/hashtable_policy.h:1877:9: note: suggested alternative: '__lg'
    if (!__n2)
         ^~~~
         __lg
/usr/include/c++/7/bits/hashtable_policy.h:1880:9: error: 'ptrdiff_t' is not a member of 'std'
    std::ptrdiff_t __n1 = 0;
         ^~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:1880:9: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:149:26: note:   'ptrdiff_t'
 typedef __PTRDIFF_TYPE__ ptrdiff_t;
                          ^~~~~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h:1883:10: error: '__n1' was not declared in this scope
        ++__n1;
          ^~~~
/usr/include/c++/7/bits/hashtable_policy.h:1883:10: note: suggested alternative: '__y1'
        ++__n1;
          ^~~~
          __y1
/usr/include/c++/7/bits/hashtable_policy.h:1885:8: error: '__n1' was not declared in this scope
    if (__n1 != __n2)
        ^~~~
/usr/include/c++/7/bits/hashtable_policy.h:1885:8: note: suggested alternative: '__y1'
    if (__n1 != __n2)
        ^~~~
        __y1
/usr/include/c++/7/bits/hashtable_policy.h:1885:16: error: '__n2' was not declared in this scope
    if (__n1 != __n2)
                ^~~~
/usr/include/c++/7/bits/hashtable_policy.h:1885:16: note: suggested alternative: '__lg'
    if (__n1 != __n2)
                ^~~~
                __lg
/usr/include/c++/7/bits/hashtable_policy.h: At global scope:
/usr/include/c++/7/bits/hashtable_policy.h:2047:7: error: expected ';' at end of member declaration
       _M_allocate_buckets(std::size_t __n);
       ^~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:2047:39: error: expected ')' before '__n'
       _M_allocate_buckets(std::size_t __n);
                                       ^~~
/usr/include/c++/7/bits/hashtable_policy.h:2050:50: error: 'std::size_t' has not been declared
       _M_deallocate_buckets(__bucket_type*, std::size_t __n);
                                                  ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:2103:60: error: 'std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets' is not a static data member of 'struct std::__detail::_Hashtable_alloc<_NodeAlloc>'
     _Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t __n)
                                                            ^~~~~~
/usr/include/c++/7/bits/hashtable_policy.h:2103:60: error: template definition of non-template 'std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets'
/usr/include/c++/7/bits/hashtable_policy.h:2103:60: error: 'size_t' is not a member of 'std'
/usr/include/c++/7/bits/hashtable_policy.h:2103:60: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h:2116:13: error: 'std::size_t' has not been declared
        std::size_t __n)
             ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:270:18: error: 'size_t' is not a member of 'std'
            (std::size_t)0)),
                  ^~~~~~
/usr/include/c++/7/bits/hashtable.h:270:18: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>& std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::operator=(const std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>&)':
/usr/include/c++/7/bits/hashtable.h:1030:12: error: 'size_t' is not a member of 'std'
       std::size_t __former_bucket_count = _M_bucket_count;
            ^~~~~~
/usr/include/c++/7/bits/hashtable.h:1030:12: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:1054:46: error: '__former_bucket_count' was not declared in this scope
      _M_deallocate_buckets(__former_buckets, __former_bucket_count);
                                              ^~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable.h:1054:46: note: suggested alternative: '__former_buckets'
      _M_deallocate_buckets(__former_buckets, __former_bucket_count);
                                              ^~~~~~~~~~~~~~~~~~~~~
                                              __former_buckets
/usr/include/c++/7/bits/hashtable.h:1064:26: error: '__former_bucket_count' was not declared in this scope
        _M_bucket_count = __former_bucket_count;
                          ^~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable.h:1064:26: note: suggested alternative: '__former_buckets'
        _M_bucket_count = __former_bucket_count;
                          ^~~~~~~~~~~~~~~~~~~~~
                          __former_buckets
/usr/include/c++/7/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::find(const key_type&)':
/usr/include/c++/7/bits/hashtable.h:1421:12: error: 'size_t' is not a member of 'std'
       std::size_t __n = _M_bucket_index(__k, __code);
            ^~~~~~
/usr/include/c++/7/bits/hashtable.h:1421:12: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:1422:39: error: '__n' was not declared in this scope
       __node_type* __p = _M_find_node(__n, __k, __code);
                                       ^~~
/usr/include/c++/7/bits/hashtable.h:1422:39: note: suggested alternative: '__yn'
       __node_type* __p = _M_find_node(__n, __k, __code);
                                       ^~~
                                       __yn
/usr/include/c++/7/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::const_iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::find(const key_type&) const':
/usr/include/c++/7/bits/hashtable.h:1437:12: error: 'size_t' is not a member of 'std'
       std::size_t __n = _M_bucket_index(__k, __code);
            ^~~~~~
/usr/include/c++/7/bits/hashtable.h:1437:12: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:1438:39: error: '__n' was not declared in this scope
       __node_type* __p = _M_find_node(__n, __k, __code);
                                       ^~~
/usr/include/c++/7/bits/hashtable.h:1438:39: note: suggested alternative: '__yn'
       __node_type* __p = _M_find_node(__n, __k, __code);
                                       ^~~
                                       __yn
/usr/include/c++/7/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::count(const key_type&) const':
/usr/include/c++/7/bits/hashtable.h:1453:12: error: 'size_t' is not a member of 'std'
       std::size_t __n = _M_bucket_index(__k, __code);
            ^~~~~~
/usr/include/c++/7/bits/hashtable.h:1453:12: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:1454:42: error: '__n' was not declared in this scope
       __node_type* __p = _M_bucket_begin(__n);
                                          ^~~
/usr/include/c++/7/bits/hashtable.h:1454:42: note: suggested alternative: '__yn'
       __node_type* __p = _M_bucket_begin(__n);
                                          ^~~
                                          __yn
/usr/include/c++/7/bits/hashtable.h:1458:12: error: 'size_t' is not a member of 'std'
       std::size_t __result = 0;
            ^~~~~~
/usr/include/c++/7/bits/hashtable.h:1458:12: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:1462:8: error: '__result' was not declared in this scope
      ++__result;
        ^~~~~~~~
/usr/include/c++/7/bits/hashtable.h:1462:8: note: suggested alternative: '_M_reset'
      ++__result;
        ^~~~~~~~
        _M_reset
/usr/include/c++/7/bits/hashtable.h:1463:13: error: '__result' was not declared in this scope
    else if (__result)
             ^~~~~~~~
/usr/include/c++/7/bits/hashtable.h:1463:13: note: suggested alternative: '_M_reset'
    else if (__result)
             ^~~~~~~~
             _M_reset
/usr/include/c++/7/bits/hashtable.h:1471:14: error: '__result' was not declared in this scope
       return __result;
              ^~~~~~~~
/usr/include/c++/7/bits/hashtable.h:1471:14: note: suggested alternative: '_M_reset'
       return __result;
              ^~~~~~~~
              _M_reset
/usr/include/c++/7/bits/hashtable.h: In member function 'std::pair<typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator, typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::equal_range(const key_type&)':
/usr/include/c++/7/bits/hashtable.h:1485:12: error: 'size_t' is not a member of 'std'
       std::size_t __n = _M_bucket_index(__k, __code);
            ^~~~~~
/usr/include/c++/7/bits/hashtable.h:1485:12: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:1486:39: error: '__n' was not declared in this scope
       __node_type* __p = _M_find_node(__n, __k, __code);
                                       ^~~
/usr/include/c++/7/bits/hashtable.h:1486:39: note: suggested alternative: '__yn'
       __node_type* __p = _M_find_node(__n, __k, __code);
                                       ^~~
                                       __yn
/usr/include/c++/7/bits/hashtable.h: In member function 'std::pair<typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::const_iterator, typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::const_iterator> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::equal_range(const key_type&) const':
/usr/include/c++/7/bits/hashtable.h:1512:12: error: 'size_t' is not a member of 'std'
       std::size_t __n = _M_bucket_index(__k, __code);
            ^~~~~~
/usr/include/c++/7/bits/hashtable.h:1512:12: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:1513:39: error: '__n' was not declared in this scope
       __node_type* __p = _M_find_node(__n, __k, __code);
                                       ^~~
/usr/include/c++/7/bits/hashtable.h:1513:39: note: suggested alternative: '__yn'
       __node_type* __p = _M_find_node(__n, __k, __code);
                                       ^~~
                                       __yn
/usr/include/c++/7/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*)':
/usr/include/c++/7/bits/hashtable.h:1708:28: error: 'size_t' is not a member of 'std'
       std::pair<bool, std::size_t> __do_rehash
                            ^~~~~~
/usr/include/c++/7/bits/hashtable.h:1708:28: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:1708:28: error: 'size_t' is not a member of 'std'
       std::pair<bool, std::size_t> __do_rehash
                            ^~~~~~
/usr/include/c++/7/bits/hashtable.h:1708:28: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:1708:34: error: template argument 2 is invalid
       std::pair<bool, std::size_t> __do_rehash
                                  ^
/usr/include/c++/7/bits/hashtable.h:1713:20: error: request for member 'first' in '__do_rehash', which is of non-class type 'int'
    if (__do_rehash.first)
                    ^~~~~
/usr/include/c++/7/bits/hashtable.h:1715:30: error: request for member 'second' in '__do_rehash', which is of non-class type 'int'
        _M_rehash(__do_rehash.second, __saved_state);
                              ^~~~~~
/usr/include/c++/7/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_multi_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*)':
/usr/include/c++/7/bits/hashtable.h:1747:28: error: 'size_t' is not a member of 'std'
       std::pair<bool, std::size_t> __do_rehash
                            ^~~~~~
/usr/include/c++/7/bits/hashtable.h:1747:28: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:1747:28: error: 'size_t' is not a member of 'std'
       std::pair<bool, std::size_t> __do_rehash
                            ^~~~~~
/usr/include/c++/7/bits/hashtable.h:1747:28: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:1747:34: error: template argument 2 is invalid
       std::pair<bool, std::size_t> __do_rehash
                                  ^
/usr/include/c++/7/bits/hashtable.h:1752:20: error: request for member 'first' in '__do_rehash', which is of non-class type 'int'
    if (__do_rehash.first)
                    ^~~~~
/usr/include/c++/7/bits/hashtable.h:1753:28: error: request for member 'second' in '__do_rehash', which is of non-class type 'int'
      _M_rehash(__do_rehash.second, __saved_state);
                            ^~~~~~
/usr/include/c++/7/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::const_iterator)':
/usr/include/c++/7/bits/hashtable.h:1856:12: error: 'size_t' is not a member of 'std'
       std::size_t __bkt = _M_bucket_index(__n);
            ^~~~~~
/usr/include/c++/7/bits/hashtable.h:1856:12: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:1861:52: error: '__bkt' was not declared in this scope
       __node_base* __prev_n = _M_get_previous_node(__bkt, __n);
                                                    ^~~~~
/usr/include/c++/7/bits/hashtable.h:1861:52: note: suggested alternative: '__cbrt'
       __node_base* __prev_n = _M_get_previous_node(__bkt, __n);
                                                    ^~~~~
                                                    __cbrt
/usr/include/c++/7/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::true_type, const key_type&)':
/usr/include/c++/7/bits/hashtable.h:1904:12: error: 'size_t' is not a member of 'std'
       std::size_t __bkt = _M_bucket_index(__k, __code);
            ^~~~~~
/usr/include/c++/7/bits/hashtable.h:1904:12: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:1907:51: error: '__bkt' was not declared in this scope
       __node_base* __prev_n = _M_find_before_node(__bkt, __k, __code);
                                                   ^~~~~
/usr/include/c++/7/bits/hashtable.h:1907:51: note: suggested alternative: '__cbrt'
       __node_base* __prev_n = _M_find_before_node(__bkt, __k, __code);
                                                   ^~~~~
                                                   __cbrt
/usr/include/c++/7/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::false_type, const key_type&)':
/usr/include/c++/7/bits/hashtable.h:1928:12: error: 'size_t' is not a member of 'std'
       std::size_t __bkt = _M_bucket_index(__k, __code);
            ^~~~~~
/usr/include/c++/7/bits/hashtable.h:1928:12: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:1931:51: error: '__bkt' was not declared in this scope
       __node_base* __prev_n = _M_find_before_node(__bkt, __k, __code);
                                                   ^~~~~
/usr/include/c++/7/bits/hashtable.h:1931:51: note: suggested alternative: '__cbrt'
       __node_base* __prev_n = _M_find_before_node(__bkt, __k, __code);
                                                   ^~~~~
                                                   __cbrt
/usr/include/c++/7/bits/hashtable.h:1943:12: error: 'size_t' is not a member of 'std'
       std::size_t __n_last_bkt = __bkt;
            ^~~~~~
/usr/include/c++/7/bits/hashtable.h:1943:12: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:1949:4: error: '__n_last_bkt' was not declared in this scope
    __n_last_bkt = _M_bucket_index(__n_last);
    ^~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable.h:1949:4: note: suggested alternative: '__n_last'
    __n_last_bkt = _M_bucket_index(__n_last);
    ^~~~~~~~~~~~
    __n_last
/usr/include/c++/7/bits/hashtable.h:1951:14: error: '__n_last_bkt' was not declared in this scope
       while (__n_last_bkt == __bkt && this->_M_equals(__k, __code, __n_last));
              ^~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable.h:1951:14: note: suggested alternative: '__n_last'
       while (__n_last_bkt == __bkt && this->_M_equals(__k, __code, __n_last));
              ^~~~~~~~~~~~
              __n_last
/usr/include/c++/7/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::const_iterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::const_iterator)':
/usr/include/c++/7/bits/hashtable.h:1988:12: error: 'size_t' is not a member of 'std'
       std::size_t __bkt = _M_bucket_index(__n);
            ^~~~~~
/usr/include/c++/7/bits/hashtable.h:1988:12: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:1990:52: error: '__bkt' was not declared in this scope
       __node_base* __prev_n = _M_get_previous_node(__bkt, __n);
                                                    ^~~~~
/usr/include/c++/7/bits/hashtable.h:1990:52: note: suggested alternative: '__cbrt'
       __node_base* __prev_n = _M_get_previous_node(__bkt, __n);
                                                    ^~~~~
                                                    __cbrt
/usr/include/c++/7/bits/hashtable.h:1992:12: error: 'size_t' is not a member of 'std'
       std::size_t __n_bkt = __bkt;
            ^~~~~~
/usr/include/c++/7/bits/hashtable.h:1992:12: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:2003:8: error: '__n_bkt' was not declared in this scope
        __n_bkt = _M_bucket_index(__n);
        ^~~~~~~
/usr/include/c++/7/bits/hashtable.h:2003:8: note: suggested alternative: '__cbrt'
        __n_bkt = _M_bucket_index(__n);
        ^~~~~~~
        __cbrt
/usr/include/c++/7/bits/hashtable.h:2005:30: error: '__n_bkt' was not declared in this scope
    while (__n != __last_n && __n_bkt == __bkt);
                              ^~~~~~~
/usr/include/c++/7/bits/hashtable.h:2005:30: note: suggested alternative: '__cbrt'
    while (__n != __last_n && __n_bkt == __bkt);
                              ^~~~~~~
                              __cbrt
/usr/include/c++/7/bits/hashtable.h:2014:19: error: '__n_bkt' was not declared in this scope
       if (__n && (__n_bkt != __bkt || __is_bucket_begin))
                   ^~~~~~~
/usr/include/c++/7/bits/hashtable.h:2014:19: note: suggested alternative: '__cbrt'
       if (__n && (__n_bkt != __bkt || __is_bucket_begin))
                   ^~~~~~~
                   __cbrt
/usr/include/c++/7/bits/hashtable.h: In member function 'void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type)':
/usr/include/c++/7/bits/hashtable.h:2045:12: error: 'size_t' is not a member of 'std'
       std::size_t __buckets
            ^~~~~~
/usr/include/c++/7/bits/hashtable.h:2045:12: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:2048:7: error: '__buckets' was not declared in this scope
       __buckets = _M_rehash_policy._M_next_bkt(__buckets);
       ^~~~~~~~~
/usr/include/c++/7/bits/hashtable.h:2048:7: note: suggested alternative: '_M_buckets'
       __buckets = _M_rehash_policy._M_next_bkt(__buckets);
       ^~~~~~~~~
       _M_buckets
/usr/include/c++/7/bits/hashtable.h: In member function 'void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::true_type)':
/usr/include/c++/7/bits/hashtable.h:2092:12: error: 'size_t' is not a member of 'std'
       std::size_t __bbegin_bkt = 0;
            ^~~~~~
/usr/include/c++/7/bits/hashtable.h:2092:12: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:2096:9: error: 'size_t' is not a member of 'std'
    std::size_t __bkt = __hash_code_base::_M_bucket_index(__p, __n);
         ^~~~~~
/usr/include/c++/7/bits/hashtable.h:2096:9: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:2097:23: error: '__bkt' was not declared in this scope
    if (!__new_buckets[__bkt])
                       ^~~~~
/usr/include/c++/7/bits/hashtable.h:2097:23: note: suggested alternative: '__cbrt'
    if (!__new_buckets[__bkt])
                       ^~~~~
                       __cbrt
/usr/include/c++/7/bits/hashtable.h:2103:17: error: '__bbegin_bkt' was not declared in this scope
   __new_buckets[__bbegin_bkt] = __p;
                 ^~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable.h:2103:17: note: suggested alternative: '_M_begin'
   __new_buckets[__bbegin_bkt] = __p;
                 ^~~~~~~~~~~~
                 _M_begin
/usr/include/c++/7/bits/hashtable.h:2104:8: error: '__bbegin_bkt' was not declared in this scope
        __bbegin_bkt = __bkt;
        ^~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable.h:2104:8: note: suggested alternative: '_M_begin'
        __bbegin_bkt = __bkt;
        ^~~~~~~~~~~~
        _M_begin
/usr/include/c++/7/bits/hashtable.h: In member function 'void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::false_type)':
/usr/include/c++/7/bits/hashtable.h:2134:12: error: 'size_t' is not a member of 'std'
       std::size_t __bbegin_bkt = 0;
            ^~~~~~
/usr/include/c++/7/bits/hashtable.h:2134:12: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:2135:12: error: 'size_t' is not a member of 'std'
       std::size_t __prev_bkt = 0;
            ^~~~~~
/usr/include/c++/7/bits/hashtable.h:2135:12: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:2142:9: error: 'size_t' is not a member of 'std'
    std::size_t __bkt = __hash_code_base::_M_bucket_index(__p, __n);
         ^~~~~~
/usr/include/c++/7/bits/hashtable.h:2142:9: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:2144:20: error: '__prev_bkt' was not declared in this scope
    if (__prev_p && __prev_bkt == __bkt)
                    ^~~~~~~~~~
/usr/include/c++/7/bits/hashtable.h:2144:20: note: suggested alternative: '__prev_p'
    if (__prev_p && __prev_bkt == __bkt)
                    ^~~~~~~~~~
                    __prev_p
/usr/include/c++/7/bits/hashtable.h:2144:34: error: '__bkt' was not declared in this scope
    if (__prev_p && __prev_bkt == __bkt)
                                  ^~~~~
/usr/include/c++/7/bits/hashtable.h:2144:34: note: suggested alternative: '__cbrt'
    if (__prev_p && __prev_bkt == __bkt)
                                  ^~~~~
                                  __cbrt
/usr/include/c++/7/bits/hashtable.h:2167:14: error: 'size_t' is not a member of 'std'
         std::size_t __next_bkt
              ^~~~~~
/usr/include/c++/7/bits/hashtable.h:2167:14: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:2170:13: error: '__next_bkt' was not declared in this scope
         if (__next_bkt != __prev_bkt)
             ^~~~~~~~~~
/usr/include/c++/7/bits/hashtable.h:2170:13: note: suggested alternative: '__nextupl'
         if (__next_bkt != __prev_bkt)
             ^~~~~~~~~~
             __nextupl
/usr/include/c++/7/bits/hashtable.h:2182:21: error: '__bbegin_bkt' was not declared in this scope
       __new_buckets[__bbegin_bkt] = __p;
                     ^~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable.h:2182:21: note: suggested alternative: '_M_begin'
       __new_buckets[__bbegin_bkt] = __p;
                     ^~~~~~~~~~~~
                     _M_begin
/usr/include/c++/7/bits/hashtable.h:2183:5: error: '__bbegin_bkt' was not declared in this scope
     __bbegin_bkt = __bkt;
     ^~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable.h:2183:5: note: suggested alternative: '_M_begin'
     __bbegin_bkt = __bkt;
     ^~~~~~~~~~~~
     _M_begin
/usr/include/c++/7/bits/hashtable.h:2192:4: error: '__prev_bkt' was not declared in this scope
    __prev_bkt = __bkt;
    ^~~~~~~~~~
/usr/include/c++/7/bits/hashtable.h:2192:4: note: suggested alternative: '__prev_p'
    __prev_bkt = __bkt;
    ^~~~~~~~~~
    __prev_p
/usr/include/c++/7/bits/hashtable.h:2192:17: error: '__bkt' was not declared in this scope
    __prev_bkt = __bkt;
                 ^~~~~
/usr/include/c++/7/bits/hashtable.h:2192:17: note: suggested alternative: '__cbrt'
    __prev_bkt = __bkt;
                 ^~~~~
                 __cbrt
/usr/include/c++/7/bits/hashtable.h:2198:9: error: 'size_t' is not a member of 'std'
    std::size_t __next_bkt
         ^~~~~~
/usr/include/c++/7/bits/hashtable.h:2198:9: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:23: note:   'size_t'
 typedef __SIZE_TYPE__ size_t;
                       ^~~~~~
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h:2200:8: error: '__next_bkt' was not declared in this scope
    if (__next_bkt != __prev_bkt)
        ^~~~~~~~~~
/usr/include/c++/7/bits/hashtable.h:2200:8: note: suggested alternative: '__nextupl'
    if (__next_bkt != __prev_bkt)
        ^~~~~~~~~~
        __nextupl
/usr/include/c++/7/bits/hashtable.h:2200:22: error: '__prev_bkt' was not declared in this scope
    if (__next_bkt != __prev_bkt)
                      ^~~~~~~~~~
/usr/include/c++/7/bits/hashtable.h:2200:22: note: suggested alternative: '__prev_p'
    if (__next_bkt != __prev_bkt)
                      ^~~~~~~~~~
                      __prev_p
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of 'struct std::__detail::_Hashtable_base<unsigned int, std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >':
/usr/include/c++/7/bits/hashtable.h:173:11:   required from 'class std::_Hashtable<unsigned int, std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, std::allocator<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> > >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >'
/usr/include/c++/7/bits/unordered_map.h:104:18:   required from 'class std::unordered_map<unsigned int, llvm::SmallVector<long unsigned int, 4> >'
/llvm/include/llvm/Support/TrigramIndex.h:64:65:   required from here
/usr/include/c++/7/bits/hashtable_policy.h:1774:63: error: no type named '__hash_code' in 'struct std::__detail::_Hash_code_base<unsigned int, std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, std::__detail::_Select1st, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>'
     using __hash_code = typename __hash_code_base::__hash_code;
                                                               ^
/usr/include/c++/7/bits/hashtable_policy.h:1802:40: error: no type named '__hash_code' in 'struct std::__detail::_Hash_code_base<unsigned int, std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, std::__detail::_Select1st, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>'
      __hash_code, __hash_cached::value>;
                                        ^
/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of 'struct std::__detail::_Insert_base<unsigned int, std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, std::allocator<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> > >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >':
/usr/include/c++/7/bits/hashtable_policy.h:964:12:   required from 'struct std::__detail::_Insert<unsigned int, std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, std::allocator<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> > >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, false>'
/usr/include/c++/7/bits/hashtable.h:173:11:   required from 'class std::_Hashtable<unsigned int, std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, std::allocator<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> > >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >'
/usr/include/c++/7/bits/unordered_map.h:104:18:   required from 'class std::unordered_map<unsigned int, llvm::SmallVector<long unsigned int, 4> >'
/llvm/include/llvm/Support/TrigramIndex.h:64:65:   required from here
/usr/include/c++/7/bits/hashtable_policy.h:820:61: error: no type named 'size_type' in 'struct std::__detail::_Hashtable_base<unsigned int, std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >'
       using size_type = typename __hashtable_base::size_type;
                                                             ^
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h: In instantiation of 'class std::_Hashtable<unsigned int, std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, std::allocator<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> > >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >':
/usr/include/c++/7/bits/unordered_map.h:104:18:   required from 'class std::unordered_map<unsigned int, llvm::SmallVector<long unsigned int, 4> >'
/llvm/include/llvm/Support/TrigramIndex.h:64:65:   required from here
/usr/include/c++/7/bits/hashtable.h:218:60: error: no type named '_State' in 'using __rehash_type = struct std::__detail::_Prime_rehash_policy {aka struct std::__detail::_Prime_rehash_policy}'
       using __rehash_state = typename __rehash_type::_State;
                                                            ^
/usr/include/c++/7/bits/hashtable.h: In instantiation of 'struct std::_Hashtable<unsigned int, std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, std::allocator<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> > >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::__hash_code_base_access':
/usr/include/c++/7/bits/hashtable.h:269:10:   required from 'class std::_Hashtable<unsigned int, std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, std::allocator<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> > >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >'
/usr/include/c++/7/bits/unordered_map.h:104:18:   required from 'class std::unordered_map<unsigned int, llvm::SmallVector<long unsigned int, 4> >'
/llvm/include/llvm/Support/TrigramIndex.h:64:65:   required from here
/usr/include/c++/7/bits/hashtable.h:264:33: error: no members matching 'std::_Hashtable<unsigned int, std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, std::allocator<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> > >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::__hash_code_base {aka std::__detail::_Hash_code_base<unsigned int, std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, std::__detail::_Select1st, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>}::_M_bucket_index' in 'using __hash_code_base = using __hash_code_base = struct std::__detail::_Hash_code_base<unsigned int, std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, std::__detail::_Select1st, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false> {aka struct std::__detail::_Hash_code_base<unsigned int, std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, std::__detail::_Select1st, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>}'
       { using __hash_code_base::_M_bucket_index; };
                                 ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable.h: In instantiation of 'class std::_Hashtable<unsigned int, std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, std::allocator<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> > >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >':
/usr/include/c++/7/bits/unordered_map.h:104:18:   required from 'class std::unordered_map<unsigned int, llvm::SmallVector<long unsigned int, 4> >'
/llvm/include/llvm/Support/TrigramIndex.h:64:65:   required from here
/usr/include/c++/7/bits/hashtable.h:269:10: error: 'const struct std::_Hashtable<unsigned int, std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, std::allocator<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> > >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::__hash_code_base_access' has no member named '_M_bucket_index'
       static_assert(noexcept(declval<const __hash_code_base_access&>()
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         ._M_bucket_index((const __node_type*)nullptr,
         ~^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable.h:304:61: error: no type named 'size_type' in 'struct std::__detail::_Hashtable_base<unsigned int, std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >'
       using size_type = typename __hashtable_base::size_type;
                                                             ^
/usr/include/c++/7/bits/hashtable.h:305:73: error: no type named 'difference_type' in 'struct std::__detail::_Hashtable_base<unsigned int, std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >'
       using difference_type = typename __hashtable_base::difference_type;
                                                                         ^
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<unsigned int, llvm::SmallVector<long unsigned int, 4> >':
/llvm/include/llvm/Support/TrigramIndex.h:64:65:   required from here
/usr/include/c++/7/bits/unordered_map.h:112:48: error: no type named 'mapped_type' in 'class std::_Hashtable<unsigned int, std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, std::allocator<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> > >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
In file included from /llvm/include/llvm/Support/SpecialCaseList.h:57:0,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/TrigramIndex.h: At global scope:
/llvm/include/llvm/Support/TrigramIndex.h:64:65: error: could not convert '{256}' from '<brace-enclosed initializer list>' to 'std::unordered_map<unsigned int, llvm::SmallVector<long unsigned int, 4> >'
   std::unordered_map<unsigned, SmallVector<size_t, 4>> Index{256};
                                                                 ^
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::pair<std::unique_ptr<llvm::Regex>, unsigned int> > >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<std::pair<std::unique_ptr<llvm::Regex>, unsigned int>, std::allocator<std::pair<std::unique_ptr<llvm::Regex>, unsigned int> > >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<std::pair<std::unique_ptr<llvm::Regex>, unsigned int> >'
/llvm/include/llvm/Support/SpecialCaseList.h:127:62:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::pair<std::unique_ptr<llvm::Regex>, unsigned int> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::pair<std::unique_ptr<llvm::Regex>, unsigned int> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::pair<std::unique_ptr<llvm::Regex>, unsigned int> > >::_Base_type {aka std::allocator_traits<std::allocator<std::pair<std::unique_ptr<llvm::Regex>, unsigned int> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::pair<std::unique_ptr<llvm::Regex>, unsigned int> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::pair<std::unique_ptr<llvm::Regex>, unsigned int> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<llvm::SpecialCaseList::Section> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<llvm::SpecialCaseList::Section, std::allocator<llvm::SpecialCaseList::Section> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<llvm::SpecialCaseList::Section>'
/llvm/include/llvm/Support/SpecialCaseList.h:139:24:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<llvm::SpecialCaseList::Section> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<llvm::SpecialCaseList::Section> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<llvm::SpecialCaseList::Section> >::_Base_type {aka std::allocator_traits<std::allocator<llvm::SpecialCaseList::Section> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<llvm::SpecialCaseList::Section> >::_Base_type {aka struct std::allocator_traits<std::allocator<llvm::SpecialCaseList::Section> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::SanitizerSpecialCaseList::SanitizerSection> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::SanitizerSpecialCaseList::SanitizerSection, std::allocator<clang::SanitizerSpecialCaseList::SanitizerSection> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::SanitizerSpecialCaseList::SanitizerSection>'
/llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:48:33:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::SanitizerSpecialCaseList::SanitizerSection> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::SanitizerSpecialCaseList::SanitizerSection> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::SanitizerSpecialCaseList::SanitizerSection> >::_Base_type {aka std::allocator_traits<std::allocator<clang::SanitizerSpecialCaseList::SanitizerSection> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::SanitizerSpecialCaseList::SanitizerSection> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::SanitizerSpecialCaseList::SanitizerSection> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h: In member function 'bool clang::OpenCLOptions::isKnown(llvm::StringRef) const':
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:35:29: error: no match for 'operator!=' (operand types are 'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' and 'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}')
     return OptMap.find(Ext) != OptMap.end();
            ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
In file included from /llvm/tools/clang/include/clang/AST/ASTContext.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/CanonicalType.h:207:13: note: candidate: template<class T, class U> bool clang::operator!=(clang::CanQual<T>, clang::CanQual<U>)
 inline bool operator!=(CanQual<T> x, CanQual<U> y) {
             ^~~~~~~~
/llvm/tools/clang/include/clang/AST/CanonicalType.h:207:13: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:35:43: note:   'llvm::StringMapConstIterator<clang::OpenCLOptions::Info>' is not derived from 'clang::CanQual<T>'
     return OptMap.find(Ext) != OptMap.end();
                                           ^
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/SourceLocation.h:187:13: note: candidate: bool clang::operator!=(const clang::SourceLocation&, const clang::SourceLocation&)
 inline bool operator!=(const SourceLocation &LHS, const SourceLocation &RHS) {
             ^~~~~~~~
/llvm/tools/clang/include/clang/Basic/SourceLocation.h:187:13: note:   no known conversion for argument 1 from 'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' to 'const clang::SourceLocation&'
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h:701:6: note: candidate: template<class DerivedT, class KeyT, class ValueT, class KeyInfoT, class BucketT> bool llvm::operator!=(const llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>&, const llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>&)
 bool operator!=(
      ^~~~~~~~
/llvm/include/llvm/ADT/DenseMap.h:701:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:35:43: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>'
     return OptMap.find(Ext) != OptMap.end();
                                           ^
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:243:6: note: candidate: template<class T> bool llvm::operator!=(const llvm::IntrusiveRefCntPtr<T>&, int)
 bool operator!=(const IntrusiveRefCntPtr<T> &A, std::nullptr_t B) {
      ^~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:243:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:35:43: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::IntrusiveRefCntPtr<T>'
     return OptMap.find(Ext) != OptMap.end();
                                           ^
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:223:13: note: candidate: template<class T, class U> bool llvm::operator!=(T*, const llvm::IntrusiveRefCntPtr<U>&)
 inline bool operator!=(T *A, const IntrusiveRefCntPtr<U> &B) {
             ^~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:223:13: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:35:43: note:   mismatched types 'T*' and 'llvm::StringMapConstIterator<clang::OpenCLOptions::Info>'
     return OptMap.find(Ext) != OptMap.end();
                                           ^
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:213:13: note: candidate: template<class T, class U> bool llvm::operator!=(const llvm::IntrusiveRefCntPtr<T>&, U*)
 inline bool operator!=(const IntrusiveRefCntPtr<T> &A, U *B) {
             ^~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:213:13: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:35:43: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::IntrusiveRefCntPtr<T>'
     return OptMap.find(Ext) != OptMap.end();
                                           ^
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:202:13: note: candidate: template<class T, class U> bool llvm::operator!=(const llvm::IntrusiveRefCntPtr<T>&, const llvm::IntrusiveRefCntPtr<U>&)
 inline bool operator!=(const IntrusiveRefCntPtr<T> &A,
             ^~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:202:13: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:35:43: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::IntrusiveRefCntPtr<T>'
     return OptMap.find(Ext) != OptMap.end();
                                           ^
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:21:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/PointerUnion.h:198:6: note: candidate: template<class PT1, class PT2> bool llvm::operator!=(llvm::PointerUnion<PT1, PT2>, llvm::PointerUnion<PT1, PT2>)
 bool operator!=(PointerUnion<PT1, PT2> lhs, PointerUnion<PT1, PT2> rhs) {
      ^~~~~~~~
/llvm/include/llvm/ADT/PointerUnion.h:198:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:35:43: note:   'llvm::StringMapConstIterator<clang::OpenCLOptions::Info>' is not derived from 'llvm::PointerUnion<PT1, PT2>'
     return OptMap.find(Ext) != OptMap.end();
                                           ^
In file included from /llvm/include/llvm/ADT/APFloat.h:20:0,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/ArrayRef.h:522:15: note: candidate: template<class T> bool llvm::operator!=(llvm::ArrayRef<T>, llvm::ArrayRef<T>)
   inline bool operator!=(ArrayRef<T> LHS, ArrayRef<T> RHS) {
               ^~~~~~~~
/llvm/include/llvm/ADT/ArrayRef.h:522:15: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:35:43: note:   'llvm::StringMapConstIterator<clang::OpenCLOptions::Info>' is not derived from 'llvm::ArrayRef<T>'
     return OptMap.find(Ext) != OptMap.end();
                                           ^
In file included from /llvm/include/llvm/ADT/SmallString.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringRef.h:870:15: note: candidate: bool llvm::operator!=(llvm::StringRef, llvm::StringRef)
   inline bool operator!=(StringRef LHS, StringRef RHS) { return !(LHS == RHS); }
               ^~~~~~~~
/llvm/include/llvm/ADT/StringRef.h:870:15: note:   no known conversion for argument 1 from 'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' to 'llvm::StringRef'
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:286:28: note: candidate: template<class T> bool llvm::operator!=(const T&, const llvm::Optional<T>&)
 template <typename T> bool operator!=(const T &X, const Optional<T> &Y) {
                            ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:286:28: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:35:43: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
     return OptMap.find(Ext) != OptMap.end();
                                           ^
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:282:28: note: candidate: template<class T> bool llvm::operator!=(const llvm::Optional<T>&, const T&)
 template <typename T> bool operator!=(const Optional<T> &X, const T &Y) {
                            ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:282:28: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:35:43: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
     return OptMap.find(Ext) != OptMap.end();
                                           ^
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:238:6: note: candidate: template<class T> bool llvm::operator!=(llvm::NoneType, const llvm::Optional<T>&)
 bool operator!=(NoneType, const Optional<T> &X) {
      ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:238:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:35:43: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
     return OptMap.find(Ext) != OptMap.end();
                                           ^
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:233:6: note: candidate: template<class T> bool llvm::operator!=(const llvm::Optional<T>&, llvm::NoneType)
 bool operator!=(const Optional<T> &X, NoneType) {
      ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:233:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:35:43: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
     return OptMap.find(Ext) != OptMap.end();
                                           ^
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:196:6: note: candidate: template<class T, class U> bool llvm::operator!=(const llvm::Optional<T>&, const llvm::Optional<U>&)
 bool operator!=(const Optional<T> &X, const Optional<U> &Y) {
      ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:196:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:35:43: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
     return OptMap.find(Ext) != OptMap.end();
                                           ^
In file included from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APSInt.h:322:13: note: candidate: bool llvm::operator!=(int64_t, const llvm::APSInt&)
 inline bool operator!=(int64_t V1, const APSInt &V2) { return V2 != V1; }
             ^~~~~~~~
/llvm/include/llvm/ADT/APSInt.h:322:13: note:   no known conversion for argument 1 from 'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' to 'int64_t {aka long int}'
In file included from /llvm/include/llvm/ADT/APSInt.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APInt.h:1968:13: note: candidate: bool llvm::operator!=(uint64_t, const llvm::APInt&)
 inline bool operator!=(uint64_t V1, const APInt &V2) { return V2 != V1; }
             ^~~~~~~~
/llvm/include/llvm/ADT/APInt.h:1968:13: note:   no known conversion for argument 1 from 'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' to 'uint64_t {aka long unsigned int}'
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h: In member function 'bool clang::OpenCLOptions::isEnabled(llvm::StringRef) const':
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:39:28: error: base operand of '->' has non-pointer type 'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}'
     return OptMap.find(Ext)->second.Enabled;
                            ^~
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h: In member function 'bool clang::OpenCLOptions::isSupported(llvm::StringRef, unsigned int) const':
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:45:30: error: base operand of '->' has non-pointer type 'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}'
     auto I = OptMap.find(Ext)->getValue();
                              ^~
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h: In member function 'bool clang::OpenCLOptions::isSupportedCore(llvm::StringRef, unsigned int) const':
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:52:30: error: base operand of '->' has non-pointer type 'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}'
     auto I = OptMap.find(Ext)->getValue();
                              ^~
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h: In member function 'bool clang::OpenCLOptions::isSupportedExtension(llvm::StringRef, unsigned int) const':
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:60:30: error: base operand of '->' has non-pointer type 'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}'
     auto I = OptMap.find(Ext)->getValue();
                              ^~
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h: In member function 'void clang::OpenCLOptions::addSupport(const clang::OpenCLOptions&)':
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:102:23: error: no match for 'operator!=' (operand types are 'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' and 'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}')
     for (auto &I:Opts.OptMap)
                       ^~~~~~
In file included from /llvm/tools/clang/include/clang/AST/ASTContext.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/CanonicalType.h:207:13: note: candidate: template<class T, class U> bool clang::operator!=(clang::CanQual<T>, clang::CanQual<U>)
 inline bool operator!=(CanQual<T> x, CanQual<U> y) {
             ^~~~~~~~
/llvm/tools/clang/include/clang/AST/CanonicalType.h:207:13: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:102:23: note:   'llvm::StringMapConstIterator<clang::OpenCLOptions::Info>' is not derived from 'clang::CanQual<T>'
     for (auto &I:Opts.OptMap)
                       ^~~~~~
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/SourceLocation.h:187:13: note: candidate: bool clang::operator!=(const clang::SourceLocation&, const clang::SourceLocation&)
 inline bool operator!=(const SourceLocation &LHS, const SourceLocation &RHS) {
             ^~~~~~~~
/llvm/tools/clang/include/clang/Basic/SourceLocation.h:187:13: note:   no known conversion for argument 1 from 'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' to 'const clang::SourceLocation&'
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h:701:6: note: candidate: template<class DerivedT, class KeyT, class ValueT, class KeyInfoT, class BucketT> bool llvm::operator!=(const llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>&, const llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>&)
 bool operator!=(
      ^~~~~~~~
/llvm/include/llvm/ADT/DenseMap.h:701:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:102:23: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>'
     for (auto &I:Opts.OptMap)
                       ^~~~~~
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:243:6: note: candidate: template<class T> bool llvm::operator!=(const llvm::IntrusiveRefCntPtr<T>&, int)
 bool operator!=(const IntrusiveRefCntPtr<T> &A, std::nullptr_t B) {
      ^~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:243:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:102:23: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::IntrusiveRefCntPtr<T>'
     for (auto &I:Opts.OptMap)
                       ^~~~~~
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:223:13: note: candidate: template<class T, class U> bool llvm::operator!=(T*, const llvm::IntrusiveRefCntPtr<U>&)
 inline bool operator!=(T *A, const IntrusiveRefCntPtr<U> &B) {
             ^~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:223:13: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:102:23: note:   mismatched types 'T*' and 'llvm::StringMapConstIterator<clang::OpenCLOptions::Info>'
     for (auto &I:Opts.OptMap)
                       ^~~~~~
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:213:13: note: candidate: template<class T, class U> bool llvm::operator!=(const llvm::IntrusiveRefCntPtr<T>&, U*)
 inline bool operator!=(const IntrusiveRefCntPtr<T> &A, U *B) {
             ^~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:213:13: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:102:23: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::IntrusiveRefCntPtr<T>'
     for (auto &I:Opts.OptMap)
                       ^~~~~~
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:202:13: note: candidate: template<class T, class U> bool llvm::operator!=(const llvm::IntrusiveRefCntPtr<T>&, const llvm::IntrusiveRefCntPtr<U>&)
 inline bool operator!=(const IntrusiveRefCntPtr<T> &A,
             ^~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:202:13: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:102:23: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::IntrusiveRefCntPtr<T>'
     for (auto &I:Opts.OptMap)
                       ^~~~~~
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:21:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/PointerUnion.h:198:6: note: candidate: template<class PT1, class PT2> bool llvm::operator!=(llvm::PointerUnion<PT1, PT2>, llvm::PointerUnion<PT1, PT2>)
 bool operator!=(PointerUnion<PT1, PT2> lhs, PointerUnion<PT1, PT2> rhs) {
      ^~~~~~~~
/llvm/include/llvm/ADT/PointerUnion.h:198:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:102:23: note:   'llvm::StringMapConstIterator<clang::OpenCLOptions::Info>' is not derived from 'llvm::PointerUnion<PT1, PT2>'
     for (auto &I:Opts.OptMap)
                       ^~~~~~
In file included from /llvm/include/llvm/ADT/APFloat.h:20:0,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/ArrayRef.h:522:15: note: candidate: template<class T> bool llvm::operator!=(llvm::ArrayRef<T>, llvm::ArrayRef<T>)
   inline bool operator!=(ArrayRef<T> LHS, ArrayRef<T> RHS) {
               ^~~~~~~~
/llvm/include/llvm/ADT/ArrayRef.h:522:15: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:102:23: note:   'llvm::StringMapConstIterator<clang::OpenCLOptions::Info>' is not derived from 'llvm::ArrayRef<T>'
     for (auto &I:Opts.OptMap)
                       ^~~~~~
In file included from /llvm/include/llvm/ADT/SmallString.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringRef.h:870:15: note: candidate: bool llvm::operator!=(llvm::StringRef, llvm::StringRef)
   inline bool operator!=(StringRef LHS, StringRef RHS) { return !(LHS == RHS); }
               ^~~~~~~~
/llvm/include/llvm/ADT/StringRef.h:870:15: note:   no known conversion for argument 1 from 'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' to 'llvm::StringRef'
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:286:28: note: candidate: template<class T> bool llvm::operator!=(const T&, const llvm::Optional<T>&)
 template <typename T> bool operator!=(const T &X, const Optional<T> &Y) {
                            ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:286:28: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:102:23: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
     for (auto &I:Opts.OptMap)
                       ^~~~~~
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:282:28: note: candidate: template<class T> bool llvm::operator!=(const llvm::Optional<T>&, const T&)
 template <typename T> bool operator!=(const Optional<T> &X, const T &Y) {
                            ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:282:28: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:102:23: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
     for (auto &I:Opts.OptMap)
                       ^~~~~~
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:238:6: note: candidate: template<class T> bool llvm::operator!=(llvm::NoneType, const llvm::Optional<T>&)
 bool operator!=(NoneType, const Optional<T> &X) {
      ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:238:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:102:23: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
     for (auto &I:Opts.OptMap)
                       ^~~~~~
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:233:6: note: candidate: template<class T> bool llvm::operator!=(const llvm::Optional<T>&, llvm::NoneType)
 bool operator!=(const Optional<T> &X, NoneType) {
      ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:233:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:102:23: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
     for (auto &I:Opts.OptMap)
                       ^~~~~~
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:196:6: note: candidate: template<class T, class U> bool llvm::operator!=(const llvm::Optional<T>&, const llvm::Optional<U>&)
 bool operator!=(const Optional<T> &X, const Optional<U> &Y) {
      ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:196:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:102:23: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
     for (auto &I:Opts.OptMap)
                       ^~~~~~
In file included from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APSInt.h:322:13: note: candidate: bool llvm::operator!=(int64_t, const llvm::APSInt&)
 inline bool operator!=(int64_t V1, const APSInt &V2) { return V2 != V1; }
             ^~~~~~~~
/llvm/include/llvm/ADT/APSInt.h:322:13: note:   no known conversion for argument 1 from 'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' to 'int64_t {aka long int}'
In file included from /llvm/include/llvm/ADT/APSInt.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APInt.h:1968:13: note: candidate: bool llvm::operator!=(uint64_t, const llvm::APInt&)
 inline bool operator!=(uint64_t V1, const APInt &V2) { return V2 != V1; }
             ^~~~~~~~
/llvm/include/llvm/ADT/APInt.h:1968:13: note:   no known conversion for argument 1 from 'llvm::StringMap<clang::OpenCLOptions::Info>::const_iterator {aka llvm::StringMapConstIterator<clang::OpenCLOptions::Info>}' to 'uint64_t {aka long unsigned int}'
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h: In member function 'void clang::OpenCLOptions::supportAll(bool)':
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:114:30: error: no match for 'operator!=' (operand types are 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' and 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}')
          E = OptMap.end(); I != E; ++I)
                            ~~^~~~
In file included from /llvm/tools/clang/include/clang/AST/ASTContext.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/CanonicalType.h:207:13: note: candidate: template<class T, class U> bool clang::operator!=(clang::CanQual<T>, clang::CanQual<U>)
 inline bool operator!=(CanQual<T> x, CanQual<U> y) {
             ^~~~~~~~
/llvm/tools/clang/include/clang/AST/CanonicalType.h:207:13: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:114:33: note:   'llvm::StringMapIterator<clang::OpenCLOptions::Info>' is not derived from 'clang::CanQual<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/SourceLocation.h:187:13: note: candidate: bool clang::operator!=(const clang::SourceLocation&, const clang::SourceLocation&)
 inline bool operator!=(const SourceLocation &LHS, const SourceLocation &RHS) {
             ^~~~~~~~
/llvm/tools/clang/include/clang/Basic/SourceLocation.h:187:13: note:   no known conversion for argument 1 from 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' to 'const clang::SourceLocation&'
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h:701:6: note: candidate: template<class DerivedT, class KeyT, class ValueT, class KeyInfoT, class BucketT> bool llvm::operator!=(const llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>&, const llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>&)
 bool operator!=(
      ^~~~~~~~
/llvm/include/llvm/ADT/DenseMap.h:701:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:114:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:243:6: note: candidate: template<class T> bool llvm::operator!=(const llvm::IntrusiveRefCntPtr<T>&, int)
 bool operator!=(const IntrusiveRefCntPtr<T> &A, std::nullptr_t B) {
      ^~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:243:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:114:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::IntrusiveRefCntPtr<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:223:13: note: candidate: template<class T, class U> bool llvm::operator!=(T*, const llvm::IntrusiveRefCntPtr<U>&)
 inline bool operator!=(T *A, const IntrusiveRefCntPtr<U> &B) {
             ^~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:223:13: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:114:33: note:   mismatched types 'T*' and 'llvm::StringMapIterator<clang::OpenCLOptions::Info>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:213:13: note: candidate: template<class T, class U> bool llvm::operator!=(const llvm::IntrusiveRefCntPtr<T>&, U*)
 inline bool operator!=(const IntrusiveRefCntPtr<T> &A, U *B) {
             ^~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:213:13: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:114:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::IntrusiveRefCntPtr<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:202:13: note: candidate: template<class T, class U> bool llvm::operator!=(const llvm::IntrusiveRefCntPtr<T>&, const llvm::IntrusiveRefCntPtr<U>&)
 inline bool operator!=(const IntrusiveRefCntPtr<T> &A,
             ^~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:202:13: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:114:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::IntrusiveRefCntPtr<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:21:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/PointerUnion.h:198:6: note: candidate: template<class PT1, class PT2> bool llvm::operator!=(llvm::PointerUnion<PT1, PT2>, llvm::PointerUnion<PT1, PT2>)
 bool operator!=(PointerUnion<PT1, PT2> lhs, PointerUnion<PT1, PT2> rhs) {
      ^~~~~~~~
/llvm/include/llvm/ADT/PointerUnion.h:198:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:114:33: note:   'llvm::StringMapIterator<clang::OpenCLOptions::Info>' is not derived from 'llvm::PointerUnion<PT1, PT2>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/include/llvm/ADT/APFloat.h:20:0,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/ArrayRef.h:522:15: note: candidate: template<class T> bool llvm::operator!=(llvm::ArrayRef<T>, llvm::ArrayRef<T>)
   inline bool operator!=(ArrayRef<T> LHS, ArrayRef<T> RHS) {
               ^~~~~~~~
/llvm/include/llvm/ADT/ArrayRef.h:522:15: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:114:33: note:   'llvm::StringMapIterator<clang::OpenCLOptions::Info>' is not derived from 'llvm::ArrayRef<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/include/llvm/ADT/SmallString.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringRef.h:870:15: note: candidate: bool llvm::operator!=(llvm::StringRef, llvm::StringRef)
   inline bool operator!=(StringRef LHS, StringRef RHS) { return !(LHS == RHS); }
               ^~~~~~~~
/llvm/include/llvm/ADT/StringRef.h:870:15: note:   no known conversion for argument 1 from 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' to 'llvm::StringRef'
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:286:28: note: candidate: template<class T> bool llvm::operator!=(const T&, const llvm::Optional<T>&)
 template <typename T> bool operator!=(const T &X, const Optional<T> &Y) {
                            ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:286:28: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:114:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:282:28: note: candidate: template<class T> bool llvm::operator!=(const llvm::Optional<T>&, const T&)
 template <typename T> bool operator!=(const Optional<T> &X, const T &Y) {
                            ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:282:28: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:114:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:238:6: note: candidate: template<class T> bool llvm::operator!=(llvm::NoneType, const llvm::Optional<T>&)
 bool operator!=(NoneType, const Optional<T> &X) {
      ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:238:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:114:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:233:6: note: candidate: template<class T> bool llvm::operator!=(const llvm::Optional<T>&, llvm::NoneType)
 bool operator!=(const Optional<T> &X, NoneType) {
      ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:233:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:114:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:196:6: note: candidate: template<class T, class U> bool llvm::operator!=(const llvm::Optional<T>&, const llvm::Optional<U>&)
 bool operator!=(const Optional<T> &X, const Optional<U> &Y) {
      ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:196:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:114:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APSInt.h:322:13: note: candidate: bool llvm::operator!=(int64_t, const llvm::APSInt&)
 inline bool operator!=(int64_t V1, const APSInt &V2) { return V2 != V1; }
             ^~~~~~~~
/llvm/include/llvm/ADT/APSInt.h:322:13: note:   no known conversion for argument 1 from 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' to 'int64_t {aka long int}'
In file included from /llvm/include/llvm/ADT/APSInt.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APInt.h:1968:13: note: candidate: bool llvm::operator!=(uint64_t, const llvm::APInt&)
 inline bool operator!=(uint64_t V1, const APInt &V2) { return V2 != V1; }
             ^~~~~~~~
/llvm/include/llvm/ADT/APInt.h:1968:13: note:   no known conversion for argument 1 from 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' to 'uint64_t {aka long unsigned int}'
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:115:8: error: base operand of '->' has non-pointer type 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}'
       I->second.Supported = On;
        ^~
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h: In member function 'void clang::OpenCLOptions::disableAll()':
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:120:30: error: no match for 'operator!=' (operand types are 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' and 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}')
          E = OptMap.end(); I != E; ++I)
                            ~~^~~~
In file included from /llvm/tools/clang/include/clang/AST/ASTContext.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/CanonicalType.h:207:13: note: candidate: template<class T, class U> bool clang::operator!=(clang::CanQual<T>, clang::CanQual<U>)
 inline bool operator!=(CanQual<T> x, CanQual<U> y) {
             ^~~~~~~~
/llvm/tools/clang/include/clang/AST/CanonicalType.h:207:13: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:120:33: note:   'llvm::StringMapIterator<clang::OpenCLOptions::Info>' is not derived from 'clang::CanQual<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/SourceLocation.h:187:13: note: candidate: bool clang::operator!=(const clang::SourceLocation&, const clang::SourceLocation&)
 inline bool operator!=(const SourceLocation &LHS, const SourceLocation &RHS) {
             ^~~~~~~~
/llvm/tools/clang/include/clang/Basic/SourceLocation.h:187:13: note:   no known conversion for argument 1 from 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' to 'const clang::SourceLocation&'
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h:701:6: note: candidate: template<class DerivedT, class KeyT, class ValueT, class KeyInfoT, class BucketT> bool llvm::operator!=(const llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>&, const llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>&)
 bool operator!=(
      ^~~~~~~~
/llvm/include/llvm/ADT/DenseMap.h:701:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:120:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:243:6: note: candidate: template<class T> bool llvm::operator!=(const llvm::IntrusiveRefCntPtr<T>&, int)
 bool operator!=(const IntrusiveRefCntPtr<T> &A, std::nullptr_t B) {
      ^~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:243:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:120:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::IntrusiveRefCntPtr<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:223:13: note: candidate: template<class T, class U> bool llvm::operator!=(T*, const llvm::IntrusiveRefCntPtr<U>&)
 inline bool operator!=(T *A, const IntrusiveRefCntPtr<U> &B) {
             ^~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:223:13: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:120:33: note:   mismatched types 'T*' and 'llvm::StringMapIterator<clang::OpenCLOptions::Info>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:213:13: note: candidate: template<class T, class U> bool llvm::operator!=(const llvm::IntrusiveRefCntPtr<T>&, U*)
 inline bool operator!=(const IntrusiveRefCntPtr<T> &A, U *B) {
             ^~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:213:13: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:120:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::IntrusiveRefCntPtr<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:202:13: note: candidate: template<class T, class U> bool llvm::operator!=(const llvm::IntrusiveRefCntPtr<T>&, const llvm::IntrusiveRefCntPtr<U>&)
 inline bool operator!=(const IntrusiveRefCntPtr<T> &A,
             ^~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:202:13: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:120:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::IntrusiveRefCntPtr<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:21:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/PointerUnion.h:198:6: note: candidate: template<class PT1, class PT2> bool llvm::operator!=(llvm::PointerUnion<PT1, PT2>, llvm::PointerUnion<PT1, PT2>)
 bool operator!=(PointerUnion<PT1, PT2> lhs, PointerUnion<PT1, PT2> rhs) {
      ^~~~~~~~
/llvm/include/llvm/ADT/PointerUnion.h:198:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:120:33: note:   'llvm::StringMapIterator<clang::OpenCLOptions::Info>' is not derived from 'llvm::PointerUnion<PT1, PT2>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/include/llvm/ADT/APFloat.h:20:0,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/ArrayRef.h:522:15: note: candidate: template<class T> bool llvm::operator!=(llvm::ArrayRef<T>, llvm::ArrayRef<T>)
   inline bool operator!=(ArrayRef<T> LHS, ArrayRef<T> RHS) {
               ^~~~~~~~
/llvm/include/llvm/ADT/ArrayRef.h:522:15: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:120:33: note:   'llvm::StringMapIterator<clang::OpenCLOptions::Info>' is not derived from 'llvm::ArrayRef<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/include/llvm/ADT/SmallString.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringRef.h:870:15: note: candidate: bool llvm::operator!=(llvm::StringRef, llvm::StringRef)
   inline bool operator!=(StringRef LHS, StringRef RHS) { return !(LHS == RHS); }
               ^~~~~~~~
/llvm/include/llvm/ADT/StringRef.h:870:15: note:   no known conversion for argument 1 from 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' to 'llvm::StringRef'
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:286:28: note: candidate: template<class T> bool llvm::operator!=(const T&, const llvm::Optional<T>&)
 template <typename T> bool operator!=(const T &X, const Optional<T> &Y) {
                            ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:286:28: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:120:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:282:28: note: candidate: template<class T> bool llvm::operator!=(const llvm::Optional<T>&, const T&)
 template <typename T> bool operator!=(const Optional<T> &X, const T &Y) {
                            ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:282:28: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:120:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:238:6: note: candidate: template<class T> bool llvm::operator!=(llvm::NoneType, const llvm::Optional<T>&)
 bool operator!=(NoneType, const Optional<T> &X) {
      ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:238:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:120:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:233:6: note: candidate: template<class T> bool llvm::operator!=(const llvm::Optional<T>&, llvm::NoneType)
 bool operator!=(const Optional<T> &X, NoneType) {
      ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:233:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:120:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:196:6: note: candidate: template<class T, class U> bool llvm::operator!=(const llvm::Optional<T>&, const llvm::Optional<U>&)
 bool operator!=(const Optional<T> &X, const Optional<U> &Y) {
      ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:196:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:120:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APSInt.h:322:13: note: candidate: bool llvm::operator!=(int64_t, const llvm::APSInt&)
 inline bool operator!=(int64_t V1, const APSInt &V2) { return V2 != V1; }
             ^~~~~~~~
/llvm/include/llvm/ADT/APSInt.h:322:13: note:   no known conversion for argument 1 from 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' to 'int64_t {aka long int}'
In file included from /llvm/include/llvm/ADT/APSInt.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APInt.h:1968:13: note: candidate: bool llvm::operator!=(uint64_t, const llvm::APInt&)
 inline bool operator!=(uint64_t V1, const APInt &V2) { return V2 != V1; }
             ^~~~~~~~
/llvm/include/llvm/ADT/APInt.h:1968:13: note:   no known conversion for argument 1 from 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' to 'uint64_t {aka long unsigned int}'
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:121:8: error: base operand of '->' has non-pointer type 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}'
       I->second.Enabled = false;
        ^~
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h: In member function 'void clang::OpenCLOptions::enableSupportedCore(unsigned int)':
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:126:30: error: no match for 'operator!=' (operand types are 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' and 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}')
          E = OptMap.end(); I != E; ++I)
                            ~~^~~~
In file included from /llvm/tools/clang/include/clang/AST/ASTContext.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/CanonicalType.h:207:13: note: candidate: template<class T, class U> bool clang::operator!=(clang::CanQual<T>, clang::CanQual<U>)
 inline bool operator!=(CanQual<T> x, CanQual<U> y) {
             ^~~~~~~~
/llvm/tools/clang/include/clang/AST/CanonicalType.h:207:13: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:126:33: note:   'llvm::StringMapIterator<clang::OpenCLOptions::Info>' is not derived from 'clang::CanQual<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/SourceLocation.h:187:13: note: candidate: bool clang::operator!=(const clang::SourceLocation&, const clang::SourceLocation&)
 inline bool operator!=(const SourceLocation &LHS, const SourceLocation &RHS) {
             ^~~~~~~~
/llvm/tools/clang/include/clang/Basic/SourceLocation.h:187:13: note:   no known conversion for argument 1 from 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' to 'const clang::SourceLocation&'
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h:701:6: note: candidate: template<class DerivedT, class KeyT, class ValueT, class KeyInfoT, class BucketT> bool llvm::operator!=(const llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>&, const llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>&)
 bool operator!=(
      ^~~~~~~~
/llvm/include/llvm/ADT/DenseMap.h:701:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:126:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:243:6: note: candidate: template<class T> bool llvm::operator!=(const llvm::IntrusiveRefCntPtr<T>&, int)
 bool operator!=(const IntrusiveRefCntPtr<T> &A, std::nullptr_t B) {
      ^~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:243:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:126:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::IntrusiveRefCntPtr<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:223:13: note: candidate: template<class T, class U> bool llvm::operator!=(T*, const llvm::IntrusiveRefCntPtr<U>&)
 inline bool operator!=(T *A, const IntrusiveRefCntPtr<U> &B) {
             ^~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:223:13: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:126:33: note:   mismatched types 'T*' and 'llvm::StringMapIterator<clang::OpenCLOptions::Info>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:213:13: note: candidate: template<class T, class U> bool llvm::operator!=(const llvm::IntrusiveRefCntPtr<T>&, U*)
 inline bool operator!=(const IntrusiveRefCntPtr<T> &A, U *B) {
             ^~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:213:13: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:126:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::IntrusiveRefCntPtr<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/tools/clang/include/clang/Basic/DiagnosticIDs.h:18:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:17,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:202:13: note: candidate: template<class T, class U> bool llvm::operator!=(const llvm::IntrusiveRefCntPtr<T>&, const llvm::IntrusiveRefCntPtr<U>&)
 inline bool operator!=(const IntrusiveRefCntPtr<T> &A,
             ^~~~~~~~
/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:202:13: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:126:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::IntrusiveRefCntPtr<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:21:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/PointerUnion.h:198:6: note: candidate: template<class PT1, class PT2> bool llvm::operator!=(llvm::PointerUnion<PT1, PT2>, llvm::PointerUnion<PT1, PT2>)
 bool operator!=(PointerUnion<PT1, PT2> lhs, PointerUnion<PT1, PT2> rhs) {
      ^~~~~~~~
/llvm/include/llvm/ADT/PointerUnion.h:198:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:126:33: note:   'llvm::StringMapIterator<clang::OpenCLOptions::Info>' is not derived from 'llvm::PointerUnion<PT1, PT2>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/include/llvm/ADT/APFloat.h:20:0,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/ArrayRef.h:522:15: note: candidate: template<class T> bool llvm::operator!=(llvm::ArrayRef<T>, llvm::ArrayRef<T>)
   inline bool operator!=(ArrayRef<T> LHS, ArrayRef<T> RHS) {
               ^~~~~~~~
/llvm/include/llvm/ADT/ArrayRef.h:522:15: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:126:33: note:   'llvm::StringMapIterator<clang::OpenCLOptions::Info>' is not derived from 'llvm::ArrayRef<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/include/llvm/ADT/SmallString.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringRef.h:870:15: note: candidate: bool llvm::operator!=(llvm::StringRef, llvm::StringRef)
   inline bool operator!=(StringRef LHS, StringRef RHS) { return !(LHS == RHS); }
               ^~~~~~~~
/llvm/include/llvm/ADT/StringRef.h:870:15: note:   no known conversion for argument 1 from 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' to 'llvm::StringRef'
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:286:28: note: candidate: template<class T> bool llvm::operator!=(const T&, const llvm::Optional<T>&)
 template <typename T> bool operator!=(const T &X, const Optional<T> &Y) {
                            ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:286:28: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:126:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:282:28: note: candidate: template<class T> bool llvm::operator!=(const llvm::Optional<T>&, const T&)
 template <typename T> bool operator!=(const Optional<T> &X, const T &Y) {
                            ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:282:28: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:126:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:238:6: note: candidate: template<class T> bool llvm::operator!=(llvm::NoneType, const llvm::Optional<T>&)
 bool operator!=(NoneType, const Optional<T> &X) {
      ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:238:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:126:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:233:6: note: candidate: template<class T> bool llvm::operator!=(const llvm::Optional<T>&, llvm::NoneType)
 bool operator!=(const Optional<T> &X, NoneType) {
      ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:233:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:126:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h:196:6: note: candidate: template<class T, class U> bool llvm::operator!=(const llvm::Optional<T>&, const llvm::Optional<U>&)
 bool operator!=(const Optional<T> &X, const Optional<U> &Y) {
      ^~~~~~~~
/llvm/include/llvm/ADT/Optional.h:196:6: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:126:33: note:   'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' is not derived from 'const llvm::Optional<T>'
          E = OptMap.end(); I != E; ++I)
                                 ^
In file included from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APSInt.h:322:13: note: candidate: bool llvm::operator!=(int64_t, const llvm::APSInt&)
 inline bool operator!=(int64_t V1, const APSInt &V2) { return V2 != V1; }
             ^~~~~~~~
/llvm/include/llvm/ADT/APSInt.h:322:13: note:   no known conversion for argument 1 from 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' to 'int64_t {aka long int}'
In file included from /llvm/include/llvm/ADT/APSInt.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APInt.h:1968:13: note: candidate: bool llvm::operator!=(uint64_t, const llvm::APInt&)
 inline bool operator!=(uint64_t V1, const APInt &V2) { return V2 != V1; }
             ^~~~~~~~
/llvm/include/llvm/ADT/APInt.h:1968:13: note:   no known conversion for argument 1 from 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}' to 'uint64_t {aka long unsigned int}'
In file included from /llvm/tools/clang/include/clang/Basic/TargetOptions.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:21,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:127:28: error: base operand of '->' has non-pointer type 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}'
       if (isSupportedCore(I->getKey(), CLVer))
                            ^~
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:128:10: error: base operand of '->' has non-pointer type 'llvm::StringMap<clang::OpenCLOptions::Info>::iterator {aka llvm::StringMapIterator<clang::OpenCLOptions::Info>}'
         I->second.Enabled = true;
          ^~
In file included from /llvm/include/llvm/ADT/SmallSet.h:17:0,
                 from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:25,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/SmallPtrSet.h: At global scope:
/llvm/include/llvm/ADT/SmallPtrSet.h:274:32: error: 'ptrdiff_t' in namespace 'std' does not name a type
   using difference_type = std::ptrdiff_t;
                                ^~~~~~~~~
In file included from /llvm/tools/clang/include/clang/Basic/TargetInfo.h:25:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:44,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/SmallSet.h:35:63: error: template argument 4 is invalid
                                   std::forward_iterator_tag, T> {
                                                               ^
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<llvm::Type*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<llvm::Type*, std::allocator<llvm::Type*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<llvm::Type*, std::allocator<llvm::Type*> >'
/llvm/include/llvm/IR/Type.h:317:55:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<llvm::Type*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<llvm::Type*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<llvm::Type*> >::_Base_type {aka std::allocator_traits<std::allocator<llvm::Type*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<llvm::Type*> >::_Base_type {aka struct std::allocator_traits<std::allocator<llvm::Type*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::pair<const void*, llvm::Pass*> > >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<std::pair<const void*, llvm::Pass*>, std::allocator<std::pair<const void*, llvm::Pass*> > >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<std::pair<const void*, llvm::Pass*> >'
/llvm/include/llvm/PassAnalysisSupport.h:187:46:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::pair<const void*, llvm::Pass*> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::pair<const void*, llvm::Pass*> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::pair<const void*, llvm::Pass*> > >::_Base_type {aka std::allocator_traits<std::allocator<std::pair<const void*, llvm::Pass*> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::pair<const void*, llvm::Pass*> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::pair<const void*, llvm::Pass*> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<const llvm::PassInfo*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<const llvm::PassInfo*, std::allocator<const llvm::PassInfo*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<const llvm::PassInfo*>'
/llvm/include/llvm/PassInfo.h:41:33:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<const llvm::PassInfo*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<const llvm::PassInfo*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<const llvm::PassInfo*> >::_Base_type {aka std::allocator_traits<std::allocator<const llvm::PassInfo*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<const llvm::PassInfo*> >::_Base_type {aka struct std::allocator_traits<std::allocator<const llvm::PassInfo*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::unique_ptr<const llvm::PassInfo> > >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<std::unique_ptr<const llvm::PassInfo>, std::allocator<std::unique_ptr<const llvm::PassInfo> > >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<std::unique_ptr<const llvm::PassInfo> >'
/llvm/include/llvm/PassRegistry.h:48:48:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::unique_ptr<const llvm::PassInfo> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::unique_ptr<const llvm::PassInfo> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::unique_ptr<const llvm::PassInfo> > >::_Base_type {aka std::allocator_traits<std::allocator<std::unique_ptr<const llvm::PassInfo> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::unique_ptr<const llvm::PassInfo> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::unique_ptr<const llvm::PassInfo> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<llvm::PassRegistrationListener*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<llvm::PassRegistrationListener*, std::allocator<llvm::PassRegistrationListener*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<llvm::PassRegistrationListener*>'
/llvm/include/llvm/PassRegistry.h:49:43:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<llvm::PassRegistrationListener*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<llvm::PassRegistrationListener*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<llvm::PassRegistrationListener*> >::_Base_type {aka std::allocator_traits<std::allocator<llvm::PassRegistrationListener*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<llvm::PassRegistrationListener*> >::_Base_type {aka struct std::allocator_traits<std::allocator<llvm::PassRegistrationListener*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<int> >':
/usr/include/c++/7/bits/stl_set.h:119:22:   required from 'class std::set<int, std::less<int>, std::allocator<int> >'
/llvm/include/llvm/ADT/SmallSet.h:139:18:   required from 'class llvm::SmallSet<int, 4>'
/llvm/tools/clang/include/clang/Basic/TargetInfo.h:810:28:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<int> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<int> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<int> >::_Base_type {aka std::allocator_traits<std::allocator<int> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<int> >::_Base_type {aka struct std::allocator_traits<std::allocator<int> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/AST/ASTContext.h:44:0,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/TargetInfo.h: In member function 'virtual std::__cxx11::string clang::TargetInfo::convertConstraint(const char*&) const':
/llvm/tools/clang/include/clang/Basic/TargetInfo.h:939:38: error: no matching function for call to 'std::__cxx11::basic_string<char>::basic_string(int, const char&)'
     return std::string(1, *Constraint);
                                      ^
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:604:9: note: candidate: template<class _InputIterator, class> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterator, _InputIterator, const _Alloc&)
         basic_string(_InputIterator __beg, _InputIterator __end,
         ^~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:604:9: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/ASTContext.h:44:0,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/TargetInfo.h:939:38: note:   deduced conflicting types for parameter '_InputIterator' ('int' and 'char')
     return std::string(1, *Constraint);
                                      ^
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h:566:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       basic_string(basic_string&& __str, const _Alloc& __a)
       ^~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:566:7: note:   no known conversion for argument 1 from 'int' to 'std::__cxx11::basic_string<char>&&'
/usr/include/c++/7/bits/basic_string.h:562:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       basic_string(const basic_string& __str, const _Alloc& __a)
       ^~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:562:7: note:   no known conversion for argument 1 from 'int' to 'const std::__cxx11::basic_string<char>&'
/usr/include/c++/7/bits/basic_string.h:558:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::initializer_list<_Tp>, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
       ^~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:558:7: note:   no known conversion for argument 1 from 'int' to 'std::initializer_list<char>'
/usr/include/c++/7/bits/basic_string.h:531:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       basic_string(basic_string&& __str) noexcept
       ^~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:531:7: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/7/bits/basic_string.h:509:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
       ^~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:509:7: note:   no known conversion for argument 2 from 'const char' to 'const std::allocator<char>&'
/usr/include/c++/7/bits/basic_string.h:437:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       basic_string(const basic_string& __str)
       ^~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:437:7: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/7/bits/basic_string.h:429:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
       ^~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:429:7: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/7/bits/basic_string.h:420:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       basic_string()
       ^~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:420:7: note:   candidate expects 0 arguments, 2 provided
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::VariableArrayType*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::VariableArrayType*, std::allocator<clang::VariableArrayType*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::VariableArrayType*>'
/llvm/tools/clang/include/clang/AST/ASTContext.h:184:43:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::VariableArrayType*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::VariableArrayType*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::VariableArrayType*> >::_Base_type {aka std::allocator_traits<std::allocator<clang::VariableArrayType*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::VariableArrayType*> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::VariableArrayType*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::pair<const clang::NamedDecl*, unsigned int> > >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<std::pair<const clang::NamedDecl*, unsigned int>, std::allocator<std::pair<const clang::NamedDecl*, unsigned int> > >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<std::pair<const clang::NamedDecl*, unsigned int>, std::allocator<std::pair<const clang::NamedDecl*, unsigned int> > >'
/llvm/include/llvm/ADT/MapVector.h:39:14:   required from 'class llvm::MapVector<const clang::NamedDecl*, unsigned int>'
/llvm/tools/clang/include/clang/AST/ASTContext.h:509:48:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::pair<const clang::NamedDecl*, unsigned int> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::pair<const clang::NamedDecl*, unsigned int> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::pair<const clang::NamedDecl*, unsigned int> > >::_Base_type {aka std::allocator_traits<std::allocator<std::pair<const clang::NamedDecl*, unsigned int> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::pair<const clang::NamedDecl*, unsigned int> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::pair<const clang::NamedDecl*, unsigned int> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::pair<const clang::VarDecl*, unsigned int> > >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<std::pair<const clang::VarDecl*, unsigned int>, std::allocator<std::pair<const clang::VarDecl*, unsigned int> > >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<std::pair<const clang::VarDecl*, unsigned int>, std::allocator<std::pair<const clang::VarDecl*, unsigned int> > >'
/llvm/include/llvm/ADT/MapVector.h:39:14:   required from 'class llvm::MapVector<const clang::VarDecl*, unsigned int>'
/llvm/tools/clang/include/clang/AST/ASTContext.h:510:46:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::pair<const clang::VarDecl*, unsigned int> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::pair<const clang::VarDecl*, unsigned int> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::pair<const clang::VarDecl*, unsigned int> > >::_Base_type {aka std::allocator_traits<std::allocator<std::pair<const clang::VarDecl*, unsigned int> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::pair<const clang::VarDecl*, unsigned int> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::pair<const clang::VarDecl*, unsigned int> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::Decl*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::Decl*, std::allocator<clang::Decl*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::Decl*>'
/llvm/tools/clang/include/clang/AST/ASTContext.h:2936:23:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::Decl*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::Decl*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::Decl*> >::_Base_type {aka std::allocator_traits<std::allocator<clang::Decl*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::Decl*> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::Decl*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h: In constructor 'clang::ASTContext::DynTypedNodeList::DynTypedNodeList(const DynTypedNode&)':
/llvm/tools/clang/include/clang/AST/ASTContext.h:583:20: error: 'struct llvm::AlignedCharArrayUnion<clang::ast_type_traits::DynTypedNode, llvm::ArrayRef<clang::ast_type_traits::DynTypedNode> >' has no member named 'buffer'
       new (Storage.buffer) DynTypedNode(N);
                    ^~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h: In constructor 'clang::ASTContext::DynTypedNodeList::DynTypedNodeList(llvm::ArrayRef<clang::ast_type_traits::DynTypedNode>)':
/llvm/tools/clang/include/clang/AST/ASTContext.h:587:20: error: 'struct llvm::AlignedCharArrayUnion<clang::ast_type_traits::DynTypedNode, llvm::ArrayRef<clang::ast_type_traits::DynTypedNode> >' has no member named 'buffer'
       new (Storage.buffer) ArrayRef<DynTypedNode>(A);
                    ^~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h: In member function 'const clang::ast_type_traits::DynTypedNode* clang::ASTContext::DynTypedNodeList::begin() const':
/llvm/tools/clang/include/clang/AST/ASTContext.h:592:73: error: 'const struct llvm::AlignedCharArrayUnion<clang::ast_type_traits::DynTypedNode, llvm::ArrayRef<clang::ast_type_traits::DynTypedNode> >' has no member named 'buffer'
         return reinterpret_cast<const ArrayRef<DynTypedNode> *>(Storage.buffer)
                                                                         ^~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:594:61: error: 'const struct llvm::AlignedCharArrayUnion<clang::ast_type_traits::DynTypedNode, llvm::ArrayRef<clang::ast_type_traits::DynTypedNode> >' has no member named 'buffer'
       return reinterpret_cast<const DynTypedNode *>(Storage.buffer);
                                                             ^~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h: In member function 'const clang::ast_type_traits::DynTypedNode* clang::ASTContext::DynTypedNodeList::end() const':
/llvm/tools/clang/include/clang/AST/ASTContext.h:599:73: error: 'const struct llvm::AlignedCharArrayUnion<clang::ast_type_traits::DynTypedNode, llvm::ArrayRef<clang::ast_type_traits::DynTypedNode> >' has no member named 'buffer'
         return reinterpret_cast<const ArrayRef<DynTypedNode> *>(Storage.buffer)
                                                                         ^~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:601:61: error: 'const struct llvm::AlignedCharArrayUnion<clang::ast_type_traits::DynTypedNode, llvm::ArrayRef<clang::ast_type_traits::DynTypedNode> >' has no member named 'buffer'
       return reinterpret_cast<const DynTypedNode *>(Storage.buffer) + 1;
                                                             ^~~~~~
In file included from /llvm/tools/clang/include/clang/AST/ASTUnresolvedSet.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/DeclCXX.h:19,
                 from /llvm/tools/clang/include/clang/AST/AST.h:19,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h: At global scope:
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h:34:40: error: 'ptrdiff_t' is not a member of 'std'
                                   std::ptrdiff_t, NamedDecl *, NamedDecl *> {
                                        ^~~~~~~~~
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h:34:40: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:149:26: note:   'ptrdiff_t'
 typedef __PTRDIFF_TYPE__ ptrdiff_t;
                          ^~~~~~~~~
In file included from /llvm/tools/clang/include/clang/AST/ASTUnresolvedSet.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/DeclCXX.h:19,
                 from /llvm/tools/clang/include/clang/AST/AST.h:19,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h:34:40: error: 'ptrdiff_t' is not a member of 'std'
                                   std::ptrdiff_t, NamedDecl *, NamedDecl *> {
                                        ^~~~~~~~~
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h:34:40: note: suggested alternative:
In file included from /usr/include/c++/7/cstddef:50:0,
                 from /llvm/tools/clang/include/clang/AST/ASTContextAllocate.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:17,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:149:26: note:   'ptrdiff_t'
 typedef __PTRDIFF_TYPE__ ptrdiff_t;
                          ^~~~~~~~~
In file included from /llvm/tools/clang/include/clang/AST/ASTUnresolvedSet.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/DeclCXX.h:19,
                 from /llvm/tools/clang/include/clang/AST/AST.h:19,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h:34:75: error: template argument 5 is invalid
                                   std::ptrdiff_t, NamedDecl *, NamedDecl *> {
                                                                           ^
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h: In constructor 'clang::UnresolvedSetIterator::UnresolvedSetIterator(clang::DeclAccessPair*)':
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h:40:9: error: class 'clang::UnresolvedSetIterator' does not have any field named 'iterator_adaptor_base'
       : iterator_adaptor_base(Iter) {}
         ^~~~~~~~~~~~~~~~~~~~~
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h: In constructor 'clang::UnresolvedSetIterator::UnresolvedSetIterator(const clang::DeclAccessPair*)':
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h:42:9: error: class 'clang::UnresolvedSetIterator' does not have any field named 'iterator_adaptor_base'
       : iterator_adaptor_base(const_cast<DeclAccessPair *>(Iter)) {}
         ^~~~~~~~~~~~~~~~~~~~~
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h: In constructor 'clang::UnresolvedSetIterator::UnresolvedSetIterator()':
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h:47:29: error: class 'clang::UnresolvedSetIterator' does not have any field named 'iterator_adaptor_base'
   UnresolvedSetIterator() : iterator_adaptor_base(nullptr) {}
                             ^~~~~~~~~~~~~~~~~~~~~
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h: In member function 'clang::NamedDecl* clang::UnresolvedSetIterator::getDecl() const':
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h:49:39: error: 'I' was not declared in this scope
   NamedDecl *getDecl() const { return I->getDecl(); }
                                       ^
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h: In member function 'void clang::UnresolvedSetIterator::setDecl(clang::NamedDecl*) const':
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h:50:46: error: 'I' was not declared in this scope
   void setDecl(NamedDecl *ND) const { return I->setDecl(ND); }
                                              ^
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h:50:59: error: return-statement with a value, in function returning 'void' [-fpermissive]
   void setDecl(NamedDecl *ND) const { return I->setDecl(ND); }
                                                           ^
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h: In member function 'clang::AccessSpecifier clang::UnresolvedSetIterator::getAccess() const':
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h:51:46: error: 'I' was not declared in this scope
   AccessSpecifier getAccess() const { return I->getAccess(); }
                                              ^
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h: In member function 'void clang::UnresolvedSetIterator::setAccess(clang::AccessSpecifier)':
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h:52:40: error: 'I' was not declared in this scope
   void setAccess(AccessSpecifier AS) { I->setAccess(AS); }
                                        ^
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h: In member function 'const clang::DeclAccessPair& clang::UnresolvedSetIterator::getPair() const':
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h:53:51: error: 'I' was not declared in this scope
   const DeclAccessPair &getPair() const { return *I; }
                                                   ^
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h: In member function 'void clang::UnresolvedSetImpl::replace(clang::UnresolvedSetImpl::iterator, clang::NamedDecl*)':
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h:108:48: error: 'using iterator = class clang::UnresolvedSetIterator {aka class clang::UnresolvedSetIterator}' has no member named 'I'
   void replace(iterator I, NamedDecl *New) { I.I->setDecl(New); }
                                                ^
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h: In member function 'void clang::UnresolvedSetImpl::replace(clang::UnresolvedSetImpl::iterator, clang::NamedDecl*, clang::AccessSpecifier)':
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h:111:7: error: 'using iterator = class clang::UnresolvedSetIterator {aka class clang::UnresolvedSetIterator}' has no member named 'I'
     I.I->set(New, AS);
       ^
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h: In member function 'void clang::UnresolvedSetImpl::erase(clang::UnresolvedSetImpl::iterator)':
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h:116:31: error: 'using iterator = class clang::UnresolvedSetIterator {aka class clang::UnresolvedSetIterator}' has no member named 'I'
   void erase(iterator I) { *I.I = decls().pop_back_val(); }
                               ^
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h: In member function 'void clang::UnresolvedSetImpl::setAccess(clang::UnresolvedSetImpl::iterator, clang::AccessSpecifier)':
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h:118:54: error: 'using iterator = class clang::UnresolvedSetIterator {aka class clang::UnresolvedSetIterator}' has no member named 'I'
   void setAccess(iterator I, AccessSpecifier AS) { I.I->setAccess(AS); }
                                                      ^
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h: In member function 'void clang::UnresolvedSetImpl::append(clang::UnresolvedSetImpl::iterator, clang::UnresolvedSetImpl::iterator)':
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h:126:58: error: 'using iterator = class clang::UnresolvedSetIterator {aka class clang::UnresolvedSetIterator}' has no member named 'I'
   void append(iterator I, iterator E) { decls().append(I.I, E.I); }
                                                          ^
/llvm/tools/clang/include/clang/AST/UnresolvedSet.h:126:63: error: 'using iterator = class clang::UnresolvedSetIterator {aka class clang::UnresolvedSetIterator}' has no member named 'I'
   void append(iterator I, iterator E) { decls().append(I.I, E.I); }
                                                               ^
In file included from /llvm/tools/clang/include/clang/AST/DeclCXX.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/AST.h:19,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTUnresolvedSet.h: In member function 'void clang::ASTUnresolvedSet::append(clang::ASTContext&, clang::ASTUnresolvedSet::iterator, clang::ASTUnresolvedSet::iterator)':
/llvm/tools/clang/include/clang/AST/ASTUnresolvedSet.h:84:23: error: 'using iterator = class clang::UnresolvedSetIterator {aka class clang::UnresolvedSetIterator}' has no member named 'I'
     Decls.append(C, I.I, E.I);
                       ^
/llvm/tools/clang/include/clang/AST/ASTUnresolvedSet.h:84:28: error: 'using iterator = class clang::UnresolvedSetIterator {aka class clang::UnresolvedSetIterator}' has no member named 'I'
     Decls.append(C, I.I, E.I);
                            ^
In file included from /llvm/tools/clang/include/clang/AST/AST.h:19:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/DeclCXX.h: In static member function 'static clang::AccessSpecDecl* clang::AccessSpecDecl::Create(clang::ASTContext&, clang::AccessSpecifier, clang::DeclContext*, clang::SourceLocation, clang::SourceLocation)':
/llvm/tools/clang/include/clang/AST/DeclCXX.h:165:62: error: no matching function for call to 'operator new(sizetype, clang::ASTContext&, clang::DeclContext*&)'
     return new (C, DC) AccessSpecDecl(AS, DC, ASLoc, ColonLoc);
                                                              ^
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t) <near match>
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   conversion of argument 3 would be ill-formed:
In file included from /llvm/tools/clang/include/clang/AST/AST.h:19:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/DeclCXX.h:165:62: error: invalid conversion from 'clang::DeclContext*' to 'size_t {aka long unsigned int}' [-fpermissive]
     return new (C, DC) AccessSpecDecl(AS, DC, ASLoc, ColonLoc);
                                                              ^
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 3 provided
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/AST.h:19:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/DeclCXX.h:165:62: note:   'clang::ASTContext' is not derived from 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>'
     return new (C, DC) AccessSpecDecl(AS, DC, ASLoc, ColonLoc);
                                                              ^
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::CXXBaseSpecifier> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::CXXBaseSpecifier, std::allocator<clang::CXXBaseSpecifier> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::CXXBaseSpecifier, std::allocator<clang::CXXBaseSpecifier> >'
/llvm/tools/clang/include/clang/AST/DeclCXX.h:588:53:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::CXXBaseSpecifier> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::CXXBaseSpecifier> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::CXXBaseSpecifier> >::_Base_type {aka std::allocator_traits<std::allocator<clang::CXXBaseSpecifier> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::CXXBaseSpecifier> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::CXXBaseSpecifier> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/AST/AST.h:19:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/DeclCXX.h: In static member function 'static clang::UsingShadowDecl* clang::UsingShadowDecl::Create(clang::ASTContext&, clang::DeclContext*, clang::SourceLocation, clang::UsingDecl*, clang::NamedDecl*)':
/llvm/tools/clang/include/clang/AST/DeclCXX.h:3176:78: error: no matching function for call to 'operator new(sizetype, clang::ASTContext&, clang::DeclContext*&)'
     return new (C, DC) UsingShadowDecl(UsingShadow, C, DC, Loc, Using, Target);
                                                                              ^
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t) <near match>
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   conversion of argument 3 would be ill-formed:
In file included from /llvm/tools/clang/include/clang/AST/AST.h:19:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/DeclCXX.h:3176:78: error: invalid conversion from 'clang::DeclContext*' to 'size_t {aka long unsigned int}' [-fpermissive]
     return new (C, DC) UsingShadowDecl(UsingShadow, C, DC, Loc, Using, Target);
                                                                              ^
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 3 provided
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/AST.h:19:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/DeclCXX.h:3176:78: note:   'clang::ASTContext' is not derived from 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>'
     return new (C, DC) UsingShadowDecl(UsingShadow, C, DC, Loc, Using, Target);
                                                                              ^
/llvm/tools/clang/include/clang/AST/DeclCXX.h: At global scope:
/llvm/tools/clang/include/clang/AST/DeclCXX.h:3422:34: error: 'ptrdiff_t' in namespace 'std' does not name a type
     using difference_type = std::ptrdiff_t;
                                  ^~~~~~~~~
/llvm/tools/clang/include/clang/AST/DeclCXX.h: In member function 'unsigned int clang::UsingDecl::shadow_size() const':
/llvm/tools/clang/include/clang/AST/DeclCXX.h:3464:54: error: no matching function for call to 'distance(clang::UsingDecl::shadow_iterator, clang::UsingDecl::shadow_iterator)'
     return std::distance(shadow_begin(), shadow_end());
                                                      ^
In file included from /usr/include/c++/7/bits/stl_algobase.h:66:0,
                 from /usr/include/c++/7/algorithm:61,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_iterator_base_funcs.h:138:5: note: candidate: template<class _InputIterator> typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator)
     distance(_InputIterator __first, _InputIterator __last)
     ^~~~~~~~
/usr/include/c++/7/bits/stl_iterator_base_funcs.h:138:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_iterator_base_funcs.h: In substitution of 'template<class _InputIterator> typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = clang::UsingDecl::shadow_iterator]':
/llvm/tools/clang/include/clang/AST/DeclCXX.h:3464:54:   required from here
/usr/include/c++/7/bits/stl_iterator_base_funcs.h:138:5: error: no type named 'difference_type' in 'struct std::iterator_traits<clang::UsingDecl::shadow_iterator>'
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::BindingDecl*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::BindingDecl*, std::allocator<clang::BindingDecl*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::BindingDecl*, std::allocator<clang::BindingDecl*> >'
/llvm/tools/clang/include/clang/AST/DeclCXX.h:3875:79:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::BindingDecl*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::BindingDecl*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::BindingDecl*> >::_Base_type {aka std::allocator_traits<std::allocator<clang::BindingDecl*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::BindingDecl*> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::BindingDecl*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/AST/AST.h:20:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/DeclObjC.h: At global scope:
/llvm/tools/clang/include/clang/AST/DeclObjC.h:1606:34: error: 'ptrdiff_t' in namespace 'std' does not name a type
     using difference_type = std::ptrdiff_t;
                                  ^~~~~~~~~
/llvm/tools/clang/include/clang/AST/DeclObjC.h: In member function 'unsigned int clang::ObjCInterfaceDecl::ivar_size() const':
/llvm/tools/clang/include/clang/AST/DeclObjC.h:1476:50: error: no matching function for call to 'distance(clang::ObjCInterfaceDecl::ivar_iterator, clang::ObjCInterfaceDecl::ivar_iterator)'
     return std::distance(ivar_begin(), ivar_end());
                                                  ^
In file included from /usr/include/c++/7/bits/stl_algobase.h:66:0,
                 from /usr/include/c++/7/algorithm:61,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_iterator_base_funcs.h:138:5: note: candidate: template<class _InputIterator> typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator)
     distance(_InputIterator __first, _InputIterator __last)
     ^~~~~~~~
/usr/include/c++/7/bits/stl_iterator_base_funcs.h:138:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_iterator_base_funcs.h: In substitution of 'template<class _InputIterator> typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = clang::DeclContext::specific_decl_iterator<clang::ObjCIvarDecl>]':
/llvm/tools/clang/include/clang/AST/DeclObjC.h:1476:50:   required from here
/usr/include/c++/7/bits/stl_iterator_base_funcs.h:138:5: error: no type named 'difference_type' in 'struct std::iterator_traits<clang::DeclContext::specific_decl_iterator<clang::ObjCIvarDecl> >'
In file included from /llvm/tools/clang/include/clang/AST/AST.h:20:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/DeclObjC.h: In member function 'unsigned int clang::ObjCCategoryDecl::ivar_size() const':
/llvm/tools/clang/include/clang/AST/DeclObjC.h:2405:50: error: no matching function for call to 'distance(clang::ObjCCategoryDecl::ivar_iterator, clang::ObjCCategoryDecl::ivar_iterator)'
     return std::distance(ivar_begin(), ivar_end());
                                                  ^
In file included from /usr/include/c++/7/bits/stl_algobase.h:66:0,
                 from /usr/include/c++/7/algorithm:61,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_iterator_base_funcs.h:138:5: note: candidate: template<class _InputIterator> typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator)
     distance(_InputIterator __first, _InputIterator __last)
     ^~~~~~~~
/usr/include/c++/7/bits/stl_iterator_base_funcs.h:138:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_iterator_base_funcs.h: In substitution of 'template<class _InputIterator> typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = clang::DeclContext::specific_decl_iterator<clang::ObjCIvarDecl>]':
/llvm/tools/clang/include/clang/AST/DeclObjC.h:2405:50:   required from here
/usr/include/c++/7/bits/stl_iterator_base_funcs.h:138:5: error: no type named 'difference_type' in 'struct std::iterator_traits<clang::DeclContext::specific_decl_iterator<clang::ObjCIvarDecl> >'
In file included from /llvm/tools/clang/include/clang/AST/AST.h:20:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/DeclObjC.h: In member function 'unsigned int clang::ObjCImplementationDecl::ivar_size() const':
/llvm/tools/clang/include/clang/AST/DeclObjC.h:2713:50: error: no matching function for call to 'distance(clang::ObjCImplementationDecl::ivar_iterator, clang::ObjCImplementationDecl::ivar_iterator)'
     return std::distance(ivar_begin(), ivar_end());
                                                  ^
In file included from /usr/include/c++/7/bits/stl_algobase.h:66:0,
                 from /usr/include/c++/7/algorithm:61,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_iterator_base_funcs.h:138:5: note: candidate: template<class _InputIterator> typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator)
     distance(_InputIterator __first, _InputIterator __last)
     ^~~~~~~~
/usr/include/c++/7/bits/stl_iterator_base_funcs.h:138:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/stl_iterator_base_funcs.h: In substitution of 'template<class _InputIterator> typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = clang::DeclContext::specific_decl_iterator<clang::ObjCIvarDecl>]':
/llvm/tools/clang/include/clang/AST/DeclObjC.h:2713:50:   required from here
/usr/include/c++/7/bits/stl_iterator_base_funcs.h:138:5: error: no type named 'difference_type' in 'struct std::iterator_traits<clang::DeclContext::specific_decl_iterator<clang::ObjCIvarDecl> >'
In file included from /llvm/tools/clang/include/clang/AST/AST.h:21:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/DeclTemplate.h: In constructor 'clang::FixedSizeTemplateParameterListStorage<N, HasRequiresClause>::FixedSizeTemplateParameterListStorage(clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::NamedDecl*>, clang::SourceLocation, clang::Expr*)':
/llvm/tools/clang/include/clang/AST/DeclTemplate.h:205:75: error: no matching function for call to 'operator new(sizetype, void*)'
                  TemplateLoc, LAngleLoc, Params, RAngleLoc, RequiresClause))) {}
                                                                           ^
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/AST.h:21:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/DeclTemplate.h:205:75: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
                  TemplateLoc, LAngleLoc, Params, RAngleLoc, RequiresClause))) {}
                                                                           ^
/llvm/tools/clang/include/clang/AST/DeclTemplate.h: In static member function 'static clang::BuiltinTemplateDecl* clang::BuiltinTemplateDecl::Create(const clang::ASTContext&, clang::DeclContext*, clang::DeclarationName, clang::BuiltinTemplateKind)':
/llvm/tools/clang/include/clang/AST/DeclTemplate.h:1624:60: error: no matching function for call to 'operator new(sizetype, const clang::ASTContext&, clang::DeclContext*&)'
     return new (C, DC) BuiltinTemplateDecl(C, DC, Name, BTK);
                                                            ^
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t) <near match>
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   conversion of argument 3 would be ill-formed:
In file included from /llvm/tools/clang/include/clang/AST/AST.h:21:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/DeclTemplate.h:1624:60: error: invalid conversion from 'clang::DeclContext*' to 'size_t {aka long unsigned int}' [-fpermissive]
     return new (C, DC) BuiltinTemplateDecl(C, DC, Name, BTK);
                                                            ^
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 3 provided
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/AST.h:21:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/DeclTemplate.h:1624:60: note:   types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'const clang::ASTContext' have incompatible cv-qualifiers
     return new (C, DC) BuiltinTemplateDecl(C, DC, Name, BTK);
                                                            ^
/llvm/tools/clang/include/clang/AST/DeclTemplate.h: In static member function 'static clang::ClassScopeFunctionSpecializationDecl* clang::ClassScopeFunctionSpecializationDecl::Create(clang::ASTContext&, clang::DeclContext*, clang::SourceLocation, clang::CXXMethodDecl*, bool, clang::TemplateArgumentListInfo)':
/llvm/tools/clang/include/clang/AST/DeclTemplate.h:2443:70: error: no matching function for call to 'operator new(sizetype, clang::ASTContext&, clang::DeclContext*&)'
         DC, Loc, FD, HasExplicitTemplateArgs, std::move(TemplateArgs));
                                                                      ^
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t) <near match>
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   conversion of argument 3 would be ill-formed:
In file included from /llvm/tools/clang/include/clang/AST/AST.h:21:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/DeclTemplate.h:2443:70: error: invalid conversion from 'clang::DeclContext*' to 'size_t {aka long unsigned int}' [-fpermissive]
         DC, Loc, FD, HasExplicitTemplateArgs, std::move(TemplateArgs));
                                                                      ^
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 3 provided
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/AST.h:21:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/DeclTemplate.h:2443:70: note:   'clang::ASTContext' is not derived from 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>'
         DC, Loc, FD, HasExplicitTemplateArgs, std::move(TemplateArgs));
                                                                      ^
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::BlockDecl*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::BlockDecl*, std::allocator<clang::BlockDecl*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::BlockDecl*, std::allocator<clang::BlockDecl*> >'
/llvm/tools/clang/include/clang/AST/ExprCXX.h:3116:46:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::BlockDecl*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::BlockDecl*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::BlockDecl*> >::_Base_type {aka std::allocator_traits<std::allocator<clang::BlockDecl*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::BlockDecl*> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::BlockDecl*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<const clang::Expr*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<const clang::Expr*, std::allocator<const clang::Expr*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<const clang::Expr*, std::allocator<const clang::Expr*> >'
/llvm/tools/clang/include/clang/AST/OpenMPClause.h:1477:60:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<const clang::Expr*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<const clang::Expr*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<const clang::Expr*> >::_Base_type {aka std::allocator_traits<std::allocator<const clang::Expr*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<const clang::Expr*> >::_Base_type {aka struct std::allocator_traits<std::allocator<const clang::Expr*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::ValueDecl*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::ValueDecl*, std::allocator<clang::ValueDecl*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::ValueDecl*, std::allocator<clang::ValueDecl*> >'
/llvm/tools/clang/include/clang/AST/OpenMPClause.h:3748:5:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::ValueDecl*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::ValueDecl*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::ValueDecl*> >::_Base_type {aka std::allocator_traits<std::allocator<clang::ValueDecl*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::ValueDecl*> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::ValueDecl*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::ValueDecl*, llvm::SmallVector<llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent>, 8> > > >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<std::pair<clang::ValueDecl*, llvm::SmallVector<llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent>, 8> >, std::allocator<std::pair<clang::ValueDecl*, llvm::SmallVector<llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent>, 8> > > >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<std::pair<clang::ValueDecl*, llvm::SmallVector<llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent>, 8> >, std::allocator<std::pair<clang::ValueDecl*, llvm::SmallVector<llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent>, 8> > > >'
/llvm/include/llvm/ADT/MapVector.h:39:14:   required from 'class llvm::MapVector<clang::ValueDecl*, llvm::SmallVector<llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent>, 8> >'
/llvm/tools/clang/include/clang/AST/OpenMPClause.h:3768:29:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::pair<clang::ValueDecl*, llvm::SmallVector<llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent>, 8> > > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::pair<clang::ValueDecl*, llvm::SmallVector<llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent>, 8> > > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::ValueDecl*, llvm::SmallVector<llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent>, 8> > > >::_Base_type {aka std::allocator_traits<std::allocator<std::pair<clang::ValueDecl*, llvm::SmallVector<llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent>, 8> > > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::ValueDecl*, llvm::SmallVector<llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent>, 8> > > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::pair<clang::ValueDecl*, llvm::SmallVector<llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent>, 8> > > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::OMPClauseMappableExprCommon::MappableComponent> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::OMPClauseMappableExprCommon::MappableComponent, std::allocator<clang::OMPClauseMappableExprCommon::MappableComponent> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::OMPClauseMappableExprCommon::MappableComponent, std::allocator<clang::OMPClauseMappableExprCommon::MappableComponent> >'
/usr/include/c++/7/type_traits:973:18:   required by substitution of 'template<class _Tp, class _Arg, class> static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent>; _Arg = llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent>&&; <template-parameter-1-3> = <missing>]'
/usr/include/c++/7/type_traits:984:41:   required from 'struct std::__is_direct_constructible_impl<llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent>, llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent>&&>'
/usr/include/c++/7/type_traits:143:12:   required from 'struct std::__and_<std::is_destructible<llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent> >, std::__is_direct_constructible_impl<llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent>, llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent>&&> >'
/usr/include/c++/7/type_traits:988:12:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/c++/7/type_traits:1165:12:   required from 'struct std::is_move_constructible<llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent> >'
/llvm/include/llvm/Support/type_traits.h:158:7:   required from 'constexpr const bool llvm::is_trivially_copyable<llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent> >::has_deleted_move_constructor'
/llvm/include/llvm/Support/type_traits.h:181:37:   required from 'constexpr const bool llvm::is_trivially_copyable<llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent> >::value'
/llvm/include/llvm/ADT/SmallVector.h:315:7:   required from 'class llvm::SmallVectorImpl<llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent> >'
/llvm/include/llvm/ADT/SmallVector.h:839:7:   required from 'class llvm::SmallVector<llvm::ArrayRef<clang::OMPClauseMappableExprCommon::MappableComponent>, 8>'
/llvm/tools/clang/include/clang/AST/OpenMPClause.h:3768:30:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::OMPClauseMappableExprCommon::MappableComponent> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::OMPClauseMappableExprCommon::MappableComponent> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::OMPClauseMappableExprCommon::MappableComponent> >::_Base_type {aka std::allocator_traits<std::allocator<clang::OMPClauseMappableExprCommon::MappableComponent> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::OMPClauseMappableExprCommon::MappableComponent> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::OMPClauseMappableExprCommon::MappableComponent> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /usr/include/c++/7/cassert:44:0,
                 from /llvm/tools/clang/include/clang/AST/OpenMPClause.h:36,
                 from /llvm/tools/clang/include/clang/AST/StmtOpenMP.h:18,
                 from /llvm/tools/clang/include/clang/AST/StmtVisitor.h:22,
                 from /llvm/tools/clang/include/clang/AST/AST.h:24,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/OpenMPClause.h: In constructor 'clang::OMPMapClause::OMPMapClause(llvm::ArrayRef<clang::OpenMPMapModifierKind>, llvm::ArrayRef<clang::SourceLocation>, clang::OpenMPMapClauseKind, bool, clang::SourceLocation, clang::SourceLocation, clang::SourceLocation, clang::SourceLocation, unsigned int, unsigned int, unsigned int, unsigned int)':
/llvm/tools/clang/include/clang/AST/OpenMPClause.h:4117:55: error: no matching function for call to 'array_lengthof(clang::OpenMPMapModifierKind [2])'
           assert(llvm::array_lengthof(MapTypeModifiers) == MapModifiers.size()
                                                       ^
In file included from /llvm/include/llvm/ADT/StringRef.h:12:0,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/STLExtras.h:1043:25: note: candidate: template<class T, <declaration error> > constexpr size_t llvm::array_lengthof(...)
 constexpr inline size_t array_lengthof(T (&)[N]) {
                         ^~~~~~~~~~~~~~
/llvm/include/llvm/ADT/STLExtras.h:1043:25: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/cassert:44:0,
                 from /llvm/tools/clang/include/clang/AST/OpenMPClause.h:36,
                 from /llvm/tools/clang/include/clang/AST/StmtOpenMP.h:18,
                 from /llvm/tools/clang/include/clang/AST/StmtVisitor.h:22,
                 from /llvm/tools/clang/include/clang/AST/AST.h:24,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/OpenMPClause.h:4117:55: note:   couldn't deduce template parameter 'T'
           assert(llvm::array_lengthof(MapTypeModifiers) == MapModifiers.size()
                                                       ^
/llvm/tools/clang/include/clang/AST/OpenMPClause.h:4121:58: error: no matching function for call to 'array_lengthof(clang::SourceLocation [2])'
           assert(llvm::array_lengthof(MapTypeModifiersLoc) ==
                                                          ^
In file included from /llvm/include/llvm/ADT/StringRef.h:12:0,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/STLExtras.h:1043:25: note: candidate: template<class T, <declaration error> > constexpr size_t llvm::array_lengthof(...)
 constexpr inline size_t array_lengthof(T (&)[N]) {
                         ^~~~~~~~~~~~~~
/llvm/include/llvm/ADT/STLExtras.h:1043:25: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/cassert:44:0,
                 from /llvm/tools/clang/include/clang/AST/OpenMPClause.h:36,
                 from /llvm/tools/clang/include/clang/AST/StmtOpenMP.h:18,
                 from /llvm/tools/clang/include/clang/AST/StmtVisitor.h:22,
                 from /llvm/tools/clang/include/clang/AST/AST.h:24,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/OpenMPClause.h:4121:58: note:   couldn't deduce template parameter 'T'
           assert(llvm::array_lengthof(MapTypeModifiersLoc) ==
                                                          ^
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::OpenMPMapModifierKind> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::OpenMPMapModifierKind, std::allocator<clang::OpenMPMapModifierKind> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::OpenMPMapModifierKind, std::allocator<clang::OpenMPMapModifierKind> >'
/llvm/tools/clang/include/clang/AST/OpenMPClause.h:4244:47:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::OpenMPMapModifierKind> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::OpenMPMapModifierKind> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::OpenMPMapModifierKind> >::_Base_type {aka std::allocator_traits<std::allocator<clang::OpenMPMapModifierKind> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::OpenMPMapModifierKind> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::OpenMPMapModifierKind> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::OMPClause*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::OMPClause*, std::allocator<clang::OMPClause*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::OMPClause*, std::allocator<clang::OMPClause*> >'
/llvm/tools/clang/include/clang/AST/StmtOpenMP.h:54:66:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::OMPClause*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::OMPClause*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::OMPClause*> >::_Base_type {aka std::allocator_traits<std::allocator<clang::OMPClause*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::OMPClause*> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::OMPClause*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> > >':
/usr/include/c++/7/bits/stl_map.h:139:28:   required from 'class std::map<std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:203:15:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> > >::_Base_type {aka std::allocator_traits<std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> > > >':
/usr/include/c++/7/bits/stl_tree.h:1662:44:   required from 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::operator=(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >]'
/llvm/include/llvm/Support/type_traits.h:135:57:   required by substitution of 'template<class F> static decltype (((declval<F&>)()=(declval<F&>)(), std::true_type{})) llvm::is_move_assignable<clang::ast_matchers::internal::BoundNodesMap>::get<F>(F*) [with F = clang::ast_matchers::internal::BoundNodesMap]'
/llvm/include/llvm/Support/type_traits.h:137:47:   required from 'constexpr const bool llvm::is_move_assignable<clang::ast_matchers::internal::BoundNodesMap>::value'
/llvm/include/llvm/Support/type_traits.h:170:7:   required from 'constexpr const bool llvm::is_trivially_copyable<clang::ast_matchers::internal::BoundNodesMap>::has_deleted_move_assign'
/llvm/include/llvm/Support/type_traits.h:180:32:   required from 'constexpr const bool llvm::is_trivially_copyable<clang::ast_matchers::internal::BoundNodesMap>::value'
/llvm/include/llvm/ADT/SmallVector.h:315:7:   required from 'class llvm::SmallVectorImpl<clang::ast_matchers::internal::BoundNodesMap>'
/llvm/include/llvm/ADT/SmallVector.h:839:7:   required from 'class llvm::SmallVector<clang::ast_matchers::internal::BoundNodesMap, 1>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:263:33:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> > > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> > > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> > > >::_Base_type {aka std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> > > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> > > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> > > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:67:0,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from Coords.h:6,
                 from ASTToCoords.h:6,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: At global scope:
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1344:30: error: 'std::size_t' has not been declared
   template <typename T, std::size_t... Is>
                              ^~~~~~
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1345:65: error: 'Is' was not declared in this scope
   std::vector<DynTypedMatcher> getMatchers(llvm::index_sequence<Is...>) const {
                                                                 ^~
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1345:65: note: suggested alternative: 'Ps'
   std::vector<DynTypedMatcher> getMatchers(llvm::index_sequence<Is...>) const {
                                                                 ^~
                                                                 Ps
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1345:67: error: expected parameter pack before '...'
   std::vector<DynTypedMatcher> getMatchers(llvm::index_sequence<Is...>) const {
                                                                   ^~~
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1345:70: error: template argument 1 is invalid
   std::vector<DynTypedMatcher> getMatchers(llvm::index_sequence<Is...>) const {
                                                                      ^
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<clang::ast_matchers::internal::DynTypedMatcher> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<clang::ast_matchers::internal::DynTypedMatcher, std::allocator<clang::ast_matchers::internal::DynTypedMatcher> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<clang::ast_matchers::internal::DynTypedMatcher>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1345:79:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<clang::ast_matchers::internal::DynTypedMatcher> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<clang::ast_matchers::internal::DynTypedMatcher> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<clang::ast_matchers::internal::DynTypedMatcher> >::_Base_type {aka std::allocator_traits<std::allocator<clang::ast_matchers::internal::DynTypedMatcher> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<clang::ast_matchers::internal::DynTypedMatcher> >::_Base_type {aka struct std::allocator_traits<std::allocator<clang::ast_matchers::internal::DynTypedMatcher> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:67:0,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from Coords.h:6,
                 from ASTToCoords.h:6,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In member function 'std::vector<clang::ast_matchers::internal::DynTypedMatcher> clang::ast_matchers::internal::VariadicOperatorMatcher<Ps>::getMatchers(int) const':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1346:33: error: 'Is' was not declared in this scope
     return {Matcher<T>(std::get<Is>(Params))...};
                                 ^~
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1346:33: note: suggested alternative: 'Ps'
     return {Matcher<T>(std::get<Is>(Params))...};
                                 ^~
                                 Ps
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1346:45: error: expansion pattern '(clang::ast_matchers::internal::Matcher<From>)(get<<expression error> >(((const clang::ast_matchers::internal::VariadicOperatorMatcher<Ps>*)this)->clang::ast_matchers::internal::VariadicOperatorMatcher<Ps>::Params))' contains no argument packs
     return {Matcher<T>(std::get<Is>(Params))...};
                                             ^~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<llvm::TimerGroup::PrintRecord> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<llvm::TimerGroup::PrintRecord, std::allocator<llvm::TimerGroup::PrintRecord> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<llvm::TimerGroup::PrintRecord>'
/llvm/include/llvm/Support/Timer.h:188:28:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<llvm::TimerGroup::PrintRecord> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<llvm::TimerGroup::PrintRecord> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<llvm::TimerGroup::PrintRecord> >::_Base_type {aka std::allocator_traits<std::allocator<llvm::TimerGroup::PrintRecord> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<llvm::TimerGroup::PrintRecord> >::_Base_type {aka struct std::allocator_traits<std::allocator<llvm::TimerGroup::PrintRecord> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::ast_matchers::internal::DynTypedMatcher, clang::ast_matchers::MatchFinder::MatchCallback*> > >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<std::pair<clang::ast_matchers::internal::DynTypedMatcher, clang::ast_matchers::MatchFinder::MatchCallback*>, std::allocator<std::pair<clang::ast_matchers::internal::DynTypedMatcher, clang::ast_matchers::MatchFinder::MatchCallback*> > >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<std::pair<clang::ast_matchers::internal::DynTypedMatcher, clang::ast_matchers::MatchFinder::MatchCallback*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:205:9:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::DynTypedMatcher, clang::ast_matchers::MatchFinder::MatchCallback*> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::DynTypedMatcher, clang::ast_matchers::MatchFinder::MatchCallback*> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::ast_matchers::internal::DynTypedMatcher, clang::ast_matchers::MatchFinder::MatchCallback*> > >::_Base_type {aka std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::DynTypedMatcher, clang::ast_matchers::MatchFinder::MatchCallback*> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::ast_matchers::internal::DynTypedMatcher, clang::ast_matchers::MatchFinder::MatchCallback*> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::DynTypedMatcher, clang::ast_matchers::MatchFinder::MatchCallback*> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::QualType>, clang::ast_matchers::MatchFinder::MatchCallback*> > >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<std::pair<clang::ast_matchers::internal::Matcher<clang::QualType>, clang::ast_matchers::MatchFinder::MatchCallback*>, std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::QualType>, clang::ast_matchers::MatchFinder::MatchCallback*> > >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<std::pair<clang::ast_matchers::internal::Matcher<clang::QualType>, clang::ast_matchers::MatchFinder::MatchCallback*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:206:58:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::QualType>, clang::ast_matchers::MatchFinder::MatchCallback*> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::QualType>, clang::ast_matchers::MatchFinder::MatchCallback*> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::QualType>, clang::ast_matchers::MatchFinder::MatchCallback*> > >::_Base_type {aka std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::QualType>, clang::ast_matchers::MatchFinder::MatchCallback*> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::QualType>, clang::ast_matchers::MatchFinder::MatchCallback*> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::QualType>, clang::ast_matchers::MatchFinder::MatchCallback*> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::NestedNameSpecifier>, clang::ast_matchers::MatchFinder::MatchCallback*> > >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<std::pair<clang::ast_matchers::internal::Matcher<clang::NestedNameSpecifier>, clang::ast_matchers::MatchFinder::MatchCallback*>, std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::NestedNameSpecifier>, clang::ast_matchers::MatchFinder::MatchCallback*> > >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<std::pair<clang::ast_matchers::internal::Matcher<clang::NestedNameSpecifier>, clang::ast_matchers::MatchFinder::MatchCallback*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:208:9:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::NestedNameSpecifier>, clang::ast_matchers::MatchFinder::MatchCallback*> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::NestedNameSpecifier>, clang::ast_matchers::MatchFinder::MatchCallback*> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::NestedNameSpecifier>, clang::ast_matchers::MatchFinder::MatchCallback*> > >::_Base_type {aka std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::NestedNameSpecifier>, clang::ast_matchers::MatchFinder::MatchCallback*> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::NestedNameSpecifier>, clang::ast_matchers::MatchFinder::MatchCallback*> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::NestedNameSpecifier>, clang::ast_matchers::MatchFinder::MatchCallback*> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::NestedNameSpecifierLoc>, clang::ast_matchers::MatchFinder::MatchCallback*> > >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<std::pair<clang::ast_matchers::internal::Matcher<clang::NestedNameSpecifierLoc>, clang::ast_matchers::MatchFinder::MatchCallback*>, std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::NestedNameSpecifierLoc>, clang::ast_matchers::MatchFinder::MatchCallback*> > >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<std::pair<clang::ast_matchers::internal::Matcher<clang::NestedNameSpecifierLoc>, clang::ast_matchers::MatchFinder::MatchCallback*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:210:9:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::NestedNameSpecifierLoc>, clang::ast_matchers::MatchFinder::MatchCallback*> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::NestedNameSpecifierLoc>, clang::ast_matchers::MatchFinder::MatchCallback*> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::NestedNameSpecifierLoc>, clang::ast_matchers::MatchFinder::MatchCallback*> > >::_Base_type {aka std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::NestedNameSpecifierLoc>, clang::ast_matchers::MatchFinder::MatchCallback*> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::NestedNameSpecifierLoc>, clang::ast_matchers::MatchFinder::MatchCallback*> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::NestedNameSpecifierLoc>, clang::ast_matchers::MatchFinder::MatchCallback*> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::TypeLoc>, clang::ast_matchers::MatchFinder::MatchCallback*> > >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<std::pair<clang::ast_matchers::internal::Matcher<clang::TypeLoc>, clang::ast_matchers::MatchFinder::MatchCallback*>, std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::TypeLoc>, clang::ast_matchers::MatchFinder::MatchCallback*> > >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<std::pair<clang::ast_matchers::internal::Matcher<clang::TypeLoc>, clang::ast_matchers::MatchFinder::MatchCallback*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:211:61:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::TypeLoc>, clang::ast_matchers::MatchFinder::MatchCallback*> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::TypeLoc>, clang::ast_matchers::MatchFinder::MatchCallback*> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::TypeLoc>, clang::ast_matchers::MatchFinder::MatchCallback*> > >::_Base_type {aka std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::TypeLoc>, clang::ast_matchers::MatchFinder::MatchCallback*> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::TypeLoc>, clang::ast_matchers::MatchFinder::MatchCallback*> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::TypeLoc>, clang::ast_matchers::MatchFinder::MatchCallback*> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::CXXCtorInitializer>, clang::ast_matchers::MatchFinder::MatchCallback*> > >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<std::pair<clang::ast_matchers::internal::Matcher<clang::CXXCtorInitializer>, clang::ast_matchers::MatchFinder::MatchCallback*>, std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::CXXCtorInitializer>, clang::ast_matchers::MatchFinder::MatchCallback*> > >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<std::pair<clang::ast_matchers::internal::Matcher<clang::CXXCtorInitializer>, clang::ast_matchers::MatchFinder::MatchCallback*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:212:72:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::CXXCtorInitializer>, clang::ast_matchers::MatchFinder::MatchCallback*> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::CXXCtorInitializer>, clang::ast_matchers::MatchFinder::MatchCallback*> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::CXXCtorInitializer>, clang::ast_matchers::MatchFinder::MatchCallback*> > >::_Base_type {aka std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::CXXCtorInitializer>, clang::ast_matchers::MatchFinder::MatchCallback*> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::CXXCtorInitializer>, clang::ast_matchers::MatchFinder::MatchCallback*> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::pair<clang::ast_matchers::internal::Matcher<clang::CXXCtorInitializer>, clang::ast_matchers::MatchFinder::MatchCallback*> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from ASTToCoords.h:6:0,
                 from ASTToCoords.cpp:1:
Coords.h: At global scope:
Coords.h:154:50: error: 'Scalar' has not been declared
   Vector_Lit(const clang::CXXConstructExpr *ast, Scalar a);
                                                  ^~~~~~
In file included from ASTToCoords.cpp:1:0:
ASTToCoords.h:54:46: error: 'Scalar' has not been declared
                                              Scalar s);
                                              ^~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of 'struct std::__detail::_Hashtable_base<const clang::Stmt*, std::pair<const clang::Stmt* const, coords::Coords*>, std::__detail::_Select1st, std::equal_to<const clang::Stmt*>, std::hash<const clang::Stmt*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >':
/usr/include/c++/7/bits/hashtable.h:173:11:   required from 'class std::_Hashtable<const clang::Stmt*, std::pair<const clang::Stmt* const, coords::Coords*>, std::allocator<std::pair<const clang::Stmt* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Stmt*>, std::hash<const clang::Stmt*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >'
/usr/include/c++/7/bits/unordered_map.h:104:18:   required from 'class std::unordered_map<const clang::Stmt*, coords::Coords*>'
ASTToCoords.h:67:63:   required from here
/usr/include/c++/7/bits/hashtable_policy.h:1774:63: error: no type named '__hash_code' in 'struct std::__detail::_Hash_code_base<const clang::Stmt*, std::pair<const clang::Stmt* const, coords::Coords*>, std::__detail::_Select1st, std::hash<const clang::Stmt*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>'
     using __hash_code = typename __hash_code_base::__hash_code;
                                                               ^
/usr/include/c++/7/bits/hashtable_policy.h:1802:40: error: no type named '__hash_code' in 'struct std::__detail::_Hash_code_base<const clang::Stmt*, std::pair<const clang::Stmt* const, coords::Coords*>, std::__detail::_Select1st, std::hash<const clang::Stmt*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>'
      __hash_code, __hash_cached::value>;
                                        ^
/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of 'struct std::__detail::_Insert_base<const clang::Stmt*, std::pair<const clang::Stmt* const, coords::Coords*>, std::allocator<std::pair<const clang::Stmt* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Stmt*>, std::hash<const clang::Stmt*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >':
/usr/include/c++/7/bits/hashtable_policy.h:964:12:   required from 'struct std::__detail::_Insert<const clang::Stmt*, std::pair<const clang::Stmt* const, coords::Coords*>, std::allocator<std::pair<const clang::Stmt* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Stmt*>, std::hash<const clang::Stmt*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, false>'
/usr/include/c++/7/bits/hashtable.h:173:11:   required from 'class std::_Hashtable<const clang::Stmt*, std::pair<const clang::Stmt* const, coords::Coords*>, std::allocator<std::pair<const clang::Stmt* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Stmt*>, std::hash<const clang::Stmt*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >'
/usr/include/c++/7/bits/unordered_map.h:104:18:   required from 'class std::unordered_map<const clang::Stmt*, coords::Coords*>'
ASTToCoords.h:67:63:   required from here
/usr/include/c++/7/bits/hashtable_policy.h:820:61: error: no type named 'size_type' in 'struct std::__detail::_Hashtable_base<const clang::Stmt*, std::pair<const clang::Stmt* const, coords::Coords*>, std::__detail::_Select1st, std::equal_to<const clang::Stmt*>, std::hash<const clang::Stmt*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >'
       using size_type = typename __hashtable_base::size_type;
                                                             ^
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h: In instantiation of 'class std::_Hashtable<const clang::Stmt*, std::pair<const clang::Stmt* const, coords::Coords*>, std::allocator<std::pair<const clang::Stmt* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Stmt*>, std::hash<const clang::Stmt*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >':
/usr/include/c++/7/bits/unordered_map.h:104:18:   required from 'class std::unordered_map<const clang::Stmt*, coords::Coords*>'
ASTToCoords.h:67:63:   required from here
/usr/include/c++/7/bits/hashtable.h:218:60: error: no type named '_State' in 'using __rehash_type = struct std::__detail::_Prime_rehash_policy {aka struct std::__detail::_Prime_rehash_policy}'
       using __rehash_state = typename __rehash_type::_State;
                                                            ^
/usr/include/c++/7/bits/hashtable.h: In instantiation of 'struct std::_Hashtable<const clang::Stmt*, std::pair<const clang::Stmt* const, coords::Coords*>, std::allocator<std::pair<const clang::Stmt* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Stmt*>, std::hash<const clang::Stmt*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::__hash_code_base_access':
/usr/include/c++/7/bits/hashtable.h:269:10:   required from 'class std::_Hashtable<const clang::Stmt*, std::pair<const clang::Stmt* const, coords::Coords*>, std::allocator<std::pair<const clang::Stmt* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Stmt*>, std::hash<const clang::Stmt*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >'
/usr/include/c++/7/bits/unordered_map.h:104:18:   required from 'class std::unordered_map<const clang::Stmt*, coords::Coords*>'
ASTToCoords.h:67:63:   required from here
/usr/include/c++/7/bits/hashtable.h:264:33: error: no members matching 'std::_Hashtable<const clang::Stmt*, std::pair<const clang::Stmt* const, coords::Coords*>, std::allocator<std::pair<const clang::Stmt* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Stmt*>, std::hash<const clang::Stmt*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::__hash_code_base {aka std::__detail::_Hash_code_base<const clang::Stmt*, std::pair<const clang::Stmt* const, coords::Coords*>, std::__detail::_Select1st, std::hash<const clang::Stmt*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>}::_M_bucket_index' in 'using __hash_code_base = using __hash_code_base = struct std::__detail::_Hash_code_base<const clang::Stmt*, std::pair<const clang::Stmt* const, coords::Coords*>, std::__detail::_Select1st, std::hash<const clang::Stmt*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false> {aka struct std::__detail::_Hash_code_base<const clang::Stmt*, std::pair<const clang::Stmt* const, coords::Coords*>, std::__detail::_Select1st, std::hash<const clang::Stmt*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>}'
       { using __hash_code_base::_M_bucket_index; };
                                 ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable.h: In instantiation of 'class std::_Hashtable<const clang::Stmt*, std::pair<const clang::Stmt* const, coords::Coords*>, std::allocator<std::pair<const clang::Stmt* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Stmt*>, std::hash<const clang::Stmt*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >':
/usr/include/c++/7/bits/unordered_map.h:104:18:   required from 'class std::unordered_map<const clang::Stmt*, coords::Coords*>'
ASTToCoords.h:67:63:   required from here
/usr/include/c++/7/bits/hashtable.h:269:10: error: 'const struct std::_Hashtable<const clang::Stmt*, std::pair<const clang::Stmt* const, coords::Coords*>, std::allocator<std::pair<const clang::Stmt* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Stmt*>, std::hash<const clang::Stmt*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::__hash_code_base_access' has no member named '_M_bucket_index'
       static_assert(noexcept(declval<const __hash_code_base_access&>()
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         ._M_bucket_index((const __node_type*)nullptr,
         ~^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable.h:304:61: error: no type named 'size_type' in 'struct std::__detail::_Hashtable_base<const clang::Stmt*, std::pair<const clang::Stmt* const, coords::Coords*>, std::__detail::_Select1st, std::equal_to<const clang::Stmt*>, std::hash<const clang::Stmt*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >'
       using size_type = typename __hashtable_base::size_type;
                                                             ^
/usr/include/c++/7/bits/hashtable.h:305:73: error: no type named 'difference_type' in 'struct std::__detail::_Hashtable_base<const clang::Stmt*, std::pair<const clang::Stmt* const, coords::Coords*>, std::__detail::_Select1st, std::equal_to<const clang::Stmt*>, std::hash<const clang::Stmt*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >'
       using difference_type = typename __hashtable_base::difference_type;
                                                                         ^
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<const clang::Stmt*, coords::Coords*>':
ASTToCoords.h:67:63:   required from here
/usr/include/c++/7/bits/unordered_map.h:112:48: error: no type named 'mapped_type' in 'class std::_Hashtable<const clang::Stmt*, std::pair<const clang::Stmt* const, coords::Coords*>, std::allocator<std::pair<const clang::Stmt* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Stmt*>, std::hash<const clang::Stmt*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of 'struct std::__detail::_Hashtable_base<const clang::Decl*, std::pair<const clang::Decl* const, coords::Coords*>, std::__detail::_Select1st, std::equal_to<const clang::Decl*>, std::hash<const clang::Decl*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >':
/usr/include/c++/7/bits/hashtable.h:173:11:   required from 'class std::_Hashtable<const clang::Decl*, std::pair<const clang::Decl* const, coords::Coords*>, std::allocator<std::pair<const clang::Decl* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Decl*>, std::hash<const clang::Decl*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >'
/usr/include/c++/7/bits/unordered_map.h:104:18:   required from 'class std::unordered_map<const clang::Decl*, coords::Coords*>'
ASTToCoords.h:68:63:   required from here
/usr/include/c++/7/bits/hashtable_policy.h:1774:63: error: no type named '__hash_code' in 'struct std::__detail::_Hash_code_base<const clang::Decl*, std::pair<const clang::Decl* const, coords::Coords*>, std::__detail::_Select1st, std::hash<const clang::Decl*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>'
     using __hash_code = typename __hash_code_base::__hash_code;
                                                               ^
/usr/include/c++/7/bits/hashtable_policy.h:1802:40: error: no type named '__hash_code' in 'struct std::__detail::_Hash_code_base<const clang::Decl*, std::pair<const clang::Decl* const, coords::Coords*>, std::__detail::_Select1st, std::hash<const clang::Decl*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>'
      __hash_code, __hash_cached::value>;
                                        ^
/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of 'struct std::__detail::_Insert_base<const clang::Decl*, std::pair<const clang::Decl* const, coords::Coords*>, std::allocator<std::pair<const clang::Decl* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Decl*>, std::hash<const clang::Decl*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >':
/usr/include/c++/7/bits/hashtable_policy.h:964:12:   required from 'struct std::__detail::_Insert<const clang::Decl*, std::pair<const clang::Decl* const, coords::Coords*>, std::allocator<std::pair<const clang::Decl* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Decl*>, std::hash<const clang::Decl*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, false>'
/usr/include/c++/7/bits/hashtable.h:173:11:   required from 'class std::_Hashtable<const clang::Decl*, std::pair<const clang::Decl* const, coords::Coords*>, std::allocator<std::pair<const clang::Decl* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Decl*>, std::hash<const clang::Decl*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >'
/usr/include/c++/7/bits/unordered_map.h:104:18:   required from 'class std::unordered_map<const clang::Decl*, coords::Coords*>'
ASTToCoords.h:68:63:   required from here
/usr/include/c++/7/bits/hashtable_policy.h:820:61: error: no type named 'size_type' in 'struct std::__detail::_Hashtable_base<const clang::Decl*, std::pair<const clang::Decl* const, coords::Coords*>, std::__detail::_Select1st, std::equal_to<const clang::Decl*>, std::hash<const clang::Decl*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >'
       using size_type = typename __hashtable_base::size_type;
                                                             ^
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h: In instantiation of 'class std::_Hashtable<const clang::Decl*, std::pair<const clang::Decl* const, coords::Coords*>, std::allocator<std::pair<const clang::Decl* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Decl*>, std::hash<const clang::Decl*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >':
/usr/include/c++/7/bits/unordered_map.h:104:18:   required from 'class std::unordered_map<const clang::Decl*, coords::Coords*>'
ASTToCoords.h:68:63:   required from here
/usr/include/c++/7/bits/hashtable.h:218:60: error: no type named '_State' in 'using __rehash_type = struct std::__detail::_Prime_rehash_policy {aka struct std::__detail::_Prime_rehash_policy}'
       using __rehash_state = typename __rehash_type::_State;
                                                            ^
/usr/include/c++/7/bits/hashtable.h: In instantiation of 'struct std::_Hashtable<const clang::Decl*, std::pair<const clang::Decl* const, coords::Coords*>, std::allocator<std::pair<const clang::Decl* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Decl*>, std::hash<const clang::Decl*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::__hash_code_base_access':
/usr/include/c++/7/bits/hashtable.h:269:10:   required from 'class std::_Hashtable<const clang::Decl*, std::pair<const clang::Decl* const, coords::Coords*>, std::allocator<std::pair<const clang::Decl* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Decl*>, std::hash<const clang::Decl*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >'
/usr/include/c++/7/bits/unordered_map.h:104:18:   required from 'class std::unordered_map<const clang::Decl*, coords::Coords*>'
ASTToCoords.h:68:63:   required from here
/usr/include/c++/7/bits/hashtable.h:264:33: error: no members matching 'std::_Hashtable<const clang::Decl*, std::pair<const clang::Decl* const, coords::Coords*>, std::allocator<std::pair<const clang::Decl* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Decl*>, std::hash<const clang::Decl*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::__hash_code_base {aka std::__detail::_Hash_code_base<const clang::Decl*, std::pair<const clang::Decl* const, coords::Coords*>, std::__detail::_Select1st, std::hash<const clang::Decl*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>}::_M_bucket_index' in 'using __hash_code_base = using __hash_code_base = struct std::__detail::_Hash_code_base<const clang::Decl*, std::pair<const clang::Decl* const, coords::Coords*>, std::__detail::_Select1st, std::hash<const clang::Decl*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false> {aka struct std::__detail::_Hash_code_base<const clang::Decl*, std::pair<const clang::Decl* const, coords::Coords*>, std::__detail::_Select1st, std::hash<const clang::Decl*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>}'
       { using __hash_code_base::_M_bucket_index; };
                                 ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable.h: In instantiation of 'class std::_Hashtable<const clang::Decl*, std::pair<const clang::Decl* const, coords::Coords*>, std::allocator<std::pair<const clang::Decl* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Decl*>, std::hash<const clang::Decl*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >':
/usr/include/c++/7/bits/unordered_map.h:104:18:   required from 'class std::unordered_map<const clang::Decl*, coords::Coords*>'
ASTToCoords.h:68:63:   required from here
/usr/include/c++/7/bits/hashtable.h:269:10: error: 'const struct std::_Hashtable<const clang::Decl*, std::pair<const clang::Decl* const, coords::Coords*>, std::allocator<std::pair<const clang::Decl* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Decl*>, std::hash<const clang::Decl*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::__hash_code_base_access' has no member named '_M_bucket_index'
       static_assert(noexcept(declval<const __hash_code_base_access&>()
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         ._M_bucket_index((const __node_type*)nullptr,
         ~^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable.h:304:61: error: no type named 'size_type' in 'struct std::__detail::_Hashtable_base<const clang::Decl*, std::pair<const clang::Decl* const, coords::Coords*>, std::__detail::_Select1st, std::equal_to<const clang::Decl*>, std::hash<const clang::Decl*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >'
       using size_type = typename __hashtable_base::size_type;
                                                             ^
/usr/include/c++/7/bits/hashtable.h:305:73: error: no type named 'difference_type' in 'struct std::__detail::_Hashtable_base<const clang::Decl*, std::pair<const clang::Decl* const, coords::Coords*>, std::__detail::_Select1st, std::equal_to<const clang::Decl*>, std::hash<const clang::Decl*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >'
       using difference_type = typename __hashtable_base::difference_type;
                                                                         ^
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<const clang::Decl*, coords::Coords*>':
ASTToCoords.h:68:63:   required from here
/usr/include/c++/7/bits/unordered_map.h:112:48: error: no type named 'mapped_type' in 'class std::_Hashtable<const clang::Decl*, std::pair<const clang::Decl* const, coords::Coords*>, std::allocator<std::pair<const clang::Decl* const, coords::Coords*> >, std::__detail::_Select1st, std::equal_to<const clang::Decl*>, std::hash<const clang::Decl*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
ASTToCoords.cpp: In member function 'coords::VecVarExpr* ast2coords::ASTToCoords::mkVecVarExpr(ast::VecVarExpr*)':
ASTToCoords.cpp:34:23: error: no matching function for call to 'ast2coords::ASTToCoords::overrideDecl(ast::VecVarExpr*&, coords::VecVarExpr*&)'
     overrideDecl(ast,c);    // VarDecl, which is Decl, not Stmt/Expr ast
                       ^
In file included from ASTToCoords.cpp:1:0:
ASTToCoords.h:65:10: note: candidate: void ast2coords::ASTToCoords::overrideDecl(const clang::Decl*, coords::Coords*)
     void overrideDecl(const clang::Decl *d, coords::Coords *c);
          ^~~~~~~~~~~~
ASTToCoords.h:65:10: note:   no known conversion for argument 1 from 'ast::VecVarExpr* {aka const clang::DeclRefExpr*}' to 'const clang::Decl*'
ASTToCoords.cpp:35:12: error: 'coord' was not declared in this scope
     return coord;
            ^~~~~
ASTToCoords.cpp: At global scope:
ASTToCoords.cpp:46:24: error: prototype for 'coords::VecVecAddExpr* ast2coords::ASTToCoords::mkVecVecAddExpr(ast::VecVecAddExpr*, coords::VecExpr*, coords::VecExpr*)' does not match any in class 'ast2coords::ASTToCoords'
 coords::VecVecAddExpr *ASTToCoords::mkVecVecAddExpr(
                        ^~~~~~~~~~~
In file included from ASTToCoords.cpp:1:0:
ASTToCoords.h:50:30: error: candidate is: coords::VecVecAddExpr* ast2coords::ASTToCoords::mkVecVecAddExpr(ast::VecVecAddExpr*, const coords::VecExpr*, const coords::VecExpr*)
     coords::VecVecAddExpr   *mkVecVecAddExpr(const ast::VecVecAddExpr *ast,
                              ^~~~~~~~~~~~~~~
ASTToCoords.cpp:61:75: error: 'Scalar' has not been declared
 coords::Vector_Lit *ASTToCoords::mkVector_Lit(const ast::Vector_Lit *ast, Scalar scalar) {
                                                                           ^~~~~~
ASTToCoords.cpp: In member function 'coords::Vector_Lit* ast2coords::ASTToCoords::mkVector_Lit(ast::Vector_Lit*, int)':
ASTToCoords.cpp:64:27: error: 'coords::Coords' is an inaccessible base of 'coords::Vector_Lit'
     overrideStmt(ast,coord);
                           ^
ASTToCoords.cpp: In member function 'coords::Vector_Var* ast2coords::ASTToCoords::mkVector_Var(ast::Vector_Var*, coords::VecVarExpr*)':
ASTToCoords.cpp:70:59: error: no matching function for call to 'coords::Vector_Var::Vector_Var(ast::Vector_Var*&)'
     coords::Vector_Var *coord = new coords::Vector_Var(ast);
                                                           ^
In file included from ASTToCoords.h:6:0,
                 from ASTToCoords.cpp:1:
Coords.h:163:3: note: candidate: coords::Vector_Var::Vector_Var(clang::CXXConstructExpr*, const coords::VecVarExpr*)
   Vector_Var(clang::CXXConstructExpr *ast, const coords::VecVarExpr *expr);
   ^~~~~~~~~~
Coords.h:163:3: note:   candidate expects 2 arguments, 1 provided
Coords.h:161:7: note: candidate: constexpr coords::Vector_Var::Vector_Var(const coords::Vector_Var&)
 class Vector_Var : public Vector {
       ^~~~~~~~~~
Coords.h:161:7: note:   no known conversion for argument 1 from 'ast::Vector_Var* {aka const clang::CXXConstructExpr*}' to 'const coords::Vector_Var&'
Coords.h:161:7: note: candidate: constexpr coords::Vector_Var::Vector_Var(coords::Vector_Var&&)
Coords.h:161:7: note:   no known conversion for argument 1 from 'ast::Vector_Var* {aka const clang::CXXConstructExpr*}' to 'coords::Vector_Var&&'
ASTToCoords.cpp:71:27: error: 'coords::Coords' is an inaccessible base of 'coords::Vector_Var'
     overrideStmt(ast,coord);
                           ^
ASTToCoords.cpp: At global scope:
ASTToCoords.cpp:76:22: error: prototype for 'coords::Vector_Expr* ast2coords::ASTToCoords::mkVector_Expr(ast::Vector_Expr*, coords::VecExpr*)' does not match any in class 'ast2coords::ASTToCoords'
 coords::Vector_Expr *ASTToCoords::mkVector_Expr(
                      ^~~~~~~~~~~
In file included from ASTToCoords.cpp:1:0:
ASTToCoords.h:57:30: error: candidate is: coords::Vector_Expr* ast2coords::ASTToCoords::mkVector_Expr(ast::Vector_Expr*, coords::VecVarExpr*)
     coords::Vector_Expr     *mkVector_Expr  (const ast::Vector_Expr *ast,
                              ^~~~~~~~~~~~~
ASTToCoords.cpp: In member function 'coords::Vector_Def* ast2coords::ASTToCoords::mkVector_Def(ast::Vector_Def*, coords::VecIdent*, coords::VecExpr*)':
ASTToCoords.cpp:88:82: error: no matching function for call to 'coords::Vector_Def::Vector_Def(ast::Vector_Def*&, coords::VecIdent*&, coords::VecExpr*&)'
     coords::Vector_Def *coord = new coords::Vector_Def(ast, id_coords, vec_coords);
                                                                                  ^
In file included from ASTToCoords.h:6:0,
                 from ASTToCoords.cpp:1:
Coords.h:188:3: note: candidate: coords::Vector_Def::Vector_Def(clang::DeclStmt, coords::VecIdent*, coords::VecExpr*)
   Vector_Def(const clang::DeclStmt def, coords::VecIdent *bv,
   ^~~~~~~~~~
Coords.h:188:3: note:   no known conversion for argument 1 from 'ast::Vector_Def* {aka const clang::DeclStmt*}' to 'clang::DeclStmt'
Coords.h:186:7: note: candidate: constexpr coords::Vector_Def::Vector_Def(const coords::Vector_Def&)
 class Vector_Def : public Coords {
       ^~~~~~~~~~
Coords.h:186:7: note:   candidate expects 1 argument, 3 provided
Coords.h:186:7: note: candidate: constexpr coords::Vector_Def::Vector_Def(coords::Vector_Def&&)
Coords.h:186:7: note:   candidate expects 1 argument, 3 provided
ASTToCoords.cpp:91:1: warning: no return statement in function returning non-void [-Wreturn-type]
 }
 ^
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h: In instantiation of 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]':
/llvm/include/llvm/ADT/APSInt.h:70:45:   required from here
/usr/include/c++/7/bits/basic_string.h:542:24: error: 'class std::__cxx11::basic_string<char>' has no member named '_M_allocated_capacity'; did you mean '_S_local_capacity'?
      _M_capacity(__str._M_allocated_capacity);
                  ~~~~~~^~~~~~~~~~~~~~~~~~~~~
                  _S_local_capacity
/usr/include/c++/7/bits/basic_string.h:542:17: error: '_M_capacity' was not declared in this scope
      _M_capacity(__str._M_allocated_capacity);
      ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:548:11: error: '_M_length' was not declared in this scope
  _M_length(__str.length());
  ~~~~~~~~~^~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h: In instantiation of 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]':
/usr/include/c++/7/system_error:351:50:   required from here
/usr/include/c++/7/bits/basic_string.h:5959:33: error: 'class std::__cxx11::basic_string<char>' has no member named 'size'
       const auto __size = __lhs.size() + __rhs.size();
                           ~~~~~~^~~~
/usr/include/c++/7/bits/basic_string.h:5959:48: error: 'class std::__cxx11::basic_string<char>' has no member named 'size'
       const auto __size = __lhs.size() + __rhs.size();
                                          ~~~~~~^~~~
/usr/include/c++/7/bits/basic_string.h:5960:43: error: 'class std::__cxx11::basic_string<char>' has no member named 'capacity'
       const bool __cond = (__size > __lhs.capacity()
                                     ~~~~~~^~~~~~~~
/usr/include/c++/7/bits/basic_string.h:5961:26: error: 'class std::__cxx11::basic_string<char>' has no member named 'capacity'
       && __size <= __rhs.capacity());
                    ~~~~~~^~~~~~~~
/usr/include/c++/7/bits/basic_string.h:5962:32: error: no matching function for call to 'std::__cxx11::basic_string<char>::insert(int, std::__cxx11::basic_string<char>&)'
       return __cond ? std::move(__rhs.insert(0, __lhs))
                       ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:1558:9: note: candidate: template<class _InputIterator, class> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
         ^~~~~~
/usr/include/c++/7/bits/basic_string.h:1558:9: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/basic_string.h:5962:32: note:   candidate expects 3 arguments, 2 provided
       return __cond ? std::move(__rhs.insert(0, __lhs))
                       ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:1592:7: note: candidate: void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator, std::initializer_list<_Tp>) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer = char*]
       insert(iterator __p, initializer_list<_CharT> __l)
       ^~~~~~
/usr/include/c++/7/bits/basic_string.h:1592:7: note:   no known conversion for argument 1 from 'int' to 'std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}'
/usr/include/c++/7/bits/basic_string.h:1719:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator, _CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer = const char*]
       insert(__const_iterator __p, _CharT __c)
       ^~~~~~
/usr/include/c++/7/bits/basic_string.h:1719:7: note:   no known conversion for argument 1 from 'int' to 'std::__cxx11::basic_string<char>::__const_iterator {aka __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >}'
/usr/include/c++/7/bits/basic_string.h: In instantiation of 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]':
/usr/include/c++/7/system_error:354:51:   required from here
/usr/include/c++/7/bits/basic_string.h:5970:23: error: no matching function for call to 'std::__cxx11::basic_string<char>::insert(int, const char*&)'
     { return std::move(__rhs.insert(0, __lhs)); }
              ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:1558:9: note: candidate: template<class _InputIterator, class> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
         ^~~~~~
/usr/include/c++/7/bits/basic_string.h:1558:9: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/basic_string.h:5970:23: note:   candidate expects 3 arguments, 2 provided
     { return std::move(__rhs.insert(0, __lhs)); }
              ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:1592:7: note: candidate: void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator, std::initializer_list<_Tp>) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer = char*]
       insert(iterator __p, initializer_list<_CharT> __l)
       ^~~~~~
/usr/include/c++/7/bits/basic_string.h:1592:7: note:   no known conversion for argument 1 from 'int' to 'std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}'
/usr/include/c++/7/bits/basic_string.h:1719:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator, _CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer = const char*]
       insert(__const_iterator __p, _CharT __c)
       ^~~~~~
/usr/include/c++/7/bits/basic_string.h:1719:7: note:   no known conversion for argument 1 from 'int' to 'std::__cxx11::basic_string<char>::__const_iterator {aka __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >}'
/usr/include/c++/7/bits/basic_string.h: In instantiation of 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]':
/llvm/include/llvm/ADT/StringRef.h:219:37:   required from here
/usr/include/c++/7/bits/basic_string.h:423:22: error: '_M_set_length' was not declared in this scope
       { _M_set_length(0); }
         ~~~~~~~~~~~~~^~~
/usr/include/c++/7/bits/basic_string.h:423:22: note: suggested alternative: '__socklen_t'
       { _M_set_length(0); }
         ~~~~~~~~~~~~~^~~
         __socklen_t
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APFloat.h: In instantiation of 'llvm::APFloat::Storage::Storage(const llvm::fltSemantics&, ArgTypes&& ...) [with ArgTypes = {}]':
/llvm/include/llvm/ADT/APFloat.h:816:29:   required from here
/llvm/include/llvm/ADT/APFloat.h:693:9: error: no matching function for call to 'operator new(sizetype, llvm::APFloat::IEEEFloat*)'
         new (&IEEE) IEEEFloat(Semantics, std::forward<ArgTypes>(Args)...);
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::APFloat::IEEEFloat* {aka llvm::detail::IEEEFloat*}' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APFloat.h:693:9: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::APFloat::IEEEFloat* {aka llvm::detail::IEEEFloat*}'
         new (&IEEE) IEEEFloat(Semantics, std::forward<ArgTypes>(Args)...);
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/APFloat.h:697:9: error: no matching function for call to 'operator new(sizetype, llvm::APFloat::DoubleAPFloat*)'
         new (&Double) DoubleAPFloat(Semantics, std::forward<ArgTypes>(Args)...);
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::APFloat::DoubleAPFloat* {aka llvm::detail::DoubleAPFloat*}' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APFloat.h:697:9: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::APFloat::DoubleAPFloat* {aka llvm::detail::DoubleAPFloat*}'
         new (&Double) DoubleAPFloat(Semantics, std::forward<ArgTypes>(Args)...);
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/APFloat.h: In instantiation of 'llvm::APFloat::Storage::Storage(const llvm::fltSemantics&, ArgTypes&& ...) [with ArgTypes = {long unsigned int&}]':
/llvm/include/llvm/ADT/APFloat.h:837:73:   required from here
/llvm/include/llvm/ADT/APFloat.h:693:9: error: no matching function for call to 'operator new(sizetype, llvm::APFloat::IEEEFloat*)'
         new (&IEEE) IEEEFloat(Semantics, std::forward<ArgTypes>(Args)...);
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::APFloat::IEEEFloat* {aka llvm::detail::IEEEFloat*}' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APFloat.h:693:9: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::APFloat::IEEEFloat* {aka llvm::detail::IEEEFloat*}'
         new (&IEEE) IEEEFloat(Semantics, std::forward<ArgTypes>(Args)...);
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/APFloat.h:697:9: error: no matching function for call to 'operator new(sizetype, llvm::APFloat::DoubleAPFloat*)'
         new (&Double) DoubleAPFloat(Semantics, std::forward<ArgTypes>(Args)...);
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::APFloat::DoubleAPFloat* {aka llvm::detail::DoubleAPFloat*}' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APFloat.h:697:9: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::APFloat::DoubleAPFloat* {aka llvm::detail::DoubleAPFloat*}'
         new (&Double) DoubleAPFloat(Semantics, std::forward<ArgTypes>(Args)...);
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/APFloat.h: In instantiation of 'llvm::APFloat::Storage::Storage(const llvm::fltSemantics&, ArgTypes&& ...) [with ArgTypes = {llvm::APFloatBase::uninitializedTag}]':
/llvm/include/llvm/ADT/APFloat.h:840:35:   required from here
/llvm/include/llvm/ADT/APFloat.h:693:9: error: no matching function for call to 'operator new(sizetype, llvm::APFloat::IEEEFloat*)'
         new (&IEEE) IEEEFloat(Semantics, std::forward<ArgTypes>(Args)...);
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::APFloat::IEEEFloat* {aka llvm::detail::IEEEFloat*}' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APFloat.h:693:9: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::APFloat::IEEEFloat* {aka llvm::detail::IEEEFloat*}'
         new (&IEEE) IEEEFloat(Semantics, std::forward<ArgTypes>(Args)...);
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/APFloat.h:697:9: error: no matching function for call to 'operator new(sizetype, llvm::APFloat::DoubleAPFloat*)'
         new (&Double) DoubleAPFloat(Semantics, std::forward<ArgTypes>(Args)...);
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::APFloat::DoubleAPFloat* {aka llvm::detail::DoubleAPFloat*}' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APFloat.h:697:9: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::APFloat::DoubleAPFloat* {aka llvm::detail::DoubleAPFloat*}'
         new (&Double) DoubleAPFloat(Semantics, std::forward<ArgTypes>(Args)...);
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/APFloat.h: In instantiation of 'llvm::APFloat::Storage::Storage(const llvm::fltSemantics&, ArgTypes&& ...) [with ArgTypes = {const llvm::APInt&}]':
/llvm/include/llvm/ADT/APFloat.h:841:74:   required from here
/llvm/include/llvm/ADT/APFloat.h:693:9: error: no matching function for call to 'operator new(sizetype, llvm::APFloat::IEEEFloat*)'
         new (&IEEE) IEEEFloat(Semantics, std::forward<ArgTypes>(Args)...);
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::APFloat::IEEEFloat* {aka llvm::detail::IEEEFloat*}' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APFloat.h:693:9: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::APFloat::IEEEFloat* {aka llvm::detail::IEEEFloat*}'
         new (&IEEE) IEEEFloat(Semantics, std::forward<ArgTypes>(Args)...);
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/APFloat.h:697:9: error: no matching function for call to 'operator new(sizetype, llvm::APFloat::DoubleAPFloat*)'
         new (&Double) DoubleAPFloat(Semantics, std::forward<ArgTypes>(Args)...);
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::APFloat::DoubleAPFloat* {aka llvm::detail::DoubleAPFloat*}' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/APValue.h:18:0,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/APFloat.h:697:9: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::APFloat::DoubleAPFloat* {aka llvm::detail::DoubleAPFloat*}'
         new (&Double) DoubleAPFloat(Semantics, std::forward<ArgTypes>(Args)...);
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h: In instantiation of 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]':
/llvm/tools/clang/include/clang/Basic/Diagnostic.h:97:25:   required from here
/usr/include/c++/7/bits/basic_string.h:730:17: error: using invalid field 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::<unnamed union>::_M_allocated_capacity'
      _M_destroy(_M_allocated_capacity);
                 ^~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:730:16: error: '_M_destroy' was not declared in this scope
      _M_destroy(_M_allocated_capacity);
      ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:730:16: note: suggested alternative: '_M_data'
      _M_destroy(_M_allocated_capacity);
      ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
      _M_data
/usr/include/c++/7/bits/basic_string.h:732:19: error: '_M_set_length' was not declared in this scope
      _M_set_length(0);
      ~~~~~~~~~~~~~^~~
/usr/include/c++/7/bits/basic_string.h:732:19: note: suggested alternative: '__socklen_t'
      _M_set_length(0);
      ~~~~~~~~~~~~~^~~
      __socklen_t
/usr/include/c++/7/bits/basic_string.h:748:20: error: using invalid field 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::<unnamed union>::_M_allocated_capacity'
       __capacity = _M_allocated_capacity;
                    ^~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:751:16: error: using invalid field 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::<unnamed union>::_M_allocated_capacity'
     _M_destroy(_M_allocated_capacity);
                ^~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:751:15: error: '_M_destroy' was not declared in this scope
     _M_destroy(_M_allocated_capacity);
     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:751:15: note: suggested alternative: '_M_data'
     _M_destroy(_M_allocated_capacity);
     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
     _M_data
/usr/include/c++/7/bits/basic_string.h:755:15: error: '_M_length' was not declared in this scope
      _M_length(__str.length());
      ~~~~~~~~~^~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:756:24: error: 'class std::__cxx11::basic_string<char>' has no member named '_M_allocated_capacity'; did you mean '_S_local_capacity'?
      _M_capacity(__str._M_allocated_capacity);
                  ~~~~~~^~~~~~~~~~~~~~~~~~~~~
                  _S_local_capacity
/usr/include/c++/7/bits/basic_string.h:756:17: error: '_M_capacity' was not declared in this scope
      _M_capacity(__str._M_allocated_capacity);
      ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /llvm/include/llvm/ADT/SmallString.h:16:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/SmallVector.h: In instantiation of 'void llvm::SmallVectorTemplateBase<T, <anonymous> >::push_back(const T&) [with T = clang::FixItHint; bool <anonymous> = false]':
/llvm/tools/clang/include/clang/Basic/Diagnostic.h:1171:45:   required from here
/llvm/include/llvm/ADT/SmallVector.h:214:5: error: no matching function for call to 'operator new(sizetype, void*)'
     ::new ((void*) this->end()) T(Elt);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/ADT/SmallString.h:16:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/SmallVector.h:214:5: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     ::new ((void*) this->end()) T(Elt);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h: In instantiation of 'void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::clear() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]':
/llvm/tools/clang/include/clang/Basic/Diagnostic.h:1300:19:   required from here
/usr/include/c++/7/bits/basic_string.h:1005:22: error: '_M_set_length' was not declared in this scope
       { _M_set_length(0); }
         ~~~~~~~~~~~~~^~~
/usr/include/c++/7/bits/basic_string.h:1005:22: note: suggested alternative: '__socklen_t'
       { _M_set_length(0); }
         ~~~~~~~~~~~~~^~~
         __socklen_t
/usr/include/c++/7/bits/basic_string.h: In instantiation of 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]':
/llvm/tools/clang/include/clang/Basic/PartialDiagnostic.h:44:10:   required from here
/usr/include/c++/7/bits/basic_string.h:666:18: error: using invalid field 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::<unnamed union>::_M_allocated_capacity'
       _M_destroy(_M_allocated_capacity);
                  ^~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:666:17: error: '_M_destroy' was not declared in this scope
       _M_destroy(_M_allocated_capacity);
       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:666:17: note: suggested alternative: '_M_data'
       _M_destroy(_M_allocated_capacity);
       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
       _M_data
/usr/include/c++/7/bits/basic_string.h:668:20: error: '_M_set_length' was not declared in this scope
       _M_set_length(0);
       ~~~~~~~~~~~~~^~~
/usr/include/c++/7/bits/basic_string.h:668:20: note: suggested alternative: '__socklen_t'
       _M_set_length(0);
       ~~~~~~~~~~~~~^~~
       __socklen_t
/usr/include/c++/7/bits/basic_string.h:676:18: error: using invalid field 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::<unnamed union>::_M_allocated_capacity'
       _M_destroy(_M_allocated_capacity);
                  ^~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:676:17: error: '_M_destroy' was not declared in this scope
       _M_destroy(_M_allocated_capacity);
       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:676:17: note: suggested alternative: '_M_data'
       _M_destroy(_M_allocated_capacity);
       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
       _M_data
/usr/include/c++/7/bits/basic_string.h:678:18: error: '_M_capacity' was not declared in this scope
       _M_capacity(__len);
       ~~~~~~~~~~~^~~~~~~
/usr/include/c++/7/bits/basic_string.h:679:20: error: '_M_set_length' was not declared in this scope
       _M_set_length(__len);
       ~~~~~~~~~~~~~^~~~~~~
/usr/include/c++/7/bits/basic_string.h:679:20: note: suggested alternative: '__socklen_t'
       _M_set_length(__len);
       ~~~~~~~~~~~~~^~~~~~~
       __socklen_t
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = unsigned int; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<unsigned int, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(*O.getPointer()));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = long unsigned int; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<long unsigned int, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(const llvm::optional_detail::OptionalStorage<T, <anonymous> >&) [with T = long unsigned int; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:124:3:   required from here
/llvm/include/llvm/ADT/Optional.h:42:20: error: 'struct llvm::AlignedCharArrayUnion<long unsigned int, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(*O.getPointer());
            ~~~~~~~~^~~~~~
In file included from /llvm/include/llvm/ADT/SmallString.h:16:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/SmallVector.h: In instantiation of 'void llvm::SmallVectorTemplateBase<T, <anonymous> >::push_back(T&&) [with T = std::__cxx11::basic_string<char>; bool <anonymous> = false]':
/llvm/include/llvm/Support/Error.h:969:34:   required from here
/llvm/include/llvm/ADT/SmallVector.h:221:5: error: no matching function for call to 'operator new(sizetype, void*)'
     ::new ((void*) this->end()) T(::std::move(Elt));
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/ADT/SmallString.h:16:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/SmallVector.h:221:5: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     ::new ((void*) this->end()) T(::std::move(Elt));
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /llvm/include/llvm/Support/MD5.h:33:0,
                 from /llvm/include/llvm/Support/FileSystem.h:37,
                 from /llvm/tools/clang/include/clang/Basic/FileManager.h:26,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Endian.h: In instantiation of 'T llvm::support::endian::read(const void*, llvm::support::endianness) [with T = short unsigned int]':
/llvm/include/llvm/Support/Endian.h:348:29:   required from here
/llvm/include/llvm/Support/Endian.h:340:28: error: no matching function for call to 'read<short unsigned int, unaligned>(const void*&, llvm::support::endianness&)'
   return read<T, unaligned>(P, E);
          ~~~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/Support/Endian.h:65:19: note: candidate: template<class value_type, <declaration error> > value_type llvm::support::endian::read(const void*, llvm::support::endianness)
 inline value_type read(const void *memory, endianness endian) {
                   ^~~~
/llvm/include/llvm/Support/Endian.h:65:19: note:   template argument deduction/substitution failed:
/llvm/include/llvm/Support/Endian.h:78:19: note: candidate: template<class value_type, llvm::support::endianness endian, <declaration error> > value_type llvm::support::endian::read(const void*)
 inline value_type read(const void *memory) {
                   ^~~~
/llvm/include/llvm/Support/Endian.h:78:19: note:   template argument deduction/substitution failed:
/llvm/include/llvm/Support/Endian.h:340:28: error: could not convert template argument 'unaligned' from 'llvm::support::<unnamed enum>' to 'llvm::support::endianness'
   return read<T, unaligned>(P, E);
          ~~~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/Support/Endian.h:339:32: note: candidate: template<class T> T llvm::support::endian::read(const void*, llvm::support::endianness)
 template <typename T> inline T read(const void *P, endianness E) {
                                ^~~~
/llvm/include/llvm/Support/Endian.h:339:32: note:   template argument deduction/substitution failed:
/llvm/include/llvm/Support/Endian.h:340:28: error: wrong number of template arguments (2, should be 1)
   return read<T, unaligned>(P, E);
          ~~~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/Support/Endian.h: In instantiation of 'T llvm::support::endian::read(const void*, llvm::support::endianness) [with T = unsigned int]':
/llvm/include/llvm/Support/Endian.h:351:29:   required from here
/llvm/include/llvm/Support/Endian.h:340:28: error: no matching function for call to 'read<unsigned int, unaligned>(const void*&, llvm::support::endianness&)'
/llvm/include/llvm/Support/Endian.h:65:19: note: candidate: template<class value_type, <declaration error> > value_type llvm::support::endian::read(const void*, llvm::support::endianness)
 inline value_type read(const void *memory, endianness endian) {
                   ^~~~
/llvm/include/llvm/Support/Endian.h:65:19: note:   template argument deduction/substitution failed:
/llvm/include/llvm/Support/Endian.h:78:19: note: candidate: template<class value_type, llvm::support::endianness endian, <declaration error> > value_type llvm::support::endian::read(const void*)
 inline value_type read(const void *memory) {
                   ^~~~
/llvm/include/llvm/Support/Endian.h:78:19: note:   template argument deduction/substitution failed:
/llvm/include/llvm/Support/Endian.h:340:28: error: could not convert template argument 'unaligned' from 'llvm::support::<unnamed enum>' to 'llvm::support::endianness'
   return read<T, unaligned>(P, E);
          ~~~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/Support/Endian.h:339:32: note: candidate: template<class T> T llvm::support::endian::read(const void*, llvm::support::endianness)
 template <typename T> inline T read(const void *P, endianness E) {
                                ^~~~
/llvm/include/llvm/Support/Endian.h:339:32: note:   template argument deduction/substitution failed:
/llvm/include/llvm/Support/Endian.h:340:28: error: wrong number of template arguments (2, should be 1)
   return read<T, unaligned>(P, E);
          ~~~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/Support/Endian.h: In instantiation of 'T llvm::support::endian::read(const void*, llvm::support::endianness) [with T = long unsigned int]':
/llvm/include/llvm/Support/Endian.h:354:29:   required from here
/llvm/include/llvm/Support/Endian.h:340:28: error: no matching function for call to 'read<long unsigned int, unaligned>(const void*&, llvm::support::endianness&)'
/llvm/include/llvm/Support/Endian.h:65:19: note: candidate: template<class value_type, <declaration error> > value_type llvm::support::endian::read(const void*, llvm::support::endianness)
 inline value_type read(const void *memory, endianness endian) {
                   ^~~~
/llvm/include/llvm/Support/Endian.h:65:19: note:   template argument deduction/substitution failed:
/llvm/include/llvm/Support/Endian.h:78:19: note: candidate: template<class value_type, llvm::support::endianness endian, <declaration error> > value_type llvm::support::endian::read(const void*)
 inline value_type read(const void *memory) {
                   ^~~~
/llvm/include/llvm/Support/Endian.h:78:19: note:   template argument deduction/substitution failed:
/llvm/include/llvm/Support/Endian.h:340:28: error: could not convert template argument 'unaligned' from 'llvm::support::<unnamed enum>' to 'llvm::support::endianness'
   return read<T, unaligned>(P, E);
          ~~~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/Support/Endian.h:339:32: note: candidate: template<class T> T llvm::support::endian::read(const void*, llvm::support::endianness)
 template <typename T> inline T read(const void *P, endianness E) {
                                ^~~~
/llvm/include/llvm/Support/Endian.h:339:32: note:   template argument deduction/substitution failed:
/llvm/include/llvm/Support/Endian.h:340:28: error: wrong number of template arguments (2, should be 1)
   return read<T, unaligned>(P, E);
          ~~~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/Support/Endian.h: In instantiation of 'void llvm::support::endian::write(void*, T, llvm::support::endianness) [with T = short unsigned int]':
/llvm/include/llvm/Support/Endian.h:383:26:   required from here
/llvm/include/llvm/Support/Endian.h:375:22: error: no matching function for call to 'write<short unsigned int, unaligned>(void*&, short unsigned int&, llvm::support::endianness&)'
   write<T, unaligned>(P, V, E);
   ~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/llvm/include/llvm/Support/Endian.h:99:13: note: candidate: template<class value_type, <declaration error> > void llvm::support::endian::write(void*, value_type, llvm::support::endianness)
 inline void write(void *memory, value_type value, endianness endian) {
             ^~~~~
/llvm/include/llvm/Support/Endian.h:99:13: note:   template argument deduction/substitution failed:
/llvm/include/llvm/Support/Endian.h:109:13: note: candidate: template<class value_type, llvm::support::endianness endian, <declaration error> > void llvm::support::endian::write(void*, value_type)
 inline void write(void *memory, value_type value) {
             ^~~~~
/llvm/include/llvm/Support/Endian.h:109:13: note:   template argument deduction/substitution failed:
/llvm/include/llvm/Support/Endian.h:375:22: error: could not convert template argument 'unaligned' from 'llvm::support::<unnamed enum>' to 'llvm::support::endianness'
   write<T, unaligned>(P, V, E);
   ~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/llvm/include/llvm/Support/Endian.h:374:35: note: candidate: template<class T> void llvm::support::endian::write(void*, T, llvm::support::endianness)
 template <typename T> inline void write(void *P, T V, endianness E) {
                                   ^~~~~
/llvm/include/llvm/Support/Endian.h:374:35: note:   template argument deduction/substitution failed:
/llvm/include/llvm/Support/Endian.h:375:22: error: wrong number of template arguments (2, should be 1)
   write<T, unaligned>(P, V, E);
   ~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/llvm/include/llvm/Support/Endian.h: In instantiation of 'void llvm::support::endian::write(void*, T, llvm::support::endianness) [with T = unsigned int]':
/llvm/include/llvm/Support/Endian.h:386:26:   required from here
/llvm/include/llvm/Support/Endian.h:375:22: error: no matching function for call to 'write<unsigned int, unaligned>(void*&, unsigned int&, llvm::support::endianness&)'
/llvm/include/llvm/Support/Endian.h:99:13: note: candidate: template<class value_type, <declaration error> > void llvm::support::endian::write(void*, value_type, llvm::support::endianness)
 inline void write(void *memory, value_type value, endianness endian) {
             ^~~~~
/llvm/include/llvm/Support/Endian.h:99:13: note:   template argument deduction/substitution failed:
/llvm/include/llvm/Support/Endian.h:109:13: note: candidate: template<class value_type, llvm::support::endianness endian, <declaration error> > void llvm::support::endian::write(void*, value_type)
 inline void write(void *memory, value_type value) {
             ^~~~~
/llvm/include/llvm/Support/Endian.h:109:13: note:   template argument deduction/substitution failed:
/llvm/include/llvm/Support/Endian.h:375:22: error: could not convert template argument 'unaligned' from 'llvm::support::<unnamed enum>' to 'llvm::support::endianness'
   write<T, unaligned>(P, V, E);
   ~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/llvm/include/llvm/Support/Endian.h:374:35: note: candidate: template<class T> void llvm::support::endian::write(void*, T, llvm::support::endianness)
 template <typename T> inline void write(void *P, T V, endianness E) {
                                   ^~~~~
/llvm/include/llvm/Support/Endian.h:374:35: note:   template argument deduction/substitution failed:
/llvm/include/llvm/Support/Endian.h:375:22: error: wrong number of template arguments (2, should be 1)
   write<T, unaligned>(P, V, E);
   ~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/llvm/include/llvm/Support/Endian.h: In instantiation of 'void llvm::support::endian::write(void*, T, llvm::support::endianness) [with T = long unsigned int]':
/llvm/include/llvm/Support/Endian.h:389:26:   required from here
/llvm/include/llvm/Support/Endian.h:375:22: error: no matching function for call to 'write<long unsigned int, unaligned>(void*&, long unsigned int&, llvm::support::endianness&)'
/llvm/include/llvm/Support/Endian.h:99:13: note: candidate: template<class value_type, <declaration error> > void llvm::support::endian::write(void*, value_type, llvm::support::endianness)
 inline void write(void *memory, value_type value, endianness endian) {
             ^~~~~
/llvm/include/llvm/Support/Endian.h:99:13: note:   template argument deduction/substitution failed:
/llvm/include/llvm/Support/Endian.h:109:13: note: candidate: template<class value_type, llvm::support::endianness endian, <declaration error> > void llvm::support::endian::write(void*, value_type)
 inline void write(void *memory, value_type value) {
             ^~~~~
/llvm/include/llvm/Support/Endian.h:109:13: note:   template argument deduction/substitution failed:
/llvm/include/llvm/Support/Endian.h:375:22: error: could not convert template argument 'unaligned' from 'llvm::support::<unnamed enum>' to 'llvm::support::endianness'
   write<T, unaligned>(P, V, E);
   ~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/llvm/include/llvm/Support/Endian.h:374:35: note: candidate: template<class T> void llvm::support::endian::write(void*, T, llvm::support::endianness)
 template <typename T> inline void write(void *P, T V, endianness E) {
                                   ^~~~~
/llvm/include/llvm/Support/Endian.h:374:35: note:   template argument deduction/substitution failed:
/llvm/include/llvm/Support/Endian.h:375:22: error: wrong number of template arguments (2, should be 1)
   write<T, unaligned>(P, V, E);
   ~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h: In instantiation of 'typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&) [with _CharT = char; typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type = bool]':
/llvm/include/llvm/Support/FileSystem.h:1165:74:   required from here
/usr/include/c++/7/bits/basic_string.h:6010:21: error: 'const class std::__cxx11::basic_string<char>' has no member named 'size'
     { return (__lhs.size() == __rhs.size()
               ~~~~~~^~~~
/usr/include/c++/7/bits/basic_string.h:6010:37: error: 'const class std::__cxx11::basic_string<char>' has no member named 'size'
     { return (__lhs.size() == __rhs.size()
                               ~~~~~~^~~~
/usr/include/c++/7/bits/basic_string.h:6012:17: error: 'const class std::__cxx11::basic_string<char>' has no member named 'size'
           __lhs.size())); }
           ~~~~~~^~~~
In file included from /llvm/include/llvm/ADT/SmallString.h:16:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/SmallVector.h: In instantiation of 'void llvm::SmallVectorTemplateBase<T, <anonymous> >::push_back(const T&) [with T = llvm::SMFixIt; bool <anonymous> = false]':
/llvm/include/llvm/Support/SourceMgr.h:295:26:   required from here
/llvm/include/llvm/ADT/SmallVector.h:214:5: error: no matching function for call to 'operator new(sizetype, void*)'
     ::new ((void*) this->end()) T(Elt);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/ADT/SmallString.h:16:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/SmallVector.h:214:5: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     ::new ((void*) this->end()) T(Elt);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /llvm/tools/clang/include/clang/Basic/FileManager.h:25:0,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/ErrorOr.h: In instantiation of 'llvm::ErrorOr<T>::ErrorOr(OtherT&&, typename std::enable_if<std::is_convertible<AltKeyT, KeyT>::value>::type*) [with OtherT = std::__cxx11::basic_string<char>; T = std::__cxx11::basic_string<char>; typename std::enable_if<std::is_convertible<AltKeyT, KeyT>::value>::type = void]':
/llvm/include/llvm/Support/VirtualFileSystem.h:111:36:   required from here
/llvm/include/llvm/Support/ErrorOr.h:91:5: error: no matching function for call to 'operator new(sizetype, llvm::ErrorOr<std::__cxx11::basic_string<char> >::storage_type*)'
     new (getStorage()) storage_type(std::forward<OtherT>(Val));
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::ErrorOr<std::__cxx11::basic_string<char> >::storage_type* {aka std::__cxx11::basic_string<char>*}' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/FileManager.h:25:0,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/ErrorOr.h:91:5: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::ErrorOr<std::__cxx11::basic_string<char> >::storage_type* {aka std::__cxx11::basic_string<char>*}'
     new (getStorage()) storage_type(std::forward<OtherT>(Val));
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/include/llvm/Support/ErrorOr.h: In instantiation of 'llvm::ErrorOr<T>::ErrorOr(std::error_code) [with T = std::__cxx11::basic_string<char>]':
/llvm/include/llvm/Support/VirtualFileSystem.h:113:30:   required from here
/llvm/include/llvm/Support/ErrorOr.h:83:5: error: no matching function for call to 'operator new(sizetype, std::error_code*)'
     new (getErrorStorage()) std::error_code(EC);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'std::error_code*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/FileManager.h:25:0,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/ErrorOr.h:83:5: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'std::error_code*'
     new (getErrorStorage()) std::error_code(EC);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/include/llvm/Support/ErrorOr.h: In instantiation of 'llvm::ErrorOr<T>::ErrorOr(OtherT&&, typename std::enable_if<std::is_convertible<AltKeyT, KeyT>::value>::type*) [with OtherT = const std::__cxx11::basic_string<char>&; T = std::__cxx11::basic_string<char>; typename std::enable_if<std::is_convertible<AltKeyT, KeyT>::value>::type = void]':
/llvm/include/llvm/Support/VirtualFileSystem.h:465:12:   required from here
/llvm/include/llvm/Support/ErrorOr.h:91:5: error: no matching function for call to 'operator new(sizetype, llvm::ErrorOr<std::__cxx11::basic_string<char> >::storage_type*)'
     new (getStorage()) storage_type(std::forward<OtherT>(Val));
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::ErrorOr<std::__cxx11::basic_string<char> >::storage_type* {aka std::__cxx11::basic_string<char>*}' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/FileManager.h:25:0,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/ErrorOr.h:91:5: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::ErrorOr<std::__cxx11::basic_string<char> >::storage_type* {aka std::__cxx11::basic_string<char>*}'
     new (getStorage()) storage_type(std::forward<OtherT>(Val));
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /llvm/include/llvm/Support/Host.h:16:0,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringMap.h: In instantiation of 'ValueTy& llvm::StringMap<ValueTy, AllocatorTy>::operator[](llvm::StringRef) [with ValueTy = unsigned int; AllocatorTy = llvm::MallocAllocator]':
/llvm/tools/clang/include/clang/Basic/Module.h:432:32:   required from here
/llvm/include/llvm/ADT/StringMap.h:355:47: error: base operand of '->' has non-pointer type 'llvm::StringMapIterator<unsigned int>'
   ValueTy &operator[](StringRef Key) { return try_emplace(Key).first->second; }
                                               ^~~~~~~~~~~
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::ARMInterruptAttr::InterruptType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::ARMInterruptAttr::InterruptType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(*O.getPointer()));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::BlocksAttr::BlockType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::BlocksAttr::BlockType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::CallableWhenAttr::ConsumedState; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::CallableWhenAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::ConsumableAttr::ConsumedState; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::ConsumableAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::DiagnoseIfAttr::DiagnosticType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::DiagnoseIfAttr::DiagnosticType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::EnumExtensibilityAttr::Kind; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::EnumExtensibilityAttr::Kind, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::LoopHintAttr::OptionType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::LoopHintAttr::OptionType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::LoopHintAttr::LoopHintState; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::LoopHintAttr::LoopHintState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::MipsInterruptAttr::InterruptType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::MipsInterruptAttr::InterruptType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::OMPDeclareSimdDeclAttr::BranchStateTy; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::OMPDeclareSimdDeclAttr::BranchStateTy, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::OMPDeclareTargetDeclAttr::MapTypeTy; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::OMPDeclareTargetDeclAttr::MapTypeTy, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::ObjCMethodFamilyAttr::FamilyKind; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::ObjCMethodFamilyAttr::FamilyKind, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::ParamTypestateAttr::ConsumedState; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::ParamTypestateAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::PcsAttr::PCSType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::PcsAttr::PCSType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::RISCVInterruptAttr::InterruptType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::RISCVInterruptAttr::InterruptType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::ReturnTypestateAttr::ConsumedState; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::ReturnTypestateAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::SetTypestateAttr::ConsumedState; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::SetTypestateAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::TestTypestateAttr::ConsumedState; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::TestTypestateAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::TypeVisibilityAttr::VisibilityType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::TypeVisibilityAttr::VisibilityType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::VisibilityAttr::VisibilityType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::VisibilityAttr::VisibilityType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
In file included from /llvm/include/llvm/ADT/SmallString.h:16:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/SmallVector.h: In instantiation of 'void llvm::SmallVectorTemplateBase<T, <anonymous> >::push_back(T&&) [with T = std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>; bool <anonymous> = false]':
/llvm/tools/clang/include/clang/Basic/SourceManager.h:784:80:   required from here
/llvm/include/llvm/ADT/SmallVector.h:221:5: error: no matching function for call to 'operator new(sizetype, void*)'
     ::new ((void*) this->end()) T(::std::move(Elt));
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/ADT/SmallString.h:16:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/SmallVector.h:221:5: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     ::new ((void*) this->end()) T(::std::move(Elt));
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /llvm/include/llvm/Support/Host.h:16:0,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringMap.h: In instantiation of 'ValueTy& llvm::StringMap<ValueTy, AllocatorTy>::operator[](llvm::StringRef) [with ValueTy = clang::OpenCLOptions::Info; AllocatorTy = llvm::MallocAllocator]':
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:66:15:   required from here
/llvm/include/llvm/ADT/StringMap.h:355:47: error: base operand of '->' has non-pointer type 'llvm::StringMapIterator<clang::OpenCLOptions::Info>'
   ValueTy &operator[](StringRef Key) { return try_emplace(Key).first->second; }
                                               ^~~~~~~~~~~
/llvm/include/llvm/ADT/StringMap.h: In instantiation of 'ValueTy& llvm::StringMap<ValueTy, AllocatorTy>::operator[](llvm::StringRef) [with ValueTy = bool; AllocatorTy = llvm::MallocAllocator]':
/llvm/tools/clang/include/clang/Basic/TargetInfo.h:1059:18:   required from here
/llvm/include/llvm/ADT/StringMap.h:355:47: error: base operand of '->' has non-pointer type 'llvm::StringMapIterator<bool>'
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::LangAS; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::LangAS, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(*O.getPointer()));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::CharUnits; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::CharUnits, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::NullabilityKind; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:127:3:   required from here
/llvm/include/llvm/ADT/Optional.h:49:20: error: 'struct llvm::AlignedCharArrayUnion<clang::NullabilityKind, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
In file included from /llvm/tools/clang/include/clang/AST/Expr.h:17:0,
                 from /llvm/tools/clang/include/clang/AST/Attr.h:19,
                 from /llvm/tools/clang/include/clang/AST/TypeLoc.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:23,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTVector.h: In instantiation of 'void clang::ASTVector<T>::push_back(clang::ASTVector<T>::const_reference, const clang::ASTContext&) [with T = clang::DeclAccessPair; clang::ASTVector<T>::const_reference = const clang::DeclAccessPair&]':
/llvm/tools/clang/include/clang/AST/ASTUnresolvedSet.h:56:51:   required from here
/llvm/tools/clang/include/clang/AST/ASTVector.h:165:7: error: no matching function for call to 'operator new(sizetype, clang::DeclAccessPair*&)'
       new (End) T(Elt);
       ^~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'clang::DeclAccessPair*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/Expr.h:17:0,
                 from /llvm/tools/clang/include/clang/AST/Attr.h:19,
                 from /llvm/tools/clang/include/clang/AST/TypeLoc.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:23,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTVector.h:165:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'clang::DeclAccessPair*'
       new (End) T(Elt);
       ^~~~~~~~~~~~~~~~
In file included from /llvm/tools/clang/include/clang/AST/AST.h:21:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/DeclTemplate.h: In instantiation of 'void clang::DefaultArgStorage<ParmDecl, ArgType>::setInherited(const clang::ASTContext&, ParmDecl*) [with ParmDecl = clang::TemplateTypeParmDecl; ArgType = clang::TypeSourceInfo*]':
/llvm/tools/clang/include/clang/AST/DeclTemplate.h:1227:41:   required from here
/llvm/tools/clang/include/clang/AST/DeclTemplate.h:353:26: error: no matching function for call to 'operator new(sizetype, void*)'
       ValueOrInherited = new (allocateDefaultArgStorageChain(C))
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           Chain{InheritedFrom, ValueOrInherited.template get<ArgType>()};
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/AST.h:21:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/DeclTemplate.h:353:26: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
       ValueOrInherited = new (allocateDefaultArgStorageChain(C))
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           Chain{InheritedFrom, ValueOrInherited.template get<ArgType>()};
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/tools/clang/include/clang/AST/DeclTemplate.h: In instantiation of 'void clang::DefaultArgStorage<ParmDecl, ArgType>::setInherited(const clang::ASTContext&, ParmDecl*) [with ParmDecl = clang::NonTypeTemplateParmDecl; ArgType = clang::Expr*]':
/llvm/tools/clang/include/clang/AST/DeclTemplate.h:1356:41:   required from here
/llvm/tools/clang/include/clang/AST/DeclTemplate.h:353:26: error: no matching function for call to 'operator new(sizetype, void*)'
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/AST.h:21:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/DeclTemplate.h:353:26: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
       ValueOrInherited = new (allocateDefaultArgStorageChain(C))
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           Chain{InheritedFrom, ValueOrInherited.template get<ArgType>()};
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/tools/clang/include/clang/AST/DeclTemplate.h: In instantiation of 'void clang::DefaultArgStorage<ParmDecl, ArgType>::setInherited(const clang::ASTContext&, ParmDecl*) [with ParmDecl = clang::TemplateTemplateParmDecl; ArgType = clang::TemplateArgumentLoc*]':
/llvm/tools/clang/include/clang/AST/DeclTemplate.h:1587:41:   required from here
/llvm/tools/clang/include/clang/AST/DeclTemplate.h:353:26: error: no matching function for call to 'operator new(sizetype, void*)'
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/AST/AST.h:21:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/DeclTemplate.h:353:26: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
       ValueOrInherited = new (allocateDefaultArgStorageChain(C))
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           Chain{InheritedFrom, ValueOrInherited.template get<ArgType>()};
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /llvm/include/llvm/ADT/SmallString.h:16:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/SmallVector.h: In instantiation of 'void llvm::SmallVectorImpl<T>::resize(llvm::SmallVectorImpl<T>::size_type) [with T = clang::Expr*; llvm::SmallVectorImpl<T>::size_type = long unsigned int]':
/llvm/tools/clang/include/clang/AST/StmtOpenMP.h:756:27:   required from here
/llvm/include/llvm/ADT/SmallVector.h:351:9: error: no matching function for call to 'operator new(sizetype, clang::Expr**)'
         new (&*I) T();
         ^~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'clang::Expr**' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/ADT/SmallString.h:16:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/SmallVector.h:351:9: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'clang::Expr**'
         new (&*I) T();
         ^~~~~~~~~~~~~
/llvm/include/llvm/ADT/SmallVector.h: In instantiation of 'void llvm::SmallVectorImpl<T>::emplace_back(ArgTypes&& ...) [with ArgTypes = {}; T = clang::ast_matchers::internal::BoundNodesMap]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:227:29:   required from here
/llvm/include/llvm/ADT/SmallVector.h:647:5: error: no matching function for call to 'operator new(sizetype, void*)'
     ::new ((void *)this->end()) T(std::forward<ArgTypes>(Args)...);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/ADT/SmallString.h:16:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/SmallVector.h:647:5: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     ::new ((void *)this->end()) T(std::forward<ArgTypes>(Args)...);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::UnaryExprOrTypeTraitExpr>*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<const clang::ast_matchers::internal::Matcher<clang::UnaryExprOrTypeTraitExpr>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::UnaryExprOrTypeTraitExpr>*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<const clang::ast_matchers::internal::Matcher<clang::UnaryExprOrTypeTraitExpr>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::UnaryExprOrTypeTraitExpr>*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1410:25:   required from 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Stmt; InnerT = clang::UnaryExprOrTypeTraitExpr]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Stmt, clang::UnaryExprOrTypeTraitExpr>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:2499:26:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::UnaryExprOrTypeTraitExpr>*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::UnaryExprOrTypeTraitExpr>*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::UnaryExprOrTypeTraitExpr>*> >::_Base_type {aka std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::UnaryExprOrTypeTraitExpr>*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::UnaryExprOrTypeTraitExpr>*> >::_Base_type {aka struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::UnaryExprOrTypeTraitExpr>*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:67:0,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from Coords.h:6,
                 from ASTToCoords.h:6,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Stmt; InnerT = clang::UnaryExprOrTypeTraitExpr]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Stmt, clang::UnaryExprOrTypeTraitExpr>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:2499:26:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1376:20: note:   initializing argument 1 of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<T>*>) [with T = clang::UnaryExprOrTypeTraitExpr]'
 BindableMatcher<T> makeAllOfComposite(
                    ^~~~~~~~~~~~~~~~~~
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::VariadicOperatorMatcher<Ps>::operator clang::ast_matchers::internal::Matcher<From>() const [with T = clang::UnaryExprOrTypeTraitExpr; Ps = {clang::ast_matchers::internal::VariadicOperatorMatcher<clang::ast_matchers::internal::Matcher<clang::UnaryExprOrTypeTraitExpr>, clang::ast_matchers::internal::Matcher<clang::UnaryExprOrTypeTraitExpr> >, const clang::ast_matchers::internal::Matcher<clang::UnaryExprOrTypeTraitExpr>&}]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:2499:26:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1338:16: error: 'getMatchers' was not declared in this scope
                getMatchers<T>(llvm::index_sequence_for<Ps...>()))
                ^~~~~~~~~~~~~~
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1338:16: note: suggested alternative: 'getdate_err'
                getMatchers<T>(llvm::index_sequence_for<Ps...>()))
                ^~~~~~~~~~~~~~
                getdate_err
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::VariadicOperatorMatcher<Ps>::operator clang::ast_matchers::internal::Matcher<From>() const [with T = clang::UnaryExprOrTypeTraitExpr; Ps = {clang::ast_matchers::internal::Matcher<clang::UnaryExprOrTypeTraitExpr>, const clang::ast_matchers::internal::Matcher<clang::UnaryExprOrTypeTraitExpr>&}]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:2507:47:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1338:16: error: 'getMatchers' was not declared in this scope
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1338:16: note: suggested alternative: 'getdate_err'
                getMatchers<T>(llvm::index_sequence_for<Ps...>()))
                ^~~~~~~~~~~~~~
                getdate_err
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::VariadicOperatorMatcher<Ps>::operator clang::ast_matchers::internal::Matcher<From>() const [with T = clang::CXXRecordDecl; Ps = {const clang::ast_matchers::internal::Matcher<clang::NamedDecl>&, clang::ast_matchers::internal::Matcher<clang::CXXRecordDecl>}]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:2630:65:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1338:16: error: 'getMatchers' was not declared in this scope
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1338:16: note: suggested alternative: 'getdate_err'
                getMatchers<T>(llvm::index_sequence_for<Ps...>()))
                ^~~~~~~~~~~~~~
                getdate_err
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h: In instantiation of 'int std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::compare(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:2969:44:   required from here
/usr/include/c++/7/bits/basic_string.h:2832:20: error: '_S_compare' was not declared in this scope
    __r = _S_compare(__size, __osize);
          ~~~~~~~~~~^~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:2832:20: note: suggested alternative: 'compare'
    __r = _S_compare(__size, __osize);
          ~~~~~~~~~~^~~~~~~~~~~~~~~~~
          compare
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CallExpr>*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<const clang::ast_matchers::internal::Matcher<clang::CallExpr>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::CallExpr>*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<const clang::ast_matchers::internal::Matcher<clang::CallExpr>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::CallExpr>*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1410:25:   required from 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Stmt; InnerT = clang::CallExpr]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Stmt, clang::CallExpr>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:3087:47:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CallExpr>*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CallExpr>*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CallExpr>*> >::_Base_type {aka std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CallExpr>*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CallExpr>*> >::_Base_type {aka struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CallExpr>*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:67:0,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from Coords.h:6,
                 from ASTToCoords.h:6,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Stmt; InnerT = clang::CallExpr]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Stmt, clang::CallExpr>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:3087:47:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1376:20: note:   initializing argument 1 of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<T>*>) [with T = clang::CallExpr]'
 BindableMatcher<T> makeAllOfComposite(
                    ^~~~~~~~~~~~~~~~~~
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::VariadicOperatorMatcher<Ps>::operator clang::ast_matchers::internal::Matcher<From>() const [with T = clang::Expr; Ps = {clang::ast_matchers::internal::PolymorphicMatcherWithParam1<clang::ast_matchers::internal::matcher_hasType0Matcher, clang::ast_matchers::internal::Matcher<clang::QualType>, void(clang::ast_matchers::internal::TypeList<clang::Expr, clang::FriendDecl, clang::TypedefNameDecl, clang::ValueDecl>)>, clang::ast_matchers::internal::PolymorphicMatcherWithParam1<clang::ast_matchers::internal::matcher_hasType0Matcher, clang::ast_matchers::internal::Matcher<clang::QualType>, void(clang::ast_matchers::internal::TypeList<clang::Expr, clang::FriendDecl, clang::TypedefNameDecl, clang::ValueDecl>)>}]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:3268:68:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1338:16: error: 'getMatchers' was not declared in this scope
                getMatchers<T>(llvm::index_sequence_for<Ps...>()))
                ^~~~~~~~~~~~~~
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1338:16: note: suggested alternative: 'getdate_err'
                getMatchers<T>(llvm::index_sequence_for<Ps...>()))
                ^~~~~~~~~~~~~~
                getdate_err
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::VariadicOperatorMatcher<Ps>::operator clang::ast_matchers::internal::Matcher<From>() const [with T = clang::Expr; Ps = {clang::ast_matchers::internal::PolymorphicMatcherWithParam1<clang::ast_matchers::internal::matcher_hasType1Matcher, clang::ast_matchers::internal::Matcher<clang::Decl>, void(clang::ast_matchers::internal::TypeList<clang::Expr, clang::FriendDecl, clang::ValueDecl>)>, clang::ast_matchers::internal::PolymorphicMatcherWithParam1<clang::ast_matchers::internal::matcher_hasType0Matcher, clang::ast_matchers::internal::Matcher<clang::QualType>, void(clang::ast_matchers::internal::TypeList<clang::Expr, clang::FriendDecl, clang::TypedefNameDecl, clang::ValueDecl>)>}]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:3276:68:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1338:16: error: 'getMatchers' was not declared in this scope
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1338:16: note: suggested alternative: 'getdate_err'
                getMatchers<T>(llvm::index_sequence_for<Ps...>()))
                ^~~~~~~~~~~~~~
                getdate_err
In file included from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:67:0,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from Coords.h:6,
                 from ASTToCoords.h:6,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'bool clang::ast_matchers::internal::matchesFirstInPointerRange(const MatcherT&, IteratorT, IteratorT, clang::ast_matchers::internal::ASTMatchFinder*, clang::ast_matchers::internal::BoundNodesTreeBuilder*) [with MatcherT = clang::ast_matchers::internal::Matcher<clang::Decl>; IteratorT = clang::UnresolvedSetIterator]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:3336:70:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:636:31: error: no match for 'operator!=' (operand types are 'clang::UnresolvedSetIterator' and 'clang::UnresolvedSetIterator')
   for (IteratorT I = Start; I != End; ++I) {
                             ~~^~~~~~
In file included from /llvm/tools/clang/include/clang/AST/ASTContext.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/CanonicalType.h:207:13: note: candidate: template<class T, class U> bool clang::operator!=(clang::CanQual<T>, clang::CanQual<U>)
 inline bool operator!=(CanQual<T> x, CanQual<U> y) {
             ^~~~~~~~
/llvm/tools/clang/include/clang/AST/CanonicalType.h:207:13: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:67:0,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from Coords.h:6,
                 from ASTToCoords.h:6,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:636:31: note:   'clang::UnresolvedSetIterator' is not derived from 'clang::CanQual<T>'
   for (IteratorT I = Start; I != End; ++I) {
                             ~~^~~~~~
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:19:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/Basic/SourceLocation.h:187:13: note: candidate: bool clang::operator!=(const clang::SourceLocation&, const clang::SourceLocation&)
 inline bool operator!=(const SourceLocation &LHS, const SourceLocation &RHS) {
             ^~~~~~~~
/llvm/tools/clang/include/clang/Basic/SourceLocation.h:187:13: note:   no known conversion for argument 1 from 'clang::UnresolvedSetIterator' to 'const clang::SourceLocation&'
In file included from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:67:0,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from Coords.h:6,
                 from ASTToCoords.h:6,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:636:39: error: no match for 'operator++' (operand type is 'clang::UnresolvedSetIterator')
   for (IteratorT I = Start; I != End; ++I) {
                                       ^~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXMethodDecl>*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<const clang::ast_matchers::internal::Matcher<clang::CXXMethodDecl>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXMethodDecl>*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<const clang::ast_matchers::internal::Matcher<clang::CXXMethodDecl>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXMethodDecl>*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1410:25:   required from 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Decl; InnerT = clang::CXXMethodDecl]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Decl, clang::CXXMethodDecl>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:3819:64:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXMethodDecl>*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXMethodDecl>*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXMethodDecl>*> >::_Base_type {aka std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXMethodDecl>*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXMethodDecl>*> >::_Base_type {aka struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXMethodDecl>*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:67:0,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from Coords.h:6,
                 from ASTToCoords.h:6,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Decl; InnerT = clang::CXXMethodDecl]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Decl, clang::CXXMethodDecl>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:3819:64:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1376:20: note:   initializing argument 1 of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<T>*>) [with T = clang::CXXMethodDecl]'
 BindableMatcher<T> makeAllOfComposite(
                    ^~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXOperatorCallExpr>*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<const clang::ast_matchers::internal::Matcher<clang::CXXOperatorCallExpr>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXOperatorCallExpr>*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<const clang::ast_matchers::internal::Matcher<clang::CXXOperatorCallExpr>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXOperatorCallExpr>*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1410:25:   required from 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Stmt; InnerT = clang::CXXOperatorCallExpr]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Stmt, clang::CXXOperatorCallExpr>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:3819:66:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXOperatorCallExpr>*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXOperatorCallExpr>*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXOperatorCallExpr>*> >::_Base_type {aka std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXOperatorCallExpr>*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXOperatorCallExpr>*> >::_Base_type {aka struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXOperatorCallExpr>*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:67:0,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from Coords.h:6,
                 from ASTToCoords.h:6,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Stmt; InnerT = clang::CXXOperatorCallExpr]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Stmt, clang::CXXOperatorCallExpr>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:3819:66:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1376:20: note:   initializing argument 1 of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<T>*>) [with T = clang::CXXOperatorCallExpr]'
 BindableMatcher<T> makeAllOfComposite(
                    ^~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXConstructorDecl>*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<const clang::ast_matchers::internal::Matcher<clang::CXXConstructorDecl>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXConstructorDecl>*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<const clang::ast_matchers::internal::Matcher<clang::CXXConstructorDecl>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXConstructorDecl>*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1410:25:   required from 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Decl; InnerT = clang::CXXConstructorDecl]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Decl, clang::CXXConstructorDecl>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:3831:64:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXConstructorDecl>*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXConstructorDecl>*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXConstructorDecl>*> >::_Base_type {aka std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXConstructorDecl>*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXConstructorDecl>*> >::_Base_type {aka struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXConstructorDecl>*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:67:0,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from Coords.h:6,
                 from ASTToCoords.h:6,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Decl; InnerT = clang::CXXConstructorDecl]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Decl, clang::CXXConstructorDecl>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:3831:64:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1376:20: note:   initializing argument 1 of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<T>*>) [with T = clang::CXXConstructorDecl]'
 BindableMatcher<T> makeAllOfComposite(
                    ^~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXConstructExpr>*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<const clang::ast_matchers::internal::Matcher<clang::CXXConstructExpr>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXConstructExpr>*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<const clang::ast_matchers::internal::Matcher<clang::CXXConstructExpr>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXConstructExpr>*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1410:25:   required from 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Stmt; InnerT = clang::CXXConstructExpr]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Stmt, clang::CXXConstructExpr>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:3831:66:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXConstructExpr>*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXConstructExpr>*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXConstructExpr>*> >::_Base_type {aka std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXConstructExpr>*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXConstructExpr>*> >::_Base_type {aka struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXConstructExpr>*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:67:0,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from Coords.h:6,
                 from ASTToCoords.h:6,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Stmt; InnerT = clang::CXXConstructExpr]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Stmt, clang::CXXConstructExpr>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:3831:66:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1376:20: note:   initializing argument 1 of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<T>*>) [with T = clang::CXXConstructExpr]'
 BindableMatcher<T> makeAllOfComposite(
                    ^~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::FunctionDecl>*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<const clang::ast_matchers::internal::Matcher<clang::FunctionDecl>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::FunctionDecl>*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<const clang::ast_matchers::internal::Matcher<clang::FunctionDecl>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::FunctionDecl>*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1410:25:   required from 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Decl; InnerT = clang::FunctionDecl]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Decl, clang::FunctionDecl>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:3833:64:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::FunctionDecl>*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::FunctionDecl>*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::FunctionDecl>*> >::_Base_type {aka std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::FunctionDecl>*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::FunctionDecl>*> >::_Base_type {aka struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::FunctionDecl>*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:67:0,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from Coords.h:6,
                 from ASTToCoords.h:6,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Decl; InnerT = clang::FunctionDecl]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Decl, clang::FunctionDecl>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:3833:64:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1376:20: note:   initializing argument 1 of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<T>*>) [with T = clang::FunctionDecl]'
 BindableMatcher<T> makeAllOfComposite(
                    ^~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::Expr>*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<const clang::ast_matchers::internal::Matcher<clang::Expr>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::Expr>*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<const clang::ast_matchers::internal::Matcher<clang::Expr>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::Expr>*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1410:25:   required from 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Stmt; InnerT = clang::Expr]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Stmt, clang::Expr>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:3833:68:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::Expr>*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::Expr>*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::Expr>*> >::_Base_type {aka std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::Expr>*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::Expr>*> >::_Base_type {aka struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::Expr>*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:67:0,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from Coords.h:6,
                 from ASTToCoords.h:6,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Stmt; InnerT = clang::Expr]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Stmt, clang::Expr>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:3833:68:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1376:20: note:   initializing argument 1 of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<T>*>) [with T = clang::Expr]'
 BindableMatcher<T> makeAllOfComposite(
                    ^~~~~~~~~~~~~~~~~~
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::VariadicOperatorMatcher<Ps>::operator clang::ast_matchers::internal::Matcher<From>() const [with T = clang::BinaryOperator; Ps = {clang::ast_matchers::internal::PolymorphicMatcherWithParam1<clang::ast_matchers::internal::matcher_hasLHS0Matcher, clang::ast_matchers::internal::Matcher<clang::Expr>, void(clang::ast_matchers::internal::TypeList<clang::BinaryOperator, clang::ArraySubscriptExpr>)>, clang::ast_matchers::internal::PolymorphicMatcherWithParam1<clang::ast_matchers::internal::matcher_hasRHS0Matcher, clang::ast_matchers::internal::Matcher<clang::Expr>, void(clang::ast_matchers::internal::TypeList<clang::BinaryOperator, clang::ArraySubscriptExpr>)>}]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:4392:58:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1338:16: error: 'getMatchers' was not declared in this scope
                getMatchers<T>(llvm::index_sequence_for<Ps...>()))
                ^~~~~~~~~~~~~~
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1338:16: note: suggested alternative: 'getdate_err'
                getMatchers<T>(llvm::index_sequence_for<Ps...>()))
                ^~~~~~~~~~~~~~
                getdate_err
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXRecordDecl>*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<const clang::ast_matchers::internal::Matcher<clang::CXXRecordDecl>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXRecordDecl>*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<const clang::ast_matchers::internal::Matcher<clang::CXXRecordDecl>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXRecordDecl>*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1410:25:   required from 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Decl; InnerT = clang::CXXRecordDecl]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Decl, clang::CXXRecordDecl>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:5073:76:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXRecordDecl>*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXRecordDecl>*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXRecordDecl>*> >::_Base_type {aka std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXRecordDecl>*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXRecordDecl>*> >::_Base_type {aka struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXRecordDecl>*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:67:0,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from Coords.h:6,
                 from ASTToCoords.h:6,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Decl; InnerT = clang::CXXRecordDecl]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Decl, clang::CXXRecordDecl>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:5073:76:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1376:20: note:   initializing argument 1 of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<T>*>) [with T = clang::CXXRecordDecl]'
 BindableMatcher<T> makeAllOfComposite(
                    ^~~~~~~~~~~~~~~~~~
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::VariadicOperatorMatcher<Ps>::operator clang::ast_matchers::internal::Matcher<From>() const [with T = clang::Decl; Ps = {clang::ast_matchers::internal::BindableMatcher<clang::Decl>, clang::ast_matchers::internal::BindableMatcher<clang::Decl>}]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:5074:77:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1338:16: error: 'getMatchers' was not declared in this scope
                getMatchers<T>(llvm::index_sequence_for<Ps...>()))
                ^~~~~~~~~~~~~~
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1338:16: note: suggested alternative: 'getdate_err'
                getMatchers<T>(llvm::index_sequence_for<Ps...>()))
                ^~~~~~~~~~~~~~
                getdate_err
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::VariadicOperatorMatcher<Ps>::operator clang::ast_matchers::internal::Matcher<From>() const [with T = clang::Decl; Ps = {clang::ast_matchers::internal::BindableMatcher<clang::Decl>&, clang::ast_matchers::internal::ArgumentAdaptingMatcherFunc<clang::ast_matchers::internal::HasAncestorMatcher, clang::ast_matchers::internal::TypeList<clang::Decl, clang::NestedNameSpecifierLoc, clang::Stmt, clang::TypeLoc>, clang::ast_matchers::internal::TypeList<clang::Decl, clang::NestedNameSpecifierLoc, clang::Stmt, clang::TypeLoc> >::Adaptor<clang::Decl>}]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:5075:67:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1338:16: error: 'getMatchers' was not declared in this scope
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1338:16: note: suggested alternative: 'getdate_err'
                getMatchers<T>(llvm::index_sequence_for<Ps...>()))
                ^~~~~~~~~~~~~~
                getdate_err
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::QualType>*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<const clang::ast_matchers::internal::Matcher<clang::QualType>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::QualType>*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<const clang::ast_matchers::internal::Matcher<clang::QualType>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::QualType>*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1735:10:   required from 'static clang::ast_matchers::internal::TypeTraversePolymorphicMatcher<InnerTBase, Getter, MatcherImpl, ReturnTypesF> clang::ast_matchers::internal::TypeTraversePolymorphicMatcher<InnerTBase, Getter, MatcherImpl, ReturnTypesF>::create(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<T>*>) [with InnerTBase = clang::QualType; Getter = clang::ast_matchers::internal::TypeMatcherhasDeducedTypeGetter; MatcherImpl = clang::ast_matchers::internal::TypeTraverseMatcher; ReturnTypesF = void(clang::ast_matchers::internal::TypeList<clang::AutoType>)]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1700:60:   required from 'struct clang::ast_matchers::internal::TypeTraversePolymorphicMatcher<clang::QualType, clang::ast_matchers::internal::TypeMatcherhasDeducedTypeGetter, clang::ast_matchers::internal::TypeTraverseMatcher, void(clang::ast_matchers::internal::TypeList<clang::AutoType>)>::Func'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:5372:1:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::QualType>*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::QualType>*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::QualType>*> >::_Base_type {aka std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::QualType>*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::QualType>*> >::_Base_type {aka struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::QualType>*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::GNUNullExpr>*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<const clang::ast_matchers::internal::Matcher<clang::GNUNullExpr>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::GNUNullExpr>*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<const clang::ast_matchers::internal::Matcher<clang::GNUNullExpr>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::GNUNullExpr>*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1410:25:   required from 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Stmt; InnerT = clang::GNUNullExpr]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Stmt, clang::GNUNullExpr>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:6188:19:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::GNUNullExpr>*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::GNUNullExpr>*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::GNUNullExpr>*> >::_Base_type {aka std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::GNUNullExpr>*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::GNUNullExpr>*> >::_Base_type {aka struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::GNUNullExpr>*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:67:0,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from Coords.h:6,
                 from ASTToCoords.h:6,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Stmt; InnerT = clang::GNUNullExpr]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Stmt, clang::GNUNullExpr>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:6188:19:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1376:20: note:   initializing argument 1 of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<T>*>) [with T = clang::GNUNullExpr]'
 BindableMatcher<T> makeAllOfComposite(
                    ^~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXNullPtrLiteralExpr>*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<const clang::ast_matchers::internal::Matcher<clang::CXXNullPtrLiteralExpr>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXNullPtrLiteralExpr>*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<const clang::ast_matchers::internal::Matcher<clang::CXXNullPtrLiteralExpr>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXNullPtrLiteralExpr>*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1410:25:   required from 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Stmt; InnerT = clang::CXXNullPtrLiteralExpr]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Stmt, clang::CXXNullPtrLiteralExpr>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:6188:44:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXNullPtrLiteralExpr>*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXNullPtrLiteralExpr>*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXNullPtrLiteralExpr>*> >::_Base_type {aka std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXNullPtrLiteralExpr>*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXNullPtrLiteralExpr>*> >::_Base_type {aka struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::CXXNullPtrLiteralExpr>*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:67:0,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from Coords.h:6,
                 from ASTToCoords.h:6,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Stmt; InnerT = clang::CXXNullPtrLiteralExpr]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Stmt, clang::CXXNullPtrLiteralExpr>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:6188:44:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1376:20: note:   initializing argument 1 of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<T>*>) [with T = clang::CXXNullPtrLiteralExpr]'
 BindableMatcher<T> makeAllOfComposite(
                    ^~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::PointerType>*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<const clang::ast_matchers::internal::Matcher<clang::PointerType>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::PointerType>*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<const clang::ast_matchers::internal::Matcher<clang::PointerType>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::PointerType>*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1410:25:   required from 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Type; InnerT = clang::PointerType]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Type, clang::PointerType>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:6189:68:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::PointerType>*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::PointerType>*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::PointerType>*> >::_Base_type {aka std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::PointerType>*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::PointerType>*> >::_Base_type {aka struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::PointerType>*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:67:0,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from Coords.h:6,
                 from ASTToCoords.h:6,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Type; InnerT = clang::PointerType]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Type, clang::PointerType>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:6189:68:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1376:20: note:   initializing argument 1 of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<T>*>) [with T = clang::PointerType]'
 BindableMatcher<T> makeAllOfComposite(
                    ^~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::IntegerLiteral>*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<const clang::ast_matchers::internal::Matcher<clang::IntegerLiteral>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::IntegerLiteral>*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<const clang::ast_matchers::internal::Matcher<clang::IntegerLiteral>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::IntegerLiteral>*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1410:25:   required from 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Stmt; InnerT = clang::IntegerLiteral]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Stmt, clang::IntegerLiteral>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:6189:72:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::IntegerLiteral>*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::IntegerLiteral>*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::IntegerLiteral>*> >::_Base_type {aka std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::IntegerLiteral>*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::IntegerLiteral>*> >::_Base_type {aka struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::IntegerLiteral>*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:67:0,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from Coords.h:6,
                 from ASTToCoords.h:6,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeDynCastAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<ChildT>*>) [with T = clang::Stmt; InnerT = clang::IntegerLiteral]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1557:7:   required from 'class clang::ast_matchers::internal::VariadicDynCastAllOfMatcher<clang::Stmt, clang::IntegerLiteral>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:6189:72:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1376:20: note:   initializing argument 1 of 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<T>*>) [with T = clang::IntegerLiteral]'
 BindableMatcher<T> makeAllOfComposite(
                    ^~~~~~~~~~~~~~~~~~
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h: In instantiation of 'clang::ast_matchers::internal::VariadicOperatorMatcher<Ps>::operator clang::ast_matchers::internal::Matcher<From>() const [with T = clang::Expr; Ps = {clang::ast_matchers::internal::BindableMatcher<clang::Stmt>, clang::ast_matchers::internal::BindableMatcher<clang::Stmt>, clang::ast_matchers::internal::BindableMatcher<clang::Stmt>}]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:6189:73:   required from here
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1338:16: error: 'getMatchers' was not declared in this scope
                getMatchers<T>(llvm::index_sequence_for<Ps...>()))
                ^~~~~~~~~~~~~~
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1338:16: note: suggested alternative: 'getdate_err'
                getMatchers<T>(llvm::index_sequence_for<Ps...>()))
                ^~~~~~~~~~~~~~
                getdate_err
In file included from /llvm/include/llvm/ADT/SmallString.h:16:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/SmallVector.h: In instantiation of 'void llvm::SmallVectorTemplateBase<T, <anonymous> >::push_back(const T&) [with T = clang::ast_matchers::BoundNodes; bool <anonymous> = false]':
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:279:33:   required from here
/llvm/include/llvm/ADT/SmallVector.h:214:5: error: no matching function for call to 'operator new(sizetype, void*)'
     ::new ((void*) this->end()) T(Elt);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/ADT/SmallString.h:16:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/SmallVector.h:214:5: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     ::new ((void*) this->end()) T(Elt);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h: In instantiation of 'void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]':
/usr/include/c++/7/bits/basic_string.h:647:19:   required from 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]'
/llvm/include/llvm/ADT/APSInt.h:70:45:   required from here
/usr/include/c++/7/bits/basic_string.h:221:15: error: using invalid field 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::<unnamed union>::_M_allocated_capacity'
    _M_destroy(_M_allocated_capacity);
               ^~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:221:14: error: '_M_destroy' was not declared in this scope
    _M_destroy(_M_allocated_capacity);
    ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:221:14: note: suggested alternative: '_M_data'
    _M_destroy(_M_allocated_capacity);
    ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
    _M_data
/usr/include/c++/7/bits/basic_string.h: In instantiation of 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]':
/usr/include/c++/7/bits/basic_string.h:5920:7:   required from 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]'
/usr/include/c++/7/system_error:351:30:   required from here
/usr/include/c++/7/bits/basic_string.h:1248:17: error: '_M_check_length' was not declared in this scope
  _M_check_length(size_type(0), __n, "basic_string::append");
  ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:1248:17: note: suggested alternative: '__socklen_t'
  _M_check_length(size_type(0), __n, "basic_string::append");
  ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  __socklen_t
/usr/include/c++/7/bits/basic_string.h:1249:18: error: '_M_append' was not declared in this scope
  return _M_append(__s, __n);
         ~~~~~~~~~^~~~~~~~~~
/usr/include/c++/7/bits/basic_string.h:1249:18: note: suggested alternative: 'append'
  return _M_append(__s, __n);
         ~~~~~~~~~^~~~~~~~~~
         append
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer& std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() [with _Tp = llvm::APFloat; _Dp = std::default_delete<llvm::APFloat []>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = llvm::APFloat*]':
/usr/include/c++/7/bits/unique_ptr.h:525:8:   required from 'std::unique_ptr<_Tp [], _Dp>::~unique_ptr() [with _Tp = llvm::APFloat; _Dp = std::default_delete<llvm::APFloat []>]'
/llvm/include/llvm/ADT/APFloat.h:573:7:   required from here
/usr/include/c++/7/bits/unique_ptr.h:146:47: error: no matching function for call to 'get<0>(std::tuple<llvm::APFloat*, std::default_delete<llvm::APFloat []> >&)'
       pointer&   _M_ptr() { return std::get<0>(_M_t); }
                                    ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer& std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() [with _Tp = clang::DiagnosticConsumer; _Dp = std::default_delete<clang::DiagnosticConsumer>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = clang::DiagnosticConsumer*]':
/usr/include/c++/7/bits/unique_ptr.h:266:8:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = clang::DiagnosticConsumer; _Dp = std::default_delete<clang::DiagnosticConsumer>]'
/llvm/tools/clang/include/clang/Basic/Diagnostic.h:517:76:   required from here
/usr/include/c++/7/bits/unique_ptr.h:146:47: error: no matching function for call to 'get<0>(std::tuple<clang::DiagnosticConsumer*, std::default_delete<clang::DiagnosticConsumer> >&)'
       pointer&   _M_ptr() { return std::get<0>(_M_t); }
                                    ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = unsigned int]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = unsigned int]'
/llvm/tools/clang/include/clang/AST/Type.h:5368:26:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<unsigned int, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = unsigned int; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = unsigned int]'
/llvm/tools/clang/include/clang/AST/Type.h:5381:52:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<unsigned int, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(const T&) [with T = unsigned int; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:123:35:   required from 'llvm::Optional<T>::Optional(const T&) [with T = unsigned int]'
/llvm/include/llvm/Support/VersionTuple.h:73:12:   required from here
/llvm/include/llvm/ADT/Optional.h:39:61: error: 'struct llvm::AlignedCharArrayUnion<unsigned int, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
   OptionalStorage(const T &y) : hasVal(true) { new (storage.buffer) T(y); }
                                                     ~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple: In instantiation of 'static constexpr bool std::__tuple_compare<_Tp, _Up, __i, __size>::__less(const _Tp&, const _Up&) [with _Tp = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; _Up = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; long unsigned int __i = 0; long unsigned int __size = 4]':
/usr/include/c++/7/tuple:1418:31:   required from 'constexpr bool std::operator<(const std::tuple<_Tps ...>&, const std::tuple<_Elements ...>&) [with _TElements = {const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&}; _UElements = {const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&}]'
/llvm/include/llvm/Support/VersionTuple.h:111:58:   required from here
/usr/include/c++/7/tuple:1379:27: error: no matching function for call to 'get<0>(const std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>&)'
  return bool(std::get<__i>(__t) < std::get<__i>(__u))
              ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1379:48: error: no matching function for call to 'get<0>(const std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>&)'
  return bool(std::get<__i>(__t) < std::get<__i>(__u))
                                   ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1380:27: error: no matching function for call to 'get<0>(const std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>&)'
    || (!bool(std::get<__i>(__u) < std::get<__i>(__t))
              ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1380:48: error: no matching function for call to 'get<0>(const std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>&)'
    || (!bool(std::get<__i>(__u) < std::get<__i>(__t))
                                   ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1382:7: error: body of constexpr function 'static constexpr bool std::__tuple_compare<_Tp, _Up, __i, __size>::__less(const _Tp&, const _Up&) [with _Tp = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; _Up = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; long unsigned int __i = 0; long unsigned int __size = 4]' not a return-statement
       }
       ^
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = long unsigned int; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:25:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = long unsigned int; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<long unsigned int, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = long unsigned int; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:13:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = long unsigned int; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<long unsigned int, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(const T&) [with T = long unsigned int; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:147:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(const T&) [with T = long unsigned int]'
/llvm/include/llvm/Support/FormatProviders.h:72:42:   required from here
/llvm/include/llvm/ADT/Optional.h:80:20: error: 'struct llvm::AlignedCharArrayUnion<long unsigned int, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(y);
            ~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer& std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() [with _Tp = llvm::ErrorInfoBase; _Dp = std::default_delete<llvm::ErrorInfoBase>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = llvm::ErrorInfoBase*]':
/usr/include/c++/7/bits/unique_ptr.h:360:16:   required from 'std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::release() [with _Tp = llvm::ErrorInfoBase; _Dp = std::default_delete<llvm::ErrorInfoBase>; std::unique_ptr<_Tp, _Dp>::pointer = llvm::ErrorInfoBase*]'
/llvm/include/llvm/Support/Error.h:199:28:   required from here
/usr/include/c++/7/bits/unique_ptr.h:146:47: error: no matching function for call to 'get<0>(std::tuple<llvm::ErrorInfoBase*, std::default_delete<llvm::ErrorInfoBase> >&)'
       pointer&   _M_ptr() { return std::get<0>(_M_t); }
                                    ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer& std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() [with _Tp = llvm::ErrorList; _Dp = std::default_delete<llvm::ErrorList>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = llvm::ErrorList*]':
/usr/include/c++/7/bits/unique_ptr.h:266:8:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = llvm::ErrorList; _Dp = std::default_delete<llvm::ErrorList>]'
/llvm/include/llvm/Support/Error.h:414:58:   required from here
/usr/include/c++/7/bits/unique_ptr.h:146:47: error: no matching function for call to 'get<0>(std::tuple<llvm::ErrorList*, std::default_delete<llvm::ErrorList> >&)'
       pointer&   _M_ptr() { return std::get<0>(_M_t); }
                                    ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/Support/Error.h:19:0,
                 from /llvm/include/llvm/Support/FileSystem.h:34,
                 from /llvm/tools/clang/include/clang/Basic/FileManager.h:26,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringExtras.h: In instantiation of 'std::__cxx11::string llvm::detail::join_impl(IteratorT, IteratorT, llvm::StringRef, std::forward_iterator_tag) [with IteratorT = std::__cxx11::basic_string<char>*; std::__cxx11::string = std::__cxx11::basic_string<char>]':
/llvm/include/llvm/ADT/StringExtras.h:372:27:   required from 'std::__cxx11::string llvm::join(IteratorT, IteratorT, llvm::StringRef) [with IteratorT = std::__cxx11::basic_string<char>*; std::__cxx11::string = std::__cxx11::basic_string<char>]'
/llvm/include/llvm/Support/Error.h:971:49:   required from here
/llvm/include/llvm/ADT/StringExtras.h:321:21: error: 'class std::__cxx11::basic_string<char>' has no member named 'size'
     Len += (*Begin).size();
            ~~~~~~~~~^~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer& std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() [with _Tp = llvm::FileError; _Dp = std::default_delete<llvm::FileError>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = llvm::FileError*]':
/usr/include/c++/7/bits/unique_ptr.h:266:8:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = llvm::FileError; _Dp = std::default_delete<llvm::FileError>]'
/llvm/include/llvm/Support/Error.h:1205:78:   required from here
/usr/include/c++/7/bits/unique_ptr.h:146:47: error: no matching function for call to 'get<0>(std::tuple<llvm::FileError*, std::default_delete<llvm::FileError> >&)'
       pointer&   _M_ptr() { return std::get<0>(_M_t); }
                                    ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple: In instantiation of 'static constexpr bool std::__tuple_compare<_Tp, _Up, __i, __size>::__less(const _Tp&, const _Up&) [with _Tp = std::tuple<const long unsigned int&, const long unsigned int&>; _Up = std::tuple<const long unsigned int&, const long unsigned int&>; long unsigned int __i = 0; long unsigned int __size = 2]':
/usr/include/c++/7/tuple:1418:31:   required from 'constexpr bool std::operator<(const std::tuple<_Tps ...>&, const std::tuple<_Elements ...>&) [with _TElements = {const long unsigned int&, const long unsigned int&}; _UElements = {const long unsigned int&, const long unsigned int&}]'
/llvm/include/llvm/Support/FileSystem.h:147:70:   required from here
/usr/include/c++/7/tuple:1379:27: error: no matching function for call to 'get<0>(const std::tuple<const long unsigned int&, const long unsigned int&>&)'
  return bool(std::get<__i>(__t) < std::get<__i>(__u))
              ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1379:48: error: no matching function for call to 'get<0>(const std::tuple<const long unsigned int&, const long unsigned int&>&)'
  return bool(std::get<__i>(__t) < std::get<__i>(__u))
                                   ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1380:27: error: no matching function for call to 'get<0>(const std::tuple<const long unsigned int&, const long unsigned int&>&)'
    || (!bool(std::get<__i>(__u) < std::get<__i>(__t))
              ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1380:48: error: no matching function for call to 'get<0>(const std::tuple<const long unsigned int&, const long unsigned int&>&)'
    || (!bool(std::get<__i>(__u) < std::get<__i>(__t))
                                   ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1382:7: error: body of constexpr function 'static constexpr bool std::__tuple_compare<_Tp, _Up, __i, __size>::__less(const _Tp&, const _Up&) [with _Tp = std::tuple<const long unsigned int&, const long unsigned int&>; _Up = std::tuple<const long unsigned int&, const long unsigned int&>; long unsigned int __i = 0; long unsigned int __size = 2]' not a return-statement
       }
       ^
In file included from /llvm/include/llvm/Support/FileSystem.h:34:0,
                 from /llvm/tools/clang/include/clang/Basic/FileManager.h:26,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Error.h: In instantiation of 'llvm::Expected<T>::storage_type* llvm::Expected<T>::getStorage() [with T = int; llvm::Expected<T>::storage_type = int]':
/llvm/include/llvm/Support/Error.h:518:17:   required from 'llvm::Expected<T>::~Expected() [with T = int]'
/llvm/include/llvm/Support/FileSystem.h:973:58:   required from here
/llvm/include/llvm/Support/Error.h:627:54: error: 'struct llvm::AlignedCharArrayUnion<int, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<storage_type *>(TStorage.buffer);
                                             ~~~~~~~~~^~~~~~
/llvm/include/llvm/Support/Error.h: In instantiation of 'void llvm::Expected<T>::moveConstruct(llvm::Expected<OtherT>&&) [with OtherT = int; T = int]':
/llvm/include/llvm/Support/Error.h:487:45:   required from 'llvm::Expected<T>::Expected(llvm::Expected<T>&&) [with T = int]'
/llvm/include/llvm/Support/FileSystem.h:973:58:   required from here
/llvm/include/llvm/Support/Error.h:602:7: error: no matching function for call to 'operator new(sizetype, llvm::Expected<int>::storage_type*)'
       new (getStorage()) storage_type(std::move(*Other.getStorage()));
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::Expected<int>::storage_type* {aka int*}' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/Support/FileSystem.h:34:0,
                 from /llvm/tools/clang/include/clang/Basic/FileManager.h:26,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Error.h:602:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::Expected<int>::storage_type* {aka int*}'
       new (getStorage()) storage_type(std::move(*Other.getStorage()));
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/include/llvm/Support/Error.h:604:7: error: no matching function for call to 'operator new(sizetype, llvm::Expected<int>::error_type*)'
       new (getErrorStorage()) error_type(std::move(*Other.getErrorStorage()));
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::Expected<int>::error_type* {aka std::unique_ptr<llvm::ErrorInfoBase>*}' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/Support/FileSystem.h:34:0,
                 from /llvm/tools/clang/include/clang/Basic/FileManager.h:26,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Error.h:604:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::Expected<int>::error_type* {aka std::unique_ptr<llvm::ErrorInfoBase>*}'
       new (getErrorStorage()) error_type(std::move(*Other.getErrorStorage()));
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /llvm/tools/clang/include/clang/Basic/FileManager.h:25:0,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/ErrorOr.h: In instantiation of 'llvm::ErrorOr<T>::storage_type* llvm::ErrorOr<T>::getStorage() [with T = llvm::sys::fs::basic_file_status; llvm::ErrorOr<T>::storage_type = llvm::sys::fs::basic_file_status]':
/llvm/include/llvm/Support/ErrorOr.h:148:17:   required from 'llvm::ErrorOr<T>::~ErrorOr() [with T = llvm::sys::fs::basic_file_status]'
/llvm/include/llvm/Support/FileSystem.h:1161:21:   required from here
/llvm/include/llvm/Support/ErrorOr.h:244:53: error: 'struct llvm::AlignedCharArrayUnion<llvm::sys::fs::basic_file_status, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<storage_type*>(TStorage.buffer);
                                            ~~~~~~~~~^~~~~~
/llvm/include/llvm/Support/ErrorOr.h: In instantiation of 'void llvm::ErrorOr<T>::moveConstruct(llvm::ErrorOr<OtherT>&&) [with OtherT = llvm::sys::fs::basic_file_status; T = llvm::sys::fs::basic_file_status]':
/llvm/include/llvm/Support/ErrorOr.h:115:18:   required from 'llvm::ErrorOr<T>::ErrorOr(llvm::ErrorOr<T>&&) [with T = llvm::sys::fs::basic_file_status]'
/llvm/include/llvm/Support/FileSystem.h:1161:21:   required from here
/llvm/include/llvm/Support/ErrorOr.h:213:7: error: no matching function for call to 'operator new(sizetype, llvm::ErrorOr<llvm::sys::fs::basic_file_status>::storage_type*)'
       new (getStorage()) storage_type(std::move(*Other.getStorage()));
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::ErrorOr<llvm::sys::fs::basic_file_status>::storage_type* {aka llvm::sys::fs::basic_file_status*}' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/FileManager.h:25:0,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/ErrorOr.h:213:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::ErrorOr<llvm::sys::fs::basic_file_status>::storage_type* {aka llvm::sys::fs::basic_file_status*}'
       new (getStorage()) storage_type(std::move(*Other.getStorage()));
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/include/llvm/Support/ErrorOr.h:217:7: error: no matching function for call to 'operator new(sizetype, std::error_code*)'
       new (getErrorStorage()) std::error_code(Other.getError());
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'std::error_code*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/FileManager.h:25:0,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/ErrorOr.h:217:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'std::error_code*'
       new (getErrorStorage()) std::error_code(Other.getError());
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() const [with _Tp = llvm::MemoryBuffer; _Dp = std::default_delete<llvm::MemoryBuffer>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = llvm::MemoryBuffer*]':
/usr/include/c++/7/bits/unique_ptr.h:337:28:   required from 'std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::get() const [with _Tp = llvm::MemoryBuffer; _Dp = std::default_delete<llvm::MemoryBuffer>; std::unique_ptr<_Tp, _Dp>::pointer = llvm::MemoryBuffer*]'
/llvm/include/llvm/Support/SourceMgr.h:132:38:   required from here
/usr/include/c++/7/bits/unique_ptr.h:147:53: error: no matching function for call to 'get<0>(const std::tuple<llvm::MemoryBuffer*, std::default_delete<llvm::MemoryBuffer> >&)'
       pointer    _M_ptr() const { return std::get<0>(_M_t); }
                                          ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer& std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() [with _Tp = llvm::MemoryBuffer; _Dp = std::default_delete<llvm::MemoryBuffer>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = llvm::MemoryBuffer*]':
/usr/include/c++/7/bits/unique_ptr.h:266:8:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = llvm::MemoryBuffer; _Dp = std::default_delete<llvm::MemoryBuffer>]'
/llvm/include/llvm/Support/SourceMgr.h:87:5:   required from here
/usr/include/c++/7/bits/unique_ptr.h:146:47: error: no matching function for call to 'get<0>(std::tuple<llvm::MemoryBuffer*, std::default_delete<llvm::MemoryBuffer> >&)'
       pointer&   _M_ptr() { return std::get<0>(_M_t); }
                                    ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/FileManager.h:25:0,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/ErrorOr.h: In instantiation of 'llvm::ErrorOr<T>::storage_type* llvm::ErrorOr<T>::getStorage() [with T = llvm::vfs::Status; llvm::ErrorOr<T>::storage_type = llvm::vfs::Status]':
/llvm/include/llvm/Support/ErrorOr.h:148:17:   required from 'llvm::ErrorOr<T>::~ErrorOr() [with T = llvm::vfs::Status]'
/llvm/include/llvm/Support/VirtualFileSystem.h:110:30:   required from here
/llvm/include/llvm/Support/ErrorOr.h:244:53: error: 'struct llvm::AlignedCharArrayUnion<llvm::vfs::Status, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<storage_type*>(TStorage.buffer);
                                            ~~~~~~~~~^~~~~~
/llvm/include/llvm/Support/ErrorOr.h: In instantiation of 'void llvm::ErrorOr<T>::moveConstruct(llvm::ErrorOr<OtherT>&&) [with OtherT = llvm::vfs::Status; T = llvm::vfs::Status]':
/llvm/include/llvm/Support/ErrorOr.h:115:18:   required from 'llvm::ErrorOr<T>::ErrorOr(llvm::ErrorOr<T>&&) [with T = llvm::vfs::Status]'
/llvm/include/llvm/Support/VirtualFileSystem.h:110:30:   required from here
/llvm/include/llvm/Support/ErrorOr.h:213:7: error: no matching function for call to 'operator new(sizetype, llvm::ErrorOr<llvm::vfs::Status>::storage_type*)'
       new (getStorage()) storage_type(std::move(*Other.getStorage()));
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::ErrorOr<llvm::vfs::Status>::storage_type* {aka llvm::vfs::Status*}' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/FileManager.h:25:0,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/ErrorOr.h:213:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::ErrorOr<llvm::vfs::Status>::storage_type* {aka llvm::vfs::Status*}'
       new (getStorage()) storage_type(std::move(*Other.getStorage()));
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/include/llvm/Support/ErrorOr.h:217:7: error: no matching function for call to 'operator new(sizetype, std::error_code*)'
       new (getErrorStorage()) std::error_code(Other.getError());
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'std::error_code*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/FileManager.h:25:0,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/ErrorOr.h:217:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'std::error_code*'
       new (getErrorStorage()) std::error_code(Other.getError());
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/include/llvm/Support/ErrorOr.h: In instantiation of 'llvm::ErrorOr<T>::storage_type* llvm::ErrorOr<T>::getStorage() [with T = std::__cxx11::basic_string<char>; llvm::ErrorOr<T>::storage_type = std::__cxx11::basic_string<char>]':
/llvm/include/llvm/Support/ErrorOr.h:91:20:   required from 'llvm::ErrorOr<T>::ErrorOr(OtherT&&, typename std::enable_if<std::is_convertible<AltKeyT, KeyT>::value>::type*) [with OtherT = std::__cxx11::basic_string<char>; T = std::__cxx11::basic_string<char>; typename std::enable_if<std::is_convertible<AltKeyT, KeyT>::value>::type = void]'
/llvm/include/llvm/Support/VirtualFileSystem.h:111:36:   required from here
/llvm/include/llvm/Support/ErrorOr.h:244:53: error: 'struct llvm::AlignedCharArrayUnion<std::__cxx11::basic_string<char>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<storage_type*>(TStorage.buffer);
                                            ~~~~~~~~~^~~~~~
/llvm/include/llvm/Support/ErrorOr.h: In instantiation of 'void llvm::ErrorOr<T>::moveConstruct(llvm::ErrorOr<OtherT>&&) [with OtherT = std::__cxx11::basic_string<char>; T = std::__cxx11::basic_string<char>]':
/llvm/include/llvm/Support/ErrorOr.h:115:18:   required from 'llvm::ErrorOr<T>::ErrorOr(llvm::ErrorOr<T>&&) [with T = std::__cxx11::basic_string<char>]'
/llvm/include/llvm/Support/VirtualFileSystem.h:111:36:   required from here
/llvm/include/llvm/Support/ErrorOr.h:213:7: error: no matching function for call to 'operator new(sizetype, llvm::ErrorOr<std::__cxx11::basic_string<char> >::storage_type*)'
       new (getStorage()) storage_type(std::move(*Other.getStorage()));
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::ErrorOr<std::__cxx11::basic_string<char> >::storage_type* {aka std::__cxx11::basic_string<char>*}' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/FileManager.h:25:0,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/ErrorOr.h:213:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::ErrorOr<std::__cxx11::basic_string<char> >::storage_type* {aka std::__cxx11::basic_string<char>*}'
       new (getStorage()) storage_type(std::move(*Other.getStorage()));
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/include/llvm/Support/ErrorOr.h:217:7: error: no matching function for call to 'operator new(sizetype, std::error_code*)'
       new (getErrorStorage()) std::error_code(Other.getError());
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'std::error_code*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/FileManager.h:25:0,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/ErrorOr.h:217:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'std::error_code*'
       new (getErrorStorage()) std::error_code(Other.getError());
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/include/llvm/Support/ErrorOr.h: In instantiation of 'llvm::ErrorOr<T>::storage_type* llvm::ErrorOr<T>::getStorage() [with T = std::unique_ptr<llvm::vfs::File>; llvm::ErrorOr<T>::storage_type = std::unique_ptr<llvm::vfs::File>]':
/llvm/include/llvm/Support/ErrorOr.h:148:17:   required from 'llvm::ErrorOr<T>::~ErrorOr() [with T = std::unique_ptr<llvm::vfs::File>]'
/llvm/include/llvm/Support/VirtualFileSystem.h:362:36:   required from here
/llvm/include/llvm/Support/ErrorOr.h:244:53: error: 'struct llvm::AlignedCharArrayUnion<std::unique_ptr<llvm::vfs::File>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<storage_type*>(TStorage.buffer);
                                            ~~~~~~~~~^~~~~~
/llvm/include/llvm/Support/ErrorOr.h: In instantiation of 'void llvm::ErrorOr<T>::moveConstruct(llvm::ErrorOr<OtherT>&&) [with OtherT = std::unique_ptr<llvm::vfs::File>; T = std::unique_ptr<llvm::vfs::File>]':
/llvm/include/llvm/Support/ErrorOr.h:115:18:   required from 'llvm::ErrorOr<T>::ErrorOr(llvm::ErrorOr<T>&&) [with T = std::unique_ptr<llvm::vfs::File>]'
/llvm/include/llvm/Support/VirtualFileSystem.h:362:36:   required from here
/llvm/include/llvm/Support/ErrorOr.h:213:7: error: no matching function for call to 'operator new(sizetype, llvm::ErrorOr<std::unique_ptr<llvm::vfs::File> >::storage_type*)'
       new (getStorage()) storage_type(std::move(*Other.getStorage()));
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::ErrorOr<std::unique_ptr<llvm::vfs::File> >::storage_type* {aka std::unique_ptr<llvm::vfs::File>*}' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/FileManager.h:25:0,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/ErrorOr.h:213:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::ErrorOr<std::unique_ptr<llvm::vfs::File> >::storage_type* {aka std::unique_ptr<llvm::vfs::File>*}'
       new (getStorage()) storage_type(std::move(*Other.getStorage()));
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/include/llvm/Support/ErrorOr.h:217:7: error: no matching function for call to 'operator new(sizetype, std::error_code*)'
       new (getErrorStorage()) std::error_code(Other.getError());
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'std::error_code*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/FileManager.h:25:0,
                 from /llvm/tools/clang/include/clang/Basic/Module.h:18,
                 from /llvm/tools/clang/include/clang/AST/ExternalASTSource.h:20,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:20,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/ErrorOr.h:217:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'std::error_code*'
       new (getErrorStorage()) std::error_code(Other.getError());
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() const [with _Tp = llvm::vfs::RedirectingFileSystem::Entry; _Dp = std::default_delete<llvm::vfs::RedirectingFileSystem::Entry>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = llvm::vfs::RedirectingFileSystem::Entry*]':
/usr/include/c++/7/bits/unique_ptr.h:337:28:   required from 'std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::get() const [with _Tp = llvm::vfs::RedirectingFileSystem::Entry; _Dp = std::default_delete<llvm::vfs::RedirectingFileSystem::Entry>; std::unique_ptr<_Tp, _Dp>::pointer = llvm::vfs::RedirectingFileSystem::Entry*]'
/llvm/include/llvm/Support/VirtualFileSystem.h:592:64:   required from here
/usr/include/c++/7/bits/unique_ptr.h:147:53: error: no matching function for call to 'get<0>(const std::tuple<llvm::vfs::RedirectingFileSystem::Entry*, std::default_delete<llvm::vfs::RedirectingFileSystem::Entry> >&)'
       pointer    _M_ptr() const { return std::get<0>(_M_t); }
                                          ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(const T&) [with T = bool; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:147:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(const T&) [with T = bool]'
/llvm/include/llvm/Support/VirtualFileSystem.h:745:23:   required from here
/llvm/include/llvm/ADT/Optional.h:80:20: error: 'struct llvm::AlignedCharArrayUnion<bool, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(y);
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = bool; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = bool]'
/llvm/include/llvm/Support/VirtualFileSystem.h:751:25:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<bool, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer& std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() [with _Tp = llvm::vfs::File; _Dp = std::default_delete<llvm::vfs::File>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = llvm::vfs::File*]':
/usr/include/c++/7/bits/unique_ptr.h:266:8:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = llvm::vfs::File; _Dp = std::default_delete<llvm::vfs::File>]'
/llvm/tools/clang/include/clang/Basic/FileManager.h:78:72:   required from here
/usr/include/c++/7/bits/unique_ptr.h:146:47: error: no matching function for call to 'get<0>(std::tuple<llvm::vfs::File*, std::default_delete<llvm::vfs::File> >&)'
       pointer&   _M_ptr() { return std::get<0>(_M_t); }
                                    ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer& std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() [with _Tp = clang::AtomicScopeModel; _Dp = std::default_delete<clang::AtomicScopeModel>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = clang::AtomicScopeModel*]':
/usr/include/c++/7/bits/unique_ptr.h:266:8:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = clang::AtomicScopeModel; _Dp = std::default_delete<clang::AtomicScopeModel>]'
/llvm/tools/clang/include/clang/Basic/SyncScope.h:145:46:   required from here
/usr/include/c++/7/bits/unique_ptr.h:146:47: error: no matching function for call to 'get<0>(std::tuple<clang::AtomicScopeModel*, std::default_delete<clang::AtomicScopeModel> >&)'
       pointer&   _M_ptr() { return std::get<0>(_M_t); }
                                    ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer& std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() [with _Tp = clang::AtomicScopeOpenCLModel; _Dp = std::default_delete<clang::AtomicScopeOpenCLModel>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = clang::AtomicScopeOpenCLModel*]':
/usr/include/c++/7/bits/unique_ptr.h:266:8:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = clang::AtomicScopeOpenCLModel; _Dp = std::default_delete<clang::AtomicScopeOpenCLModel>]'
/llvm/tools/clang/include/clang/Basic/SyncScope.h:147:54:   required from here
/usr/include/c++/7/bits/unique_ptr.h:146:47: error: no matching function for call to 'get<0>(std::tuple<clang::AtomicScopeOpenCLModel*, std::default_delete<clang::AtomicScopeOpenCLModel> >&)'
       pointer&   _M_ptr() { return std::get<0>(_M_t); }
                                    ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::ARMInterruptAttr::InterruptType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::ARMInterruptAttr::InterruptType]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:237:41:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::ARMInterruptAttr::InterruptType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = clang::ARMInterruptAttr::InterruptType]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = clang::ARMInterruptAttr::InterruptType]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:245:14:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<clang::ARMInterruptAttr::InterruptType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::BlocksAttr::BlockType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::BlocksAttr::BlockType]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:1618:39:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::BlocksAttr::BlockType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = clang::BlocksAttr::BlockType]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = clang::BlocksAttr::BlockType]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:1621:14:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<clang::BlocksAttr::BlockType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::CallableWhenAttr::ConsumedState; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::CallableWhenAttr::ConsumedState]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:2167:49:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::CallableWhenAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = clang::CallableWhenAttr::ConsumedState]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = clang::CallableWhenAttr::ConsumedState]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:2172:14:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<clang::CallableWhenAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::ConsumableAttr::ConsumedState; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::ConsumableAttr::ConsumedState]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:2575:47:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::ConsumableAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = clang::ConsumableAttr::ConsumedState]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = clang::ConsumableAttr::ConsumedState]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:2580:14:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<clang::ConsumableAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::DiagnoseIfAttr::DiagnosticType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::DiagnoseIfAttr::DiagnosticType]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:2983:46:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::DiagnoseIfAttr::DiagnosticType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = clang::DiagnoseIfAttr::DiagnosticType]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = clang::DiagnoseIfAttr::DiagnosticType]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:2987:14:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<clang::DiagnoseIfAttr::DiagnosticType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::EnumExtensibilityAttr::Kind; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::EnumExtensibilityAttr::Kind]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:3151:52:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::EnumExtensibilityAttr::Kind, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = clang::EnumExtensibilityAttr::Kind]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = clang::EnumExtensibilityAttr::Kind]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:3155:14:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<clang::EnumExtensibilityAttr::Kind, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::LoopHintAttr::OptionType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::LoopHintAttr::OptionType]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:4149:49:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::LoopHintAttr::OptionType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = clang::LoopHintAttr::OptionType]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = clang::LoopHintAttr::OptionType]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:4162:14:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<clang::LoopHintAttr::OptionType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::LoopHintAttr::LoopHintState; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::LoopHintAttr::LoopHintState]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:4190:43:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::LoopHintAttr::LoopHintState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = clang::LoopHintAttr::LoopHintState]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = clang::LoopHintAttr::LoopHintState]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:4197:14:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<clang::LoopHintAttr::LoopHintState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::MipsInterruptAttr::InterruptType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::MipsInterruptAttr::InterruptType]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:4722:49:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::MipsInterruptAttr::InterruptType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = clang::MipsInterruptAttr::InterruptType]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = clang::MipsInterruptAttr::InterruptType]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:4734:14:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<clang::MipsInterruptAttr::InterruptType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::OMPDeclareSimdDeclAttr::BranchStateTy; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::OMPDeclareSimdDeclAttr::BranchStateTy]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:5712:53:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::OMPDeclareSimdDeclAttr::BranchStateTy, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = clang::OMPDeclareSimdDeclAttr::BranchStateTy]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = clang::OMPDeclareSimdDeclAttr::BranchStateTy]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:5717:14:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<clang::OMPDeclareSimdDeclAttr::BranchStateTy, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::OMPDeclareTargetDeclAttr::MapTypeTy; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::OMPDeclareTargetDeclAttr::MapTypeTy]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:5866:50:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::OMPDeclareTargetDeclAttr::MapTypeTy, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = clang::OMPDeclareTargetDeclAttr::MapTypeTy]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = clang::OMPDeclareTargetDeclAttr::MapTypeTy]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:5870:14:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<clang::OMPDeclareTargetDeclAttr::MapTypeTy, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::ObjCMethodFamilyAttr::FamilyKind; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::ObjCMethodFamilyAttr::FamilyKind]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:6478:51:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::ObjCMethodFamilyAttr::FamilyKind, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = clang::ObjCMethodFamilyAttr::FamilyKind]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = clang::ObjCMethodFamilyAttr::FamilyKind]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:6486:14:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<clang::ObjCMethodFamilyAttr::FamilyKind, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::ParamTypestateAttr::ConsumedState; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::ParamTypestateAttr::ConsumedState]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:7260:51:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::ParamTypestateAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = clang::ParamTypestateAttr::ConsumedState]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = clang::ParamTypestateAttr::ConsumedState]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:7265:14:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<clang::ParamTypestateAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::PcsAttr::PCSType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::PcsAttr::PCSType]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:7375:36:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::PcsAttr::PCSType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = clang::PcsAttr::PCSType]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = clang::PcsAttr::PCSType]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:7379:14:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<clang::PcsAttr::PCSType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::RISCVInterruptAttr::InterruptType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::RISCVInterruptAttr::InterruptType]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:7793:45:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::RISCVInterruptAttr::InterruptType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = clang::RISCVInterruptAttr::InterruptType]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = clang::RISCVInterruptAttr::InterruptType]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:7798:14:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<clang::RISCVInterruptAttr::InterruptType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::ReturnTypestateAttr::ConsumedState; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::ReturnTypestateAttr::ConsumedState]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:8183:52:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::ReturnTypestateAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = clang::ReturnTypestateAttr::ConsumedState]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = clang::ReturnTypestateAttr::ConsumedState]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:8188:14:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<clang::ReturnTypestateAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::SetTypestateAttr::ConsumedState; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::SetTypestateAttr::ConsumedState]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:8474:49:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::SetTypestateAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = clang::SetTypestateAttr::ConsumedState]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = clang::SetTypestateAttr::ConsumedState]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:8479:14:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<clang::SetTypestateAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::TestTypestateAttr::ConsumedState; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::TestTypestateAttr::ConsumedState]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:8986:52:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::TestTypestateAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = clang::TestTypestateAttr::ConsumedState]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = clang::TestTypestateAttr::ConsumedState]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:8990:14:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<clang::TestTypestateAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::TypeVisibilityAttr::VisibilityType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::TypeVisibilityAttr::VisibilityType]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:9343:51:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::TypeVisibilityAttr::VisibilityType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = clang::TypeVisibilityAttr::VisibilityType]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = clang::TypeVisibilityAttr::VisibilityType]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:9349:14:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<clang::TypeVisibilityAttr::VisibilityType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::VisibilityAttr::VisibilityType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::VisibilityAttr::VisibilityType]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:9731:47:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::VisibilityAttr::VisibilityType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = clang::VisibilityAttr::VisibilityType]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = clang::VisibilityAttr::VisibilityType]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:9737:14:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<clang::VisibilityAttr::VisibilityType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer& std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() [with _Tp = clang::SourceManager::OverriddenFilesInfoTy; _Dp = std::default_delete<clang::SourceManager::OverriddenFilesInfoTy>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = clang::SourceManager::OverriddenFilesInfoTy*]':
/usr/include/c++/7/bits/unique_ptr.h:374:6:   required from 'void std::unique_ptr<_Tp, _Dp>::reset(std::unique_ptr<_Tp, _Dp>::pointer) [with _Tp = clang::SourceManager::OverriddenFilesInfoTy; _Dp = std::default_delete<clang::SourceManager::OverriddenFilesInfoTy>; std::unique_ptr<_Tp, _Dp>::pointer = clang::SourceManager::OverriddenFilesInfoTy*]'
/llvm/tools/clang/include/clang/Basic/SourceManager.h:625:58:   required from here
/usr/include/c++/7/bits/unique_ptr.h:146:47: error: no matching function for call to 'get<0>(std::tuple<clang::SourceManager::OverriddenFilesInfoTy*, std::default_delete<clang::SourceManager::OverriddenFilesInfoTy> >&)'
       pointer&   _M_ptr() { return std::get<0>(_M_t); }
                                    ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer& std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() [with _Tp = llvm::SpecialCaseList::Matcher; _Dp = std::default_delete<llvm::SpecialCaseList::Matcher>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = llvm::SpecialCaseList::Matcher*]':
/usr/include/c++/7/bits/unique_ptr.h:266:8:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = llvm::SpecialCaseList::Matcher; _Dp = std::default_delete<llvm::SpecialCaseList::Matcher>]'
/llvm/include/llvm/Support/SpecialCaseList.h:133:70:   required from here
/usr/include/c++/7/bits/unique_ptr.h:146:47: error: no matching function for call to 'get<0>(std::tuple<llvm::SpecialCaseList::Matcher*, std::default_delete<llvm::SpecialCaseList::Matcher> >&)'
       pointer&   _M_ptr() { return std::get<0>(_M_t); }
                                    ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/Support/Host.h:16:0,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringMap.h: In instantiation of 'static llvm::StringMapEntry<ValueTy>* llvm::StringMapEntry<ValueTy>::Create(llvm::StringRef, AllocatorTy&, InitTy&& ...) [with AllocatorTy = llvm::MallocAllocator; InitTy = {clang::OpenCLOptions::Info&}; ValueTy = clang::OpenCLOptions::Info]':
/llvm/include/llvm/ADT/StringMap.h:268:39:   required from 'llvm::StringMap<ValueTy, AllocatorTy>::StringMap(const llvm::StringMap<ValueTy, AllocatorTy>&) [with ValueTy = clang::OpenCLOptions::Info; AllocatorTy = llvm::MallocAllocator]'
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:108:19:   required from here
/llvm/include/llvm/ADT/StringMap.h:169:5: error: no matching function for call to 'operator new(sizetype, llvm::StringMapEntry<clang::OpenCLOptions::Info>*&)'
     new (NewItem) StringMapEntry(KeyLength, std::forward<InitTy>(InitVals)...);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::StringMapEntry<clang::OpenCLOptions::Info>*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/Support/Host.h:16:0,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringMap.h:169:5: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::StringMapEntry<clang::OpenCLOptions::Info>*'
     new (NewItem) StringMapEntry(KeyLength, std::forward<InitTy>(InitVals)...);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer& std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() [with _Tp = llvm::DataLayout; _Dp = std::default_delete<llvm::DataLayout>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = llvm::DataLayout*]':
/usr/include/c++/7/bits/unique_ptr.h:374:6:   required from 'void std::unique_ptr<_Tp, _Dp>::reset(std::unique_ptr<_Tp, _Dp>::pointer) [with _Tp = llvm::DataLayout; _Dp = std::default_delete<llvm::DataLayout>; std::unique_ptr<_Tp, _Dp>::pointer = llvm::DataLayout*]'
/llvm/tools/clang/include/clang/Basic/TargetInfo.h:135:46:   required from here
/usr/include/c++/7/bits/unique_ptr.h:146:47: error: no matching function for call to 'get<0>(std::tuple<llvm::DataLayout*, std::default_delete<llvm::DataLayout> >&)'
       pointer&   _M_ptr() { return std::get<0>(_M_t); }
                                    ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::LangAS; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::LangAS]'
/llvm/tools/clang/include/clang/Basic/TargetInfo.h:1205:20:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::LangAS, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
In file included from /llvm/include/llvm/ADT/SmallString.h:16:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/SmallVector.h: In instantiation of 'void llvm::SmallVectorTemplateBase<T, <anonymous> >::push_back(T&&) [with T = std::pair<void*, long unsigned int>; bool <anonymous> = false]':
/llvm/include/llvm/Support/Allocator.h:249:33:   required from 'void* llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>::Allocate(size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; size_t = long unsigned int]'
/llvm/tools/clang/include/clang/AST/ASTContext.h:669:42:   required from here
/llvm/include/llvm/ADT/SmallVector.h:221:5: error: no matching function for call to 'operator new(sizetype, void*)'
     ::new ((void*) this->end()) T(::std::move(Elt));
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/ADT/SmallString.h:16:0,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/SmallVector.h:221:5: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     ::new ((void*) this->end()) T(::std::move(Elt));
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::OptionalStorage(T&&) [with T = clang::CharUnits; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:126:47:   required from 'llvm::Optional<T>::Optional(T&&) [with T = clang::CharUnits]'
/llvm/tools/clang/include/clang/AST/ASTContext.h:2094:33:   required from here
/llvm/include/llvm/ADT/Optional.h:45:18: error: 'struct llvm::AlignedCharArrayUnion<clang::CharUnits, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     new (storage.buffer) T(std::forward<T>(y));
          ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = clang::NullabilityKind]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = clang::NullabilityKind]'
/llvm/tools/clang/include/clang/AST/ASTContext.h:2319:12:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<clang::NullabilityKind, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = unsigned int; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = unsigned int]'
/llvm/tools/clang/include/clang/AST/ExprObjC.h:346:65:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<unsigned int, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::Stmt>*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<const clang::ast_matchers::internal::Matcher<clang::Stmt>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::Stmt>*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<const clang::ast_matchers::internal::Matcher<clang::Stmt>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::Stmt>*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:114:16:   required from 'ResultT clang::ast_matchers::internal::VariadicFunction<ResultT, ArgT, Func>::Execute(const ArgsT& ...) const [with ArgsT = {clang::ast_matchers::internal::Matcher<clang::Stmt>}; ResultT = clang::ast_matchers::internal::BindableMatcher<clang::Stmt>; ArgT = clang::ast_matchers::internal::Matcher<clang::Stmt>; ResultT (* Func)(llvm::ArrayRef<const ArgT*>) = clang::ast_matchers::internal::makeAllOfComposite<clang::Stmt>]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:97:19:   required from 'ResultT clang::ast_matchers::internal::VariadicFunction<ResultT, ArgT, Func>::operator()(const ArgT&, const ArgsT& ...) const [with ArgsT = {}; ResultT = clang::ast_matchers::internal::BindableMatcher<clang::Stmt>; ArgT = clang::ast_matchers::internal::Matcher<clang::Stmt>; ResultT (* Func)(llvm::ArrayRef<const ArgT*>) = clang::ast_matchers::internal::makeAllOfComposite<clang::Stmt>]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:2499:27:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::Stmt>*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::Stmt>*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::Stmt>*> >::_Base_type {aka std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::Stmt>*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::Stmt>*> >::_Base_type {aka struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::Stmt>*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::Decl>*> >':
/usr/include/c++/7/bits/stl_vector.h:77:21:   required from 'struct std::_Vector_base<const clang::ast_matchers::internal::Matcher<clang::Decl>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::Decl>*> >'
/usr/include/c++/7/bits/stl_vector.h:216:11:   required from 'class std::vector<const clang::ast_matchers::internal::Matcher<clang::Decl>*, std::allocator<const clang::ast_matchers::internal::Matcher<clang::Decl>*> >'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:114:16:   required from 'ResultT clang::ast_matchers::internal::VariadicFunction<ResultT, ArgT, Func>::Execute(const ArgsT& ...) const [with ArgsT = {clang::ast_matchers::internal::Matcher<clang::Decl>}; ResultT = clang::ast_matchers::internal::BindableMatcher<clang::Decl>; ArgT = clang::ast_matchers::internal::Matcher<clang::Decl>; ResultT (* Func)(llvm::ArrayRef<const ArgT*>) = clang::ast_matchers::internal::makeAllOfComposite<clang::Decl>]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:97:19:   required from 'ResultT clang::ast_matchers::internal::VariadicFunction<ResultT, ArgT, Func>::operator()(const ArgT&, const ArgsT& ...) const [with ArgsT = {}; ResultT = clang::ast_matchers::internal::BindableMatcher<clang::Decl>; ArgT = clang::ast_matchers::internal::Matcher<clang::Decl>; ResultT (* Func)(llvm::ArrayRef<const ArgT*>) = clang::ast_matchers::internal::makeAllOfComposite<clang::Decl>]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:5074:77:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::Decl>*> >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::Decl>*> >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::Decl>*> >::_Base_type {aka std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::Decl>*> >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::Decl>*> >::_Base_type {aka struct std::allocator_traits<std::allocator<const clang::ast_matchers::internal::Matcher<clang::Decl>*> >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /usr/include/c++/7/string:52:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.h: In instantiation of 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator, const _CharT*, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer = const char*]':
/usr/include/c++/7/bits/basic_string.h:1452:63:   required from 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::assign(_InputIterator, _InputIterator) [with _InputIterator = const char*; <template-parameter-2-2> = void; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]'
/llvm/include/llvm/Support/Timer.h:204:47:   required from here
/usr/include/c++/7/bits/basic_string.h:2113:26: error: no matching function for call to 'std::__cxx11::basic_string<char>::replace(long int, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >::difference_type, const char*&, long int)'
         __k1, __k2 - __k1);
                          ^
/usr/include/c++/7/bits/basic_string.h:1975:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer = const char*]
       replace(__const_iterator __i1, __const_iterator __i2,
       ^~~~~~~
/usr/include/c++/7/bits/basic_string.h:1975:7: note:   candidate expects 3 arguments, 4 provided
/usr/include/c++/7/bits/basic_string.h:2017:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer = const char*]
       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
       ^~~~~~~
/usr/include/c++/7/bits/basic_string.h:2017:7: note:   candidate expects 3 arguments, 4 provided
/usr/include/c++/7/bits/basic_string.h:2065:9: note: candidate: template<class _InputIterator, class> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
         replace(const_iterator __i1, const_iterator __i2,
         ^~~~~~~
/usr/include/c++/7/bits/basic_string.h:2065:9: note:   template argument deduction/substitution failed:
/usr/include/c++/7/bits/basic_string.h:2113:26: note:   deduced conflicting types for parameter '_InputIterator' ('const char*' and 'long int')
         __k1, __k2 - __k1);
                          ^
/usr/include/c++/7/bits/basic_string.h:2095:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator, _CharT*, _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer = const char*]
       replace(__const_iterator __i1, __const_iterator __i2,
       ^~~~~~~
/usr/include/c++/7/bits/basic_string.h:2095:7: note:   no known conversion for argument 1 from 'long int' to 'std::__cxx11::basic_string<char>::__const_iterator {aka __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >}'
/usr/include/c++/7/bits/basic_string.h:2106:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator, const _CharT*, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer = const char*]
       replace(__const_iterator __i1, __const_iterator __i2,
       ^~~~~~~
/usr/include/c++/7/bits/basic_string.h:2106:7: note:   no known conversion for argument 1 from 'long int' to 'std::__cxx11::basic_string<char>::__const_iterator {aka __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >}'
/usr/include/c++/7/bits/basic_string.h:2117:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer = const char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer = char*]
       replace(__const_iterator __i1, __const_iterator __i2,
       ^~~~~~~
/usr/include/c++/7/bits/basic_string.h:2117:7: note:   no known conversion for argument 1 from 'long int' to 'std::__cxx11::basic_string<char>::__const_iterator {aka __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >}'
/usr/include/c++/7/bits/basic_string.h:2128:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::__const_iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer = const char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]
       replace(__const_iterator __i1, __const_iterator __i2,
       ^~~~~~~
/usr/include/c++/7/bits/basic_string.h:2128:7: note:   no known conversion for argument 1 from 'long int' to 'std::__cxx11::basic_string<char>::__const_iterator {aka __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >}'
/usr/include/c++/7/bits/basic_string.h:2153:21: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator, std::initializer_list<_Tp>) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer = const char*]
       basic_string& replace(const_iterator __i1, const_iterator __i2,
                     ^~~~~~~
/usr/include/c++/7/bits/basic_string.h:2153:21: note:   candidate expects 3 arguments, 4 provided
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of '_Dp& std::__uniq_ptr_impl<_Tp, _Dp>::_M_deleter() [with _Tp = llvm::APFloat; _Dp = std::default_delete<llvm::APFloat []>]':
/usr/include/c++/7/bits/unique_ptr.h:593:32:   required from 'std::unique_ptr<_Tp [], _Dp>::deleter_type& std::unique_ptr<_Tp [], _Dp>::get_deleter() [with _Tp = llvm::APFloat; _Dp = std::default_delete<llvm::APFloat []>; std::unique_ptr<_Tp [], _Dp>::deleter_type = std::default_delete<llvm::APFloat []>]'
/usr/include/c++/7/bits/unique_ptr.h:527:15:   required from 'std::unique_ptr<_Tp [], _Dp>::~unique_ptr() [with _Tp = llvm::APFloat; _Dp = std::default_delete<llvm::APFloat []>]'
/llvm/include/llvm/ADT/APFloat.h:573:7:   required from here
/usr/include/c++/7/bits/unique_ptr.h:148:51: error: no matching function for call to 'get<1>(std::tuple<llvm::APFloat*, std::default_delete<llvm::APFloat []> >&)'
       _Dp&       _M_deleter() { return std::get<1>(_M_t); }
                                        ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() const [with _Tp = llvm::APFloat; _Dp = std::default_delete<llvm::APFloat []>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = llvm::APFloat*]':
/usr/include/c++/7/bits/unique_ptr.h:588:28:   required from 'std::unique_ptr<_Tp [], _Dp>::pointer std::unique_ptr<_Tp [], _Dp>::get() const [with _Tp = llvm::APFloat; _Dp = std::default_delete<llvm::APFloat []>; std::unique_ptr<_Tp [], _Dp>::pointer = llvm::APFloat*]'
/usr/include/c++/7/bits/unique_ptr.h:582:12:   required from 'typename std::add_lvalue_reference<_Tp>::type std::unique_ptr<_Tp [], _Dp>::operator[](size_t) const [with _Tp = llvm::APFloat; _Dp = std::default_delete<llvm::APFloat []>; typename std::add_lvalue_reference<_Tp>::type = llvm::APFloat&; size_t = long unsigned int]'
/llvm/include/llvm/ADT/APFloat.h:605:40:   required from here
/usr/include/c++/7/bits/unique_ptr.h:147:53: error: no matching function for call to 'get<0>(const std::tuple<llvm::APFloat*, std::default_delete<llvm::APFloat []> >&)'
       pointer    _M_ptr() const { return std::get<0>(_M_t); }
                                          ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h: In instantiation of 'void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::initEmpty() [with DerivedT = llvm::DenseMap<unsigned int, clang::DiagnosticMapping>; KeyT = unsigned int; ValueT = clang::DiagnosticMapping; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, clang::DiagnosticMapping>]':
/llvm/include/llvm/ADT/DenseMap.h:791:7:   required from 'void llvm::DenseMap<KeyT, ValueT, KeyInfoT, BucketT>::init(unsigned int) [with KeyT = unsigned int; ValueT = clang::DiagnosticMapping; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, clang::DiagnosticMapping>]'
/llvm/include/llvm/ADT/DenseMap.h:726:56:   required from 'llvm::DenseMap<KeyT, ValueT, KeyInfoT, BucketT>::DenseMap(unsigned int) [with KeyT = unsigned int; ValueT = clang::DiagnosticMapping; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, clang::DiagnosticMapping>]'
/llvm/tools/clang/include/clang/Basic/Diagnostic.h:283:39:   required from here
/llvm/include/llvm/ADT/DenseMap.h:377:7: error: no matching function for call to 'operator new(sizetype, unsigned int*)'
       ::new (&B->getFirst()) KeyT(EmptyKey);
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'unsigned int*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h:377:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'unsigned int*'
       ::new (&B->getFirst()) KeyT(EmptyKey);
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/DenseMap.h: In instantiation of 'BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const unsigned int&; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, clang::DiagnosticMapping>; KeyT = unsigned int; ValueT = clang::DiagnosticMapping; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, clang::DiagnosticMapping>]':
/llvm/include/llvm/ADT/DenseMap.h:322:29:   required from 'llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<unsigned int, clang::DiagnosticMapping>; KeyT = unsigned int; ValueT = clang::DiagnosticMapping; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, clang::DiagnosticMapping>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, clang::DiagnosticMapping>]'
/llvm/include/llvm/ADT/DenseMap.h:326:28:   required from 'ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<unsigned int, clang::DiagnosticMapping>; KeyT = unsigned int; ValueT = clang::DiagnosticMapping; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, clang::DiagnosticMapping>]'
/llvm/tools/clang/include/clang/Basic/Diagnostic.h:290:19:   required from here
/llvm/include/llvm/ADT/DenseMap.h:546:5: error: no matching function for call to 'operator new(sizetype, clang::DiagnosticMapping*)'
     ::new (&TheBucket->getSecond()) ValueT(std::forward<ValueArgs>(Values)...);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'clang::DiagnosticMapping*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h:546:5: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'clang::DiagnosticMapping*'
     ::new (&TheBucket->getSecond()) ValueT(std::forward<ValueArgs>(Values)...);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of '_Dp& std::__uniq_ptr_impl<_Tp, _Dp>::_M_deleter() [with _Tp = clang::DiagnosticConsumer; _Dp = std::default_delete<clang::DiagnosticConsumer>]':
/usr/include/c++/7/bits/unique_ptr.h:342:32:   required from 'std::unique_ptr<_Tp, _Dp>::deleter_type& std::unique_ptr<_Tp, _Dp>::get_deleter() [with _Tp = clang::DiagnosticConsumer; _Dp = std::default_delete<clang::DiagnosticConsumer>; std::unique_ptr<_Tp, _Dp>::deleter_type = std::default_delete<clang::DiagnosticConsumer>]'
/usr/include/c++/7/bits/unique_ptr.h:239:55:   required from 'std::unique_ptr<_Tp, _Dp>::unique_ptr(std::unique_ptr<_Tp, _Dp>&&) [with _Tp = clang::DiagnosticConsumer; _Dp = std::default_delete<clang::DiagnosticConsumer>]'
/llvm/tools/clang/include/clang/Basic/Diagnostic.h:517:76:   required from here
/usr/include/c++/7/bits/unique_ptr.h:148:51: error: no matching function for call to 'get<1>(std::tuple<clang::DiagnosticConsumer*, std::default_delete<clang::DiagnosticConsumer> >&)'
       _Dp&       _M_deleter() { return std::get<1>(_M_t); }
                                        ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/Support/Host.h:16:0,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringMap.h: In instantiation of 'static llvm::StringMapEntry<ValueTy>* llvm::StringMapEntry<ValueTy>::Create(llvm::StringRef, AllocatorTy&, InitTy&& ...) [with AllocatorTy = llvm::BumpPtrAllocatorImpl<>; InitTy = {clang::IdentifierInfo*}; ValueTy = clang::IdentifierInfo*]':
/llvm/include/llvm/ADT/StringMap.h:403:32:   required from 'std::pair<llvm::StringMapIterator<ValueTy>, bool> llvm::StringMap<ValueTy, AllocatorTy>::try_emplace(llvm::StringRef, ArgsTy&& ...) [with ArgsTy = {clang::IdentifierInfo*}; ValueTy = clang::IdentifierInfo*; AllocatorTy = llvm::BumpPtrAllocatorImpl<>]'
/llvm/include/llvm/ADT/StringMap.h:386:23:   required from 'std::pair<llvm::StringMapIterator<ValueTy>, bool> llvm::StringMap<ValueTy, AllocatorTy>::insert(std::pair<llvm::StringRef, ValueTy>) [with ValueTy = clang::IdentifierInfo*; AllocatorTy = llvm::BumpPtrAllocatorImpl<>]'
/llvm/tools/clang/include/clang/Basic/IdentifierTable.h:519:66:   required from here
/llvm/include/llvm/ADT/StringMap.h:169:5: error: no matching function for call to 'operator new(sizetype, llvm::StringMapEntry<clang::IdentifierInfo*>*&)'
     new (NewItem) StringMapEntry(KeyLength, std::forward<InitTy>(InitVals)...);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::StringMapEntry<clang::IdentifierInfo*>*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/Support/Host.h:16:0,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringMap.h:169:5: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::StringMapEntry<clang::IdentifierInfo*>*'
     new (NewItem) StringMapEntry(KeyLength, std::forward<InitTy>(InitVals)...);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple: In instantiation of 'static constexpr bool std::__tuple_compare<_Tp, _Up, __i, __size>::__less(const _Tp&, const _Up&) [with _Tp = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; _Up = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; long unsigned int __i = 1; long unsigned int __size = 4]':
/usr/include/c++/7/tuple:1381:61:   required from 'static constexpr bool std::__tuple_compare<_Tp, _Up, __i, __size>::__less(const _Tp&, const _Up&) [with _Tp = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; _Up = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; long unsigned int __i = 0; long unsigned int __size = 4]'
/usr/include/c++/7/tuple:1418:31:   required from 'constexpr bool std::operator<(const std::tuple<_Tps ...>&, const std::tuple<_Elements ...>&) [with _TElements = {const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&}; _UElements = {const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&}]'
/llvm/include/llvm/Support/VersionTuple.h:111:58:   required from here
/usr/include/c++/7/tuple:1379:27: error: no matching function for call to 'get<1>(const std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>&)'
  return bool(std::get<__i>(__t) < std::get<__i>(__u))
              ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1379:48: error: no matching function for call to 'get<1>(const std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>&)'
  return bool(std::get<__i>(__t) < std::get<__i>(__u))
                                   ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1380:27: error: no matching function for call to 'get<1>(const std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>&)'
    || (!bool(std::get<__i>(__u) < std::get<__i>(__t))
              ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1380:48: error: no matching function for call to 'get<1>(const std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>&)'
    || (!bool(std::get<__i>(__u) < std::get<__i>(__t))
                                   ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1382:7: error: body of constexpr function 'static constexpr bool std::__tuple_compare<_Tp, _Up, __i, __size>::__less(const _Tp&, const _Up&) [with _Tp = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; _Up = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; long unsigned int __i = 1; long unsigned int __size = 4]' not a return-statement
       }
       ^
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = const char*; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = const char*; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = const char*; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<const char*, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = const char*; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = const char*]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = const char*; R = const char*]'
/llvm/include/llvm/Support/FormatProviders.h:266:46:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<const char*, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = const char*]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = const char*]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = const char*; R = const char*]'
/llvm/include/llvm/Support/FormatProviders.h:271:41:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<const char*, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() const [with _Tp = llvm::ErrorInfoBase; _Dp = std::default_delete<llvm::ErrorInfoBase>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = llvm::ErrorInfoBase*]':
/usr/include/c++/7/bits/unique_ptr.h:337:28:   required from 'std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::get() const [with _Tp = llvm::ErrorInfoBase; _Dp = std::default_delete<llvm::ErrorInfoBase>; std::unique_ptr<_Tp, _Dp>::pointer = llvm::ErrorInfoBase*]'
/usr/include/c++/7/bits/unique_ptr.h:359:19:   required from 'std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::release() [with _Tp = llvm::ErrorInfoBase; _Dp = std::default_delete<llvm::ErrorInfoBase>; std::unique_ptr<_Tp, _Dp>::pointer = llvm::ErrorInfoBase*]'
/llvm/include/llvm/Support/Error.h:199:28:   required from here
/usr/include/c++/7/bits/unique_ptr.h:147:53: error: no matching function for call to 'get<0>(const std::tuple<llvm::ErrorInfoBase*, std::default_delete<llvm::ErrorInfoBase> >&)'
       pointer    _M_ptr() const { return std::get<0>(_M_t); }
                                          ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of '_Dp& std::__uniq_ptr_impl<_Tp, _Dp>::_M_deleter() [with _Tp = llvm::ErrorInfoBase; _Dp = std::default_delete<llvm::ErrorInfoBase>]':
/usr/include/c++/7/bits/unique_ptr.h:342:32:   required from 'std::unique_ptr<_Tp, _Dp>::deleter_type& std::unique_ptr<_Tp, _Dp>::get_deleter() [with _Tp = llvm::ErrorInfoBase; _Dp = std::default_delete<llvm::ErrorInfoBase>; std::unique_ptr<_Tp, _Dp>::deleter_type = std::default_delete<llvm::ErrorInfoBase>]'
/usr/include/c++/7/bits/unique_ptr.h:268:15:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = llvm::ErrorInfoBase; _Dp = std::default_delete<llvm::ErrorInfoBase>]'
/llvm/include/llvm/Support/Error.h:304:48:   required from here
/usr/include/c++/7/bits/unique_ptr.h:148:51: error: no matching function for call to 'get<1>(std::tuple<llvm::ErrorInfoBase*, std::default_delete<llvm::ErrorInfoBase> >&)'
       _Dp&       _M_deleter() { return std::get<1>(_M_t); }
                                        ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of '_Dp& std::__uniq_ptr_impl<_Tp, _Dp>::_M_deleter() [with _Tp = llvm::ErrorList; _Dp = std::default_delete<llvm::ErrorList>]':
/usr/include/c++/7/bits/unique_ptr.h:342:32:   required from 'std::unique_ptr<_Tp, _Dp>::deleter_type& std::unique_ptr<_Tp, _Dp>::get_deleter() [with _Tp = llvm::ErrorList; _Dp = std::default_delete<llvm::ErrorList>; std::unique_ptr<_Tp, _Dp>::deleter_type = std::default_delete<llvm::ErrorList>]'
/usr/include/c++/7/bits/unique_ptr.h:268:15:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = llvm::ErrorList; _Dp = std::default_delete<llvm::ErrorList>]'
/llvm/include/llvm/Support/Error.h:414:58:   required from here
/usr/include/c++/7/bits/unique_ptr.h:148:51: error: no matching function for call to 'get<1>(std::tuple<llvm::ErrorList*, std::default_delete<llvm::ErrorList> >&)'
       _Dp&       _M_deleter() { return std::get<1>(_M_t); }
                                        ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of '_Dp& std::__uniq_ptr_impl<_Tp, _Dp>::_M_deleter() [with _Tp = llvm::FileError; _Dp = std::default_delete<llvm::FileError>]':
/usr/include/c++/7/bits/unique_ptr.h:342:32:   required from 'std::unique_ptr<_Tp, _Dp>::deleter_type& std::unique_ptr<_Tp, _Dp>::get_deleter() [with _Tp = llvm::FileError; _Dp = std::default_delete<llvm::FileError>; std::unique_ptr<_Tp, _Dp>::deleter_type = std::default_delete<llvm::FileError>]'
/usr/include/c++/7/bits/unique_ptr.h:268:15:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = llvm::FileError; _Dp = std::default_delete<llvm::FileError>]'
/llvm/include/llvm/Support/Error.h:1205:78:   required from here
/usr/include/c++/7/bits/unique_ptr.h:148:51: error: no matching function for call to 'get<1>(std::tuple<llvm::FileError*, std::default_delete<llvm::FileError> >&)'
       _Dp&       _M_deleter() { return std::get<1>(_M_t); }
                                        ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple: In instantiation of 'static constexpr bool std::__tuple_compare<_Tp, _Up, __i, __size>::__less(const _Tp&, const _Up&) [with _Tp = std::tuple<const long unsigned int&, const long unsigned int&>; _Up = std::tuple<const long unsigned int&, const long unsigned int&>; long unsigned int __i = 1; long unsigned int __size = 2]':
/usr/include/c++/7/tuple:1381:61:   required from 'static constexpr bool std::__tuple_compare<_Tp, _Up, __i, __size>::__less(const _Tp&, const _Up&) [with _Tp = std::tuple<const long unsigned int&, const long unsigned int&>; _Up = std::tuple<const long unsigned int&, const long unsigned int&>; long unsigned int __i = 0; long unsigned int __size = 2]'
/usr/include/c++/7/tuple:1418:31:   required from 'constexpr bool std::operator<(const std::tuple<_Tps ...>&, const std::tuple<_Elements ...>&) [with _TElements = {const long unsigned int&, const long unsigned int&}; _UElements = {const long unsigned int&, const long unsigned int&}]'
/llvm/include/llvm/Support/FileSystem.h:147:70:   required from here
/usr/include/c++/7/tuple:1379:27: error: no matching function for call to 'get<1>(const std::tuple<const long unsigned int&, const long unsigned int&>&)'
  return bool(std::get<__i>(__t) < std::get<__i>(__u))
              ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1379:48: error: no matching function for call to 'get<1>(const std::tuple<const long unsigned int&, const long unsigned int&>&)'
  return bool(std::get<__i>(__t) < std::get<__i>(__u))
                                   ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1380:27: error: no matching function for call to 'get<1>(const std::tuple<const long unsigned int&, const long unsigned int&>&)'
    || (!bool(std::get<__i>(__u) < std::get<__i>(__t))
              ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1380:48: error: no matching function for call to 'get<1>(const std::tuple<const long unsigned int&, const long unsigned int&>&)'
    || (!bool(std::get<__i>(__u) < std::get<__i>(__t))
                                   ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1382:7: error: body of constexpr function 'static constexpr bool std::__tuple_compare<_Tp, _Up, __i, __size>::__less(const _Tp&, const _Up&) [with _Tp = std::tuple<const long unsigned int&, const long unsigned int&>; _Up = std::tuple<const long unsigned int&, const long unsigned int&>; long unsigned int __i = 1; long unsigned int __size = 2]' not a return-statement
       }
       ^
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of '_Dp& std::__uniq_ptr_impl<_Tp, _Dp>::_M_deleter() [with _Tp = llvm::MemoryBuffer; _Dp = std::default_delete<llvm::MemoryBuffer>]':
/usr/include/c++/7/bits/unique_ptr.h:342:32:   required from 'std::unique_ptr<_Tp, _Dp>::deleter_type& std::unique_ptr<_Tp, _Dp>::get_deleter() [with _Tp = llvm::MemoryBuffer; _Dp = std::default_delete<llvm::MemoryBuffer>; std::unique_ptr<_Tp, _Dp>::deleter_type = std::default_delete<llvm::MemoryBuffer>]'
/usr/include/c++/7/bits/unique_ptr.h:268:15:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = llvm::MemoryBuffer; _Dp = std::default_delete<llvm::MemoryBuffer>]'
/llvm/include/llvm/Support/SourceMgr.h:87:5:   required from here
/usr/include/c++/7/bits/unique_ptr.h:148:51: error: no matching function for call to 'get<1>(std::tuple<llvm::MemoryBuffer*, std::default_delete<llvm::MemoryBuffer> >&)'
       _Dp&       _M_deleter() { return std::get<1>(_M_t); }
                                        ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = bool; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:78:18:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(const T&) [with T = bool; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:147:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(const T&) [with T = bool]'
/llvm/include/llvm/Support/VirtualFileSystem.h:745:23:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<bool, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of '_Dp& std::__uniq_ptr_impl<_Tp, _Dp>::_M_deleter() [with _Tp = llvm::vfs::File; _Dp = std::default_delete<llvm::vfs::File>]':
/usr/include/c++/7/bits/unique_ptr.h:342:32:   required from 'std::unique_ptr<_Tp, _Dp>::deleter_type& std::unique_ptr<_Tp, _Dp>::get_deleter() [with _Tp = llvm::vfs::File; _Dp = std::default_delete<llvm::vfs::File>; std::unique_ptr<_Tp, _Dp>::deleter_type = std::default_delete<llvm::vfs::File>]'
/usr/include/c++/7/bits/unique_ptr.h:268:15:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = llvm::vfs::File; _Dp = std::default_delete<llvm::vfs::File>]'
/llvm/tools/clang/include/clang/Basic/FileManager.h:78:72:   required from here
/usr/include/c++/7/bits/unique_ptr.h:148:51: error: no matching function for call to 'get<1>(std::tuple<llvm::vfs::File*, std::default_delete<llvm::vfs::File> >&)'
       _Dp&       _M_deleter() { return std::get<1>(_M_t); }
                                        ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/Support/Host.h:16:0,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringMap.h: In instantiation of 'static llvm::StringMapEntry<ValueTy>* llvm::StringMapEntry<ValueTy>::Create(llvm::StringRef, AllocatorTy&, InitTy&& ...) [with AllocatorTy = llvm::MallocAllocator; InitTy = {}; ValueTy = unsigned int]':
/llvm/include/llvm/ADT/StringMap.h:403:32:   required from 'std::pair<llvm::StringMapIterator<ValueTy>, bool> llvm::StringMap<ValueTy, AllocatorTy>::try_emplace(llvm::StringRef, ArgsTy&& ...) [with ArgsTy = {}; ValueTy = unsigned int; AllocatorTy = llvm::MallocAllocator]'
/llvm/include/llvm/ADT/StringMap.h:355:58:   required from 'ValueTy& llvm::StringMap<ValueTy, AllocatorTy>::operator[](llvm::StringRef) [with ValueTy = unsigned int; AllocatorTy = llvm::MallocAllocator]'
/llvm/tools/clang/include/clang/Basic/Module.h:432:32:   required from here
/llvm/include/llvm/ADT/StringMap.h:169:5: error: no matching function for call to 'operator new(sizetype, llvm::StringMapEntry<unsigned int>*&)'
     new (NewItem) StringMapEntry(KeyLength, std::forward<InitTy>(InitVals)...);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::StringMapEntry<unsigned int>*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/Support/Host.h:16:0,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringMap.h:169:5: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::StringMapEntry<unsigned int>*'
     new (NewItem) StringMapEntry(KeyLength, std::forward<InitTy>(InitVals)...);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of '_Dp& std::__uniq_ptr_impl<_Tp, _Dp>::_M_deleter() [with _Tp = clang::AtomicScopeModel; _Dp = std::default_delete<clang::AtomicScopeModel>]':
/usr/include/c++/7/bits/unique_ptr.h:342:32:   required from 'std::unique_ptr<_Tp, _Dp>::deleter_type& std::unique_ptr<_Tp, _Dp>::get_deleter() [with _Tp = clang::AtomicScopeModel; _Dp = std::default_delete<clang::AtomicScopeModel>; std::unique_ptr<_Tp, _Dp>::deleter_type = std::default_delete<clang::AtomicScopeModel>]'
/usr/include/c++/7/bits/unique_ptr.h:268:15:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = clang::AtomicScopeModel; _Dp = std::default_delete<clang::AtomicScopeModel>]'
/llvm/tools/clang/include/clang/Basic/SyncScope.h:145:46:   required from here
/usr/include/c++/7/bits/unique_ptr.h:148:51: error: no matching function for call to 'get<1>(std::tuple<clang::AtomicScopeModel*, std::default_delete<clang::AtomicScopeModel> >&)'
       _Dp&       _M_deleter() { return std::get<1>(_M_t); }
                                        ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of '_Dp& std::__uniq_ptr_impl<_Tp, _Dp>::_M_deleter() [with _Tp = clang::AtomicScopeOpenCLModel; _Dp = std::default_delete<clang::AtomicScopeOpenCLModel>]':
/usr/include/c++/7/bits/unique_ptr.h:342:32:   required from 'std::unique_ptr<_Tp, _Dp>::deleter_type& std::unique_ptr<_Tp, _Dp>::get_deleter() [with _Tp = clang::AtomicScopeOpenCLModel; _Dp = std::default_delete<clang::AtomicScopeOpenCLModel>; std::unique_ptr<_Tp, _Dp>::deleter_type = std::default_delete<clang::AtomicScopeOpenCLModel>]'
/usr/include/c++/7/bits/unique_ptr.h:268:15:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = clang::AtomicScopeOpenCLModel; _Dp = std::default_delete<clang::AtomicScopeOpenCLModel>]'
/llvm/tools/clang/include/clang/Basic/SyncScope.h:147:54:   required from here
/usr/include/c++/7/bits/unique_ptr.h:148:51: error: no matching function for call to 'get<1>(std::tuple<clang::AtomicScopeOpenCLModel*, std::default_delete<clang::AtomicScopeOpenCLModel> >&)'
       _Dp&       _M_deleter() { return std::get<1>(_M_t); }
                                        ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() const [with _Tp = clang::AtomicScopeModel; _Dp = std::default_delete<clang::AtomicScopeModel>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = clang::AtomicScopeModel*]':
/usr/include/c++/7/bits/unique_ptr.h:337:28:   required from 'std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::get() const [with _Tp = clang::AtomicScopeModel; _Dp = std::default_delete<clang::AtomicScopeModel>; std::unique_ptr<_Tp, _Dp>::pointer = clang::AtomicScopeModel*]'
/usr/include/c++/7/bits/unique_ptr.h:351:19:   required from 'std::unique_ptr<_Tp, _Dp>::operator bool() const [with _Tp = clang::AtomicScopeModel; _Dp = std::default_delete<clang::AtomicScopeModel>]'
/llvm/tools/clang/include/clang/AST/Expr.h:5478:5:   required from here
/usr/include/c++/7/bits/unique_ptr.h:147:53: error: no matching function for call to 'get<0>(const std::tuple<clang::AtomicScopeModel*, std::default_delete<clang::AtomicScopeModel> >&)'
       pointer    _M_ptr() const { return std::get<0>(_M_t); }
                                          ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = llvm::Optional<clang::ARMInterruptAttr::InterruptType>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = llvm::Optional<clang::ARMInterruptAttr::InterruptType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = llvm::Optional<clang::ARMInterruptAttr::InterruptType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::ARMInterruptAttr::InterruptType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::ARMInterruptAttr::InterruptType>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::ARMInterruptAttr::InterruptType>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::ARMInterruptAttr::InterruptType>; R = llvm::Optional<clang::ARMInterruptAttr::InterruptType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:237:41:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::ARMInterruptAttr::InterruptType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = llvm::Optional<clang::ARMInterruptAttr::InterruptType>]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = llvm::Optional<clang::ARMInterruptAttr::InterruptType>]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = llvm::Optional<clang::ARMInterruptAttr::InterruptType>; R = llvm::Optional<clang::ARMInterruptAttr::InterruptType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:243:41:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::ARMInterruptAttr::InterruptType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = llvm::StringRef; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = llvm::StringRef; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = llvm::StringRef; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<llvm::StringRef, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::StringRef; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::StringRef]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::StringRef; R = llvm::StringRef]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:1544:40:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<llvm::StringRef, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = llvm::StringRef]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = llvm::StringRef]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = llvm::StringRef; R = llvm::StringRef]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:1554:40:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<llvm::StringRef, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = llvm::Optional<clang::BlocksAttr::BlockType>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = llvm::Optional<clang::BlocksAttr::BlockType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = llvm::Optional<clang::BlocksAttr::BlockType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::BlocksAttr::BlockType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::BlocksAttr::BlockType>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::BlocksAttr::BlockType>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::BlocksAttr::BlockType>; R = llvm::Optional<clang::BlocksAttr::BlockType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:1618:39:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::BlocksAttr::BlockType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = llvm::Optional<clang::BlocksAttr::BlockType>]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = llvm::Optional<clang::BlocksAttr::BlockType>]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = llvm::Optional<clang::BlocksAttr::BlockType>; R = llvm::Optional<clang::BlocksAttr::BlockType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:1619:37:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::BlocksAttr::BlockType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = llvm::Optional<clang::CallableWhenAttr::ConsumedState>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = llvm::Optional<clang::CallableWhenAttr::ConsumedState>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = llvm::Optional<clang::CallableWhenAttr::ConsumedState>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::CallableWhenAttr::ConsumedState>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::CallableWhenAttr::ConsumedState>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::CallableWhenAttr::ConsumedState>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::CallableWhenAttr::ConsumedState>; R = llvm::Optional<clang::CallableWhenAttr::ConsumedState>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:2167:49:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::CallableWhenAttr::ConsumedState>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = llvm::Optional<clang::CallableWhenAttr::ConsumedState>]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = llvm::Optional<clang::CallableWhenAttr::ConsumedState>]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = llvm::Optional<clang::CallableWhenAttr::ConsumedState>; R = llvm::Optional<clang::CallableWhenAttr::ConsumedState>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:2170:41:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::CallableWhenAttr::ConsumedState>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = llvm::Optional<clang::ConsumableAttr::ConsumedState>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = llvm::Optional<clang::ConsumableAttr::ConsumedState>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = llvm::Optional<clang::ConsumableAttr::ConsumedState>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::ConsumableAttr::ConsumedState>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::ConsumableAttr::ConsumedState>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::ConsumableAttr::ConsumedState>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::ConsumableAttr::ConsumedState>; R = llvm::Optional<clang::ConsumableAttr::ConsumedState>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:2575:47:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::ConsumableAttr::ConsumedState>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = llvm::Optional<clang::ConsumableAttr::ConsumedState>]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = llvm::Optional<clang::ConsumableAttr::ConsumedState>]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = llvm::Optional<clang::ConsumableAttr::ConsumedState>; R = llvm::Optional<clang::ConsumableAttr::ConsumedState>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:2578:41:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::ConsumableAttr::ConsumedState>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = llvm::Optional<clang::DiagnoseIfAttr::DiagnosticType>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = llvm::Optional<clang::DiagnoseIfAttr::DiagnosticType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = llvm::Optional<clang::DiagnoseIfAttr::DiagnosticType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::DiagnoseIfAttr::DiagnosticType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::DiagnoseIfAttr::DiagnosticType>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::DiagnoseIfAttr::DiagnosticType>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::DiagnoseIfAttr::DiagnosticType>; R = llvm::Optional<clang::DiagnoseIfAttr::DiagnosticType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:2983:46:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::DiagnoseIfAttr::DiagnosticType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = llvm::Optional<clang::DiagnoseIfAttr::DiagnosticType>]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = llvm::Optional<clang::DiagnoseIfAttr::DiagnosticType>]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = llvm::Optional<clang::DiagnoseIfAttr::DiagnosticType>; R = llvm::Optional<clang::DiagnoseIfAttr::DiagnosticType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:2985:42:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::DiagnoseIfAttr::DiagnosticType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = llvm::Optional<clang::EnumExtensibilityAttr::Kind>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = llvm::Optional<clang::EnumExtensibilityAttr::Kind>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = llvm::Optional<clang::EnumExtensibilityAttr::Kind>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::EnumExtensibilityAttr::Kind>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::EnumExtensibilityAttr::Kind>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::EnumExtensibilityAttr::Kind>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::EnumExtensibilityAttr::Kind>; R = llvm::Optional<clang::EnumExtensibilityAttr::Kind>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:3151:52:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::EnumExtensibilityAttr::Kind>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = llvm::Optional<clang::EnumExtensibilityAttr::Kind>]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = llvm::Optional<clang::EnumExtensibilityAttr::Kind>]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = llvm::Optional<clang::EnumExtensibilityAttr::Kind>; R = llvm::Optional<clang::EnumExtensibilityAttr::Kind>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:3153:32:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::EnumExtensibilityAttr::Kind>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = llvm::Optional<clang::LoopHintAttr::OptionType>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = llvm::Optional<clang::LoopHintAttr::OptionType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = llvm::Optional<clang::LoopHintAttr::OptionType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::LoopHintAttr::OptionType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::LoopHintAttr::OptionType>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::LoopHintAttr::OptionType>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::LoopHintAttr::OptionType>; R = llvm::Optional<clang::LoopHintAttr::OptionType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:4149:49:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::LoopHintAttr::OptionType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = llvm::Optional<clang::LoopHintAttr::OptionType>]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = llvm::Optional<clang::LoopHintAttr::OptionType>]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = llvm::Optional<clang::LoopHintAttr::OptionType>; R = llvm::Optional<clang::LoopHintAttr::OptionType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:4160:38:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::LoopHintAttr::OptionType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = llvm::Optional<clang::LoopHintAttr::LoopHintState>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = llvm::Optional<clang::LoopHintAttr::LoopHintState>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = llvm::Optional<clang::LoopHintAttr::LoopHintState>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::LoopHintAttr::LoopHintState>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::LoopHintAttr::LoopHintState>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::LoopHintAttr::LoopHintState>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::LoopHintAttr::LoopHintState>; R = llvm::Optional<clang::LoopHintAttr::LoopHintState>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:4190:43:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::LoopHintAttr::LoopHintState>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = llvm::Optional<clang::LoopHintAttr::LoopHintState>]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = llvm::Optional<clang::LoopHintAttr::LoopHintState>]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = llvm::Optional<clang::LoopHintAttr::LoopHintState>; R = llvm::Optional<clang::LoopHintAttr::LoopHintState>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:4195:41:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::LoopHintAttr::LoopHintState>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = llvm::Optional<clang::MipsInterruptAttr::InterruptType>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = llvm::Optional<clang::MipsInterruptAttr::InterruptType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = llvm::Optional<clang::MipsInterruptAttr::InterruptType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::MipsInterruptAttr::InterruptType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::MipsInterruptAttr::InterruptType>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::MipsInterruptAttr::InterruptType>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::MipsInterruptAttr::InterruptType>; R = llvm::Optional<clang::MipsInterruptAttr::InterruptType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:4722:49:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::MipsInterruptAttr::InterruptType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = llvm::Optional<clang::MipsInterruptAttr::InterruptType>]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = llvm::Optional<clang::MipsInterruptAttr::InterruptType>]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = llvm::Optional<clang::MipsInterruptAttr::InterruptType>; R = llvm::Optional<clang::MipsInterruptAttr::InterruptType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:4732:41:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::MipsInterruptAttr::InterruptType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = llvm::Optional<clang::OMPDeclareSimdDeclAttr::BranchStateTy>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = llvm::Optional<clang::OMPDeclareSimdDeclAttr::BranchStateTy>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = llvm::Optional<clang::OMPDeclareSimdDeclAttr::BranchStateTy>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::OMPDeclareSimdDeclAttr::BranchStateTy>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::OMPDeclareSimdDeclAttr::BranchStateTy>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::OMPDeclareSimdDeclAttr::BranchStateTy>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::OMPDeclareSimdDeclAttr::BranchStateTy>; R = llvm::Optional<clang::OMPDeclareSimdDeclAttr::BranchStateTy>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:5712:53:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::OMPDeclareSimdDeclAttr::BranchStateTy>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = llvm::Optional<clang::OMPDeclareSimdDeclAttr::BranchStateTy>]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = llvm::Optional<clang::OMPDeclareSimdDeclAttr::BranchStateTy>]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = llvm::Optional<clang::OMPDeclareSimdDeclAttr::BranchStateTy>; R = llvm::Optional<clang::OMPDeclareSimdDeclAttr::BranchStateTy>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:5715:41:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::OMPDeclareSimdDeclAttr::BranchStateTy>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = llvm::Optional<clang::OMPDeclareTargetDeclAttr::MapTypeTy>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = llvm::Optional<clang::OMPDeclareTargetDeclAttr::MapTypeTy>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = llvm::Optional<clang::OMPDeclareTargetDeclAttr::MapTypeTy>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::OMPDeclareTargetDeclAttr::MapTypeTy>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::OMPDeclareTargetDeclAttr::MapTypeTy>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::OMPDeclareTargetDeclAttr::MapTypeTy>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::OMPDeclareTargetDeclAttr::MapTypeTy>; R = llvm::Optional<clang::OMPDeclareTargetDeclAttr::MapTypeTy>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:5866:50:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::OMPDeclareTargetDeclAttr::MapTypeTy>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = llvm::Optional<clang::OMPDeclareTargetDeclAttr::MapTypeTy>]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = llvm::Optional<clang::OMPDeclareTargetDeclAttr::MapTypeTy>]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = llvm::Optional<clang::OMPDeclareTargetDeclAttr::MapTypeTy>; R = llvm::Optional<clang::OMPDeclareTargetDeclAttr::MapTypeTy>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:5868:37:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::OMPDeclareTargetDeclAttr::MapTypeTy>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = llvm::Optional<clang::ObjCMethodFamilyAttr::FamilyKind>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = llvm::Optional<clang::ObjCMethodFamilyAttr::FamilyKind>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = llvm::Optional<clang::ObjCMethodFamilyAttr::FamilyKind>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::ObjCMethodFamilyAttr::FamilyKind>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::ObjCMethodFamilyAttr::FamilyKind>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::ObjCMethodFamilyAttr::FamilyKind>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::ObjCMethodFamilyAttr::FamilyKind>; R = llvm::Optional<clang::ObjCMethodFamilyAttr::FamilyKind>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:6478:51:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::ObjCMethodFamilyAttr::FamilyKind>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = llvm::Optional<clang::ObjCMethodFamilyAttr::FamilyKind>]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = llvm::Optional<clang::ObjCMethodFamilyAttr::FamilyKind>]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = llvm::Optional<clang::ObjCMethodFamilyAttr::FamilyKind>; R = llvm::Optional<clang::ObjCMethodFamilyAttr::FamilyKind>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:6484:38:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::ObjCMethodFamilyAttr::FamilyKind>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = llvm::Optional<clang::ParamTypestateAttr::ConsumedState>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = llvm::Optional<clang::ParamTypestateAttr::ConsumedState>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = llvm::Optional<clang::ParamTypestateAttr::ConsumedState>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::ParamTypestateAttr::ConsumedState>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::ParamTypestateAttr::ConsumedState>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::ParamTypestateAttr::ConsumedState>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::ParamTypestateAttr::ConsumedState>; R = llvm::Optional<clang::ParamTypestateAttr::ConsumedState>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:7260:51:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::ParamTypestateAttr::ConsumedState>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = llvm::Optional<clang::ParamTypestateAttr::ConsumedState>]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = llvm::Optional<clang::ParamTypestateAttr::ConsumedState>]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = llvm::Optional<clang::ParamTypestateAttr::ConsumedState>; R = llvm::Optional<clang::ParamTypestateAttr::ConsumedState>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:7263:41:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::ParamTypestateAttr::ConsumedState>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = llvm::Optional<clang::PcsAttr::PCSType>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = llvm::Optional<clang::PcsAttr::PCSType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = llvm::Optional<clang::PcsAttr::PCSType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::PcsAttr::PCSType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::PcsAttr::PCSType>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::PcsAttr::PCSType>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::PcsAttr::PCSType>; R = llvm::Optional<clang::PcsAttr::PCSType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:7375:36:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::PcsAttr::PCSType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = llvm::Optional<clang::PcsAttr::PCSType>]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = llvm::Optional<clang::PcsAttr::PCSType>]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = llvm::Optional<clang::PcsAttr::PCSType>; R = llvm::Optional<clang::PcsAttr::PCSType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:7377:35:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::PcsAttr::PCSType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = llvm::Optional<clang::RISCVInterruptAttr::InterruptType>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = llvm::Optional<clang::RISCVInterruptAttr::InterruptType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = llvm::Optional<clang::RISCVInterruptAttr::InterruptType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::RISCVInterruptAttr::InterruptType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::RISCVInterruptAttr::InterruptType>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::RISCVInterruptAttr::InterruptType>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::RISCVInterruptAttr::InterruptType>; R = llvm::Optional<clang::RISCVInterruptAttr::InterruptType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:7793:45:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::RISCVInterruptAttr::InterruptType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = llvm::Optional<clang::RISCVInterruptAttr::InterruptType>]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = llvm::Optional<clang::RISCVInterruptAttr::InterruptType>]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = llvm::Optional<clang::RISCVInterruptAttr::InterruptType>; R = llvm::Optional<clang::RISCVInterruptAttr::InterruptType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:7796:41:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::RISCVInterruptAttr::InterruptType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = llvm::Optional<clang::ReturnTypestateAttr::ConsumedState>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = llvm::Optional<clang::ReturnTypestateAttr::ConsumedState>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = llvm::Optional<clang::ReturnTypestateAttr::ConsumedState>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::ReturnTypestateAttr::ConsumedState>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::ReturnTypestateAttr::ConsumedState>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::ReturnTypestateAttr::ConsumedState>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::ReturnTypestateAttr::ConsumedState>; R = llvm::Optional<clang::ReturnTypestateAttr::ConsumedState>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:8183:52:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::ReturnTypestateAttr::ConsumedState>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = llvm::Optional<clang::ReturnTypestateAttr::ConsumedState>]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = llvm::Optional<clang::ReturnTypestateAttr::ConsumedState>]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = llvm::Optional<clang::ReturnTypestateAttr::ConsumedState>; R = llvm::Optional<clang::ReturnTypestateAttr::ConsumedState>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:8186:41:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::ReturnTypestateAttr::ConsumedState>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = llvm::Optional<clang::SetTypestateAttr::ConsumedState>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = llvm::Optional<clang::SetTypestateAttr::ConsumedState>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = llvm::Optional<clang::SetTypestateAttr::ConsumedState>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::SetTypestateAttr::ConsumedState>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::SetTypestateAttr::ConsumedState>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::SetTypestateAttr::ConsumedState>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::SetTypestateAttr::ConsumedState>; R = llvm::Optional<clang::SetTypestateAttr::ConsumedState>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:8474:49:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::SetTypestateAttr::ConsumedState>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = llvm::Optional<clang::SetTypestateAttr::ConsumedState>]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = llvm::Optional<clang::SetTypestateAttr::ConsumedState>]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = llvm::Optional<clang::SetTypestateAttr::ConsumedState>; R = llvm::Optional<clang::SetTypestateAttr::ConsumedState>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:8477:41:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::SetTypestateAttr::ConsumedState>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = llvm::Optional<clang::TestTypestateAttr::ConsumedState>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = llvm::Optional<clang::TestTypestateAttr::ConsumedState>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = llvm::Optional<clang::TestTypestateAttr::ConsumedState>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::TestTypestateAttr::ConsumedState>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::TestTypestateAttr::ConsumedState>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::TestTypestateAttr::ConsumedState>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::TestTypestateAttr::ConsumedState>; R = llvm::Optional<clang::TestTypestateAttr::ConsumedState>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:8986:52:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::TestTypestateAttr::ConsumedState>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = llvm::Optional<clang::TestTypestateAttr::ConsumedState>]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = llvm::Optional<clang::TestTypestateAttr::ConsumedState>]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = llvm::Optional<clang::TestTypestateAttr::ConsumedState>; R = llvm::Optional<clang::TestTypestateAttr::ConsumedState>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:8988:41:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::TestTypestateAttr::ConsumedState>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = llvm::Optional<clang::TypeVisibilityAttr::VisibilityType>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = llvm::Optional<clang::TypeVisibilityAttr::VisibilityType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = llvm::Optional<clang::TypeVisibilityAttr::VisibilityType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::TypeVisibilityAttr::VisibilityType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::TypeVisibilityAttr::VisibilityType>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::TypeVisibilityAttr::VisibilityType>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::TypeVisibilityAttr::VisibilityType>; R = llvm::Optional<clang::TypeVisibilityAttr::VisibilityType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:9343:51:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::TypeVisibilityAttr::VisibilityType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = llvm::Optional<clang::TypeVisibilityAttr::VisibilityType>]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = llvm::Optional<clang::TypeVisibilityAttr::VisibilityType>]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = llvm::Optional<clang::TypeVisibilityAttr::VisibilityType>; R = llvm::Optional<clang::TypeVisibilityAttr::VisibilityType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:9347:42:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::TypeVisibilityAttr::VisibilityType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = llvm::Optional<clang::VisibilityAttr::VisibilityType>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = llvm::Optional<clang::VisibilityAttr::VisibilityType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = llvm::Optional<clang::VisibilityAttr::VisibilityType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::VisibilityAttr::VisibilityType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::VisibilityAttr::VisibilityType>; bool <anonymous> = false]':
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::VisibilityAttr::VisibilityType>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::VisibilityAttr::VisibilityType>; R = llvm::Optional<clang::VisibilityAttr::VisibilityType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:9731:47:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::VisibilityAttr::VisibilityType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::Optional<T>::getPointer() [with T = llvm::Optional<clang::VisibilityAttr::VisibilityType>]':
/llvm/include/llvm/ADT/Optional.h:170:59:   required from 'T& llvm::Optional<T>::operator*() & [with T = llvm::Optional<clang::VisibilityAttr::VisibilityType>]'
/llvm/include/llvm/ADT/StringSwitch.h:183:24:   required from 'R llvm::StringSwitch<T, R>::Default(T) [with T = llvm::Optional<clang::VisibilityAttr::VisibilityType>; R = llvm::Optional<clang::VisibilityAttr::VisibilityType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:9735:42:   required from here
/llvm/include/llvm/ADT/Optional.h:160:50: error: 'struct llvm::AlignedCharArrayUnion<llvm::Optional<clang::VisibilityAttr::VisibilityType>, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(Storage.storage.buffer);
                                  ~~~~~~~~~~~~~~~~^~~~~~
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h: In instantiation of 'void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::initEmpty() [with DerivedT = llvm::DenseMap<char, clang::ComparisonCategoryInfo>; KeyT = char; ValueT = clang::ComparisonCategoryInfo; KeyInfoT = llvm::DenseMapInfo<char>; BucketT = llvm::detail::DenseMapPair<char, clang::ComparisonCategoryInfo>]':
/llvm/include/llvm/ADT/DenseMap.h:791:7:   required from 'void llvm::DenseMap<KeyT, ValueT, KeyInfoT, BucketT>::init(unsigned int) [with KeyT = char; ValueT = clang::ComparisonCategoryInfo; KeyInfoT = llvm::DenseMapInfo<char>; BucketT = llvm::detail::DenseMapPair<char, clang::ComparisonCategoryInfo>]'
/llvm/include/llvm/ADT/DenseMap.h:726:56:   required from 'llvm::DenseMap<KeyT, ValueT, KeyInfoT, BucketT>::DenseMap(unsigned int) [with KeyT = char; ValueT = clang::ComparisonCategoryInfo; KeyInfoT = llvm::DenseMapInfo<char>; BucketT = llvm::detail::DenseMapPair<char, clang::ComparisonCategoryInfo>]'
/llvm/tools/clang/include/clang/AST/ComparisonCategories.h:230:65:   required from here
/llvm/include/llvm/ADT/DenseMap.h:377:7: error: no matching function for call to 'operator new(sizetype, char*)'
       ::new (&B->getFirst()) KeyT(EmptyKey);
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'char*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h:377:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'char*'
       ::new (&B->getFirst()) KeyT(EmptyKey);
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() const [with _Tp = clang::SourceManager::OverriddenFilesInfoTy; _Dp = std::default_delete<clang::SourceManager::OverriddenFilesInfoTy>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = clang::SourceManager::OverriddenFilesInfoTy*]':
/usr/include/c++/7/bits/unique_ptr.h:337:28:   required from 'std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::get() const [with _Tp = clang::SourceManager::OverriddenFilesInfoTy; _Dp = std::default_delete<clang::SourceManager::OverriddenFilesInfoTy>; std::unique_ptr<_Tp, _Dp>::pointer = clang::SourceManager::OverriddenFilesInfoTy*]'
/usr/include/c++/7/bits/unique_ptr.h:351:19:   required from 'std::unique_ptr<_Tp, _Dp>::operator bool() const [with _Tp = clang::SourceManager::OverriddenFilesInfoTy; _Dp = std::default_delete<clang::SourceManager::OverriddenFilesInfoTy>]'
/llvm/tools/clang/include/clang/Basic/SourceManager.h:624:10:   required from here
/usr/include/c++/7/bits/unique_ptr.h:147:53: error: no matching function for call to 'get<0>(const std::tuple<clang::SourceManager::OverriddenFilesInfoTy*, std::default_delete<clang::SourceManager::OverriddenFilesInfoTy> >&)'
       pointer    _M_ptr() const { return std::get<0>(_M_t); }
                                          ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h: In instantiation of 'void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::initEmpty() [with DerivedT = llvm::DenseMap<const clang::FileEntry*, const clang::FileEntry*>; KeyT = const clang::FileEntry*; ValueT = const clang::FileEntry*; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseMapPair<const clang::FileEntry*, const clang::FileEntry*>]':
/llvm/include/llvm/ADT/DenseMap.h:791:7:   required from 'void llvm::DenseMap<KeyT, ValueT, KeyInfoT, BucketT>::init(unsigned int) [with KeyT = const clang::FileEntry*; ValueT = const clang::FileEntry*; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseMapPair<const clang::FileEntry*, const clang::FileEntry*>]'
/llvm/include/llvm/ADT/DenseMap.h:726:56:   required from 'llvm::DenseMap<KeyT, ValueT, KeyInfoT, BucketT>::DenseMap(unsigned int) [with KeyT = const clang::FileEntry*; ValueT = const clang::FileEntry*; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseMapPair<const clang::FileEntry*, const clang::FileEntry*>]'
/llvm/tools/clang/include/clang/Basic/SourceManager.h:610:10:   required from here
/llvm/include/llvm/ADT/DenseMap.h:377:7: error: no matching function for call to 'operator new(sizetype, const clang::FileEntry**)'
       ::new (&B->getFirst()) KeyT(EmptyKey);
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'const clang::FileEntry**' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h:377:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'const clang::FileEntry**'
       ::new (&B->getFirst()) KeyT(EmptyKey);
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of '_Dp& std::__uniq_ptr_impl<_Tp, _Dp>::_M_deleter() [with _Tp = clang::SourceManager::OverriddenFilesInfoTy; _Dp = std::default_delete<clang::SourceManager::OverriddenFilesInfoTy>]':
/usr/include/c++/7/bits/unique_ptr.h:342:32:   required from 'std::unique_ptr<_Tp, _Dp>::deleter_type& std::unique_ptr<_Tp, _Dp>::get_deleter() [with _Tp = clang::SourceManager::OverriddenFilesInfoTy; _Dp = std::default_delete<clang::SourceManager::OverriddenFilesInfoTy>; std::unique_ptr<_Tp, _Dp>::deleter_type = std::default_delete<clang::SourceManager::OverriddenFilesInfoTy>]'
/usr/include/c++/7/bits/unique_ptr.h:376:15:   required from 'void std::unique_ptr<_Tp, _Dp>::reset(std::unique_ptr<_Tp, _Dp>::pointer) [with _Tp = clang::SourceManager::OverriddenFilesInfoTy; _Dp = std::default_delete<clang::SourceManager::OverriddenFilesInfoTy>; std::unique_ptr<_Tp, _Dp>::pointer = clang::SourceManager::OverriddenFilesInfoTy*]'
/llvm/tools/clang/include/clang/Basic/SourceManager.h:625:58:   required from here
/usr/include/c++/7/bits/unique_ptr.h:148:51: error: no matching function for call to 'get<1>(std::tuple<clang::SourceManager::OverriddenFilesInfoTy*, std::default_delete<clang::SourceManager::OverriddenFilesInfoTy> >&)'
       _Dp&       _M_deleter() { return std::get<1>(_M_t); }
                                        ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() const [with _Tp = clang::SourceManager; _Dp = std::default_delete<clang::SourceManager>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = clang::SourceManager*]':
/usr/include/c++/7/bits/unique_ptr.h:337:28:   required from 'std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::get() const [with _Tp = clang::SourceManager; _Dp = std::default_delete<clang::SourceManager>; std::unique_ptr<_Tp, _Dp>::pointer = clang::SourceManager*]'
/usr/include/c++/7/bits/unique_ptr.h:351:19:   required from 'std::unique_ptr<_Tp, _Dp>::operator bool() const [with _Tp = clang::SourceManager; _Dp = std::default_delete<clang::SourceManager>]'
/llvm/tools/clang/include/clang/Basic/SourceManager.h:1839:5:   required from here
/usr/include/c++/7/bits/unique_ptr.h:147:53: error: no matching function for call to 'get<0>(const std::tuple<clang::SourceManager*, std::default_delete<clang::SourceManager> >&)'
       pointer    _M_ptr() const { return std::get<0>(_M_t); }
                                          ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of '_Dp& std::__uniq_ptr_impl<_Tp, _Dp>::_M_deleter() [with _Tp = llvm::SpecialCaseList::Matcher; _Dp = std::default_delete<llvm::SpecialCaseList::Matcher>]':
/usr/include/c++/7/bits/unique_ptr.h:342:32:   required from 'std::unique_ptr<_Tp, _Dp>::deleter_type& std::unique_ptr<_Tp, _Dp>::get_deleter() [with _Tp = llvm::SpecialCaseList::Matcher; _Dp = std::default_delete<llvm::SpecialCaseList::Matcher>; std::unique_ptr<_Tp, _Dp>::deleter_type = std::default_delete<llvm::SpecialCaseList::Matcher>]'
/usr/include/c++/7/bits/unique_ptr.h:239:55:   required from 'std::unique_ptr<_Tp, _Dp>::unique_ptr(std::unique_ptr<_Tp, _Dp>&&) [with _Tp = llvm::SpecialCaseList::Matcher; _Dp = std::default_delete<llvm::SpecialCaseList::Matcher>]'
/llvm/include/llvm/Support/SpecialCaseList.h:133:70:   required from here
/usr/include/c++/7/bits/unique_ptr.h:148:51: error: no matching function for call to 'get<1>(std::tuple<llvm::SpecialCaseList::Matcher*, std::default_delete<llvm::SpecialCaseList::Matcher> >&)'
       _Dp&       _M_deleter() { return std::get<1>(_M_t); }
                                        ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/Support/Host.h:16:0,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringMap.h: In instantiation of 'static llvm::StringMapEntry<ValueTy>* llvm::StringMapEntry<ValueTy>::Create(llvm::StringRef, AllocatorTy&, InitTy&& ...) [with AllocatorTy = llvm::MallocAllocator; InitTy = {}; ValueTy = clang::OpenCLOptions::Info]':
/llvm/include/llvm/ADT/StringMap.h:403:32:   required from 'std::pair<llvm::StringMapIterator<ValueTy>, bool> llvm::StringMap<ValueTy, AllocatorTy>::try_emplace(llvm::StringRef, ArgsTy&& ...) [with ArgsTy = {}; ValueTy = clang::OpenCLOptions::Info; AllocatorTy = llvm::MallocAllocator]'
/llvm/include/llvm/ADT/StringMap.h:355:58:   required from 'ValueTy& llvm::StringMap<ValueTy, AllocatorTy>::operator[](llvm::StringRef) [with ValueTy = clang::OpenCLOptions::Info; AllocatorTy = llvm::MallocAllocator]'
/llvm/tools/clang/include/clang/Basic/OpenCLOptions.h:66:15:   required from here
/llvm/include/llvm/ADT/StringMap.h:169:5: error: no matching function for call to 'operator new(sizetype, llvm::StringMapEntry<clang::OpenCLOptions::Info>*&)'
     new (NewItem) StringMapEntry(KeyLength, std::forward<InitTy>(InitVals)...);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::StringMapEntry<clang::OpenCLOptions::Info>*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/Support/Host.h:16:0,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringMap.h:169:5: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::StringMapEntry<clang::OpenCLOptions::Info>*'
     new (NewItem) StringMapEntry(KeyLength, std::forward<InitTy>(InitVals)...);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/new_allocator.h: In instantiation of 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const void*, llvm::Pass*>; _Args = {const std::pair<const void*, llvm::Pass*>&}; _Tp = std::pair<const void*, llvm::Pass*>]':
/usr/include/c++/7/bits/alloc_traits.h:475:4:   required from 'static void std::allocator_traits<std::allocator<_Tp> >::construct(std::allocator_traits<std::allocator<_Tp> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const void*, llvm::Pass*>; _Args = {const std::pair<const void*, llvm::Pass*>&}; _Tp = std::pair<const void*, llvm::Pass*>; std::allocator_traits<std::allocator<_Tp> >::allocator_type = std::allocator<std::pair<const void*, llvm::Pass*> >]'
/usr/include/c++/7/bits/stl_vector.h:943:30:   required from 'void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::pair<const void*, llvm::Pass*>; _Alloc = std::allocator<std::pair<const void*, llvm::Pass*> >; std::vector<_Tp, _Alloc>::value_type = std::pair<const void*, llvm::Pass*>]'
/llvm/include/llvm/PassAnalysisSupport.h:173:32:   required from here
/usr/include/c++/7/ext/new_allocator.h:136:4: error: no matching function for call to 'operator new(sizetype, void*)'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/new_allocator.h:136:4: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/ext/new_allocator.h: In instantiation of 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = const llvm::PassInfo*; _Args = {const llvm::PassInfo* const&}; _Tp = const llvm::PassInfo*]':
/usr/include/c++/7/bits/alloc_traits.h:475:4:   required from 'static void std::allocator_traits<std::allocator<_Tp> >::construct(std::allocator_traits<std::allocator<_Tp> >::allocator_type&, _Up*, _Args&& ...) [with _Up = const llvm::PassInfo*; _Args = {const llvm::PassInfo* const&}; _Tp = const llvm::PassInfo*; std::allocator_traits<std::allocator<_Tp> >::allocator_type = std::allocator<const llvm::PassInfo*>]'
/usr/include/c++/7/bits/stl_vector.h:943:30:   required from 'void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = const llvm::PassInfo*; _Alloc = std::allocator<const llvm::PassInfo*>; std::vector<_Tp, _Alloc>::value_type = const llvm::PassInfo*]'
/llvm/include/llvm/PassInfo.h:108:28:   required from here
/usr/include/c++/7/ext/new_allocator.h:136:4: error: no matching function for call to 'operator new(sizetype, void*)'
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/new_allocator.h:136:4: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of '_Dp& std::__uniq_ptr_impl<_Tp, _Dp>::_M_deleter() [with _Tp = llvm::DataLayout; _Dp = std::default_delete<llvm::DataLayout>]':
/usr/include/c++/7/bits/unique_ptr.h:342:32:   required from 'std::unique_ptr<_Tp, _Dp>::deleter_type& std::unique_ptr<_Tp, _Dp>::get_deleter() [with _Tp = llvm::DataLayout; _Dp = std::default_delete<llvm::DataLayout>; std::unique_ptr<_Tp, _Dp>::deleter_type = std::default_delete<llvm::DataLayout>]'
/usr/include/c++/7/bits/unique_ptr.h:376:15:   required from 'void std::unique_ptr<_Tp, _Dp>::reset(std::unique_ptr<_Tp, _Dp>::pointer) [with _Tp = llvm::DataLayout; _Dp = std::default_delete<llvm::DataLayout>; std::unique_ptr<_Tp, _Dp>::pointer = llvm::DataLayout*]'
/llvm/tools/clang/include/clang/Basic/TargetInfo.h:135:46:   required from here
/usr/include/c++/7/bits/unique_ptr.h:148:51: error: no matching function for call to 'get<1>(std::tuple<llvm::DataLayout*, std::default_delete<llvm::DataLayout> >&)'
       _Dp&       _M_deleter() { return std::get<1>(_M_t); }
                                        ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() const [with _Tp = llvm::DataLayout; _Dp = std::default_delete<llvm::DataLayout>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = llvm::DataLayout*]':
/usr/include/c++/7/bits/unique_ptr.h:337:28:   required from 'std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::get() const [with _Tp = llvm::DataLayout; _Dp = std::default_delete<llvm::DataLayout>; std::unique_ptr<_Tp, _Dp>::pointer = llvm::DataLayout*]'
/usr/include/c++/7/bits/unique_ptr.h:351:19:   required from 'std::unique_ptr<_Tp, _Dp>::operator bool() const [with _Tp = llvm::DataLayout; _Dp = std::default_delete<llvm::DataLayout>]'
/llvm/tools/clang/include/clang/Basic/TargetInfo.h:957:5:   required from here
/usr/include/c++/7/bits/unique_ptr.h:147:53: error: no matching function for call to 'get<0>(const std::tuple<llvm::DataLayout*, std::default_delete<llvm::DataLayout> >&)'
       pointer    _M_ptr() const { return std::get<0>(_M_t); }
                                          ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/Support/Host.h:16:0,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringMap.h: In instantiation of 'static llvm::StringMapEntry<ValueTy>* llvm::StringMapEntry<ValueTy>::Create(llvm::StringRef, AllocatorTy&, InitTy&& ...) [with AllocatorTy = llvm::MallocAllocator; InitTy = {}; ValueTy = bool]':
/llvm/include/llvm/ADT/StringMap.h:403:32:   required from 'std::pair<llvm::StringMapIterator<ValueTy>, bool> llvm::StringMap<ValueTy, AllocatorTy>::try_emplace(llvm::StringRef, ArgsTy&& ...) [with ArgsTy = {}; ValueTy = bool; AllocatorTy = llvm::MallocAllocator]'
/llvm/include/llvm/ADT/StringMap.h:355:58:   required from 'ValueTy& llvm::StringMap<ValueTy, AllocatorTy>::operator[](llvm::StringRef) [with ValueTy = bool; AllocatorTy = llvm::MallocAllocator]'
/llvm/tools/clang/include/clang/Basic/TargetInfo.h:1059:18:   required from here
/llvm/include/llvm/ADT/StringMap.h:169:5: error: no matching function for call to 'operator new(sizetype, llvm::StringMapEntry<bool>*&)'
     new (NewItem) StringMapEntry(KeyLength, std::forward<InitTy>(InitVals)...);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::StringMapEntry<bool>*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/include/llvm/Support/Host.h:16:0,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/StringMap.h:169:5: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::StringMapEntry<bool>*'
     new (NewItem) StringMapEntry(KeyLength, std::forward<InitTy>(InitVals)...);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() const [with _Tp = clang::SanitizerBlacklist; _Dp = std::default_delete<clang::SanitizerBlacklist>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = clang::SanitizerBlacklist*]':
/usr/include/c++/7/bits/unique_ptr.h:337:28:   required from 'std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::get() const [with _Tp = clang::SanitizerBlacklist; _Dp = std::default_delete<clang::SanitizerBlacklist>; std::unique_ptr<_Tp, _Dp>::pointer = clang::SanitizerBlacklist*]'
/usr/include/c++/7/bits/unique_ptr.h:323:13:   required from 'typename std::add_lvalue_reference<_Tp>::type std::unique_ptr<_Tp, _Dp>::operator*() const [with _Tp = clang::SanitizerBlacklist; _Dp = std::default_delete<clang::SanitizerBlacklist>; typename std::add_lvalue_reference<_Tp>::type = clang::SanitizerBlacklist&]'
/llvm/tools/clang/include/clang/AST/ASTContext.h:709:13:   required from here
/usr/include/c++/7/bits/unique_ptr.h:147:53: error: no matching function for call to 'get<0>(const std::tuple<clang::SanitizerBlacklist*, std::default_delete<clang::SanitizerBlacklist> >&)'
       pointer    _M_ptr() const { return std::get<0>(_M_t); }
                                          ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() const [with _Tp = clang::XRayFunctionFilter; _Dp = std::default_delete<clang::XRayFunctionFilter>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = clang::XRayFunctionFilter*]':
/usr/include/c++/7/bits/unique_ptr.h:337:28:   required from 'std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::get() const [with _Tp = clang::XRayFunctionFilter; _Dp = std::default_delete<clang::XRayFunctionFilter>; std::unique_ptr<_Tp, _Dp>::pointer = clang::XRayFunctionFilter*]'
/usr/include/c++/7/bits/unique_ptr.h:323:13:   required from 'typename std::add_lvalue_reference<_Tp>::type std::unique_ptr<_Tp, _Dp>::operator*() const [with _Tp = clang::XRayFunctionFilter; _Dp = std::default_delete<clang::XRayFunctionFilter>; typename std::add_lvalue_reference<_Tp>::type = clang::XRayFunctionFilter&]'
/llvm/tools/clang/include/clang/AST/ASTContext.h:713:13:   required from here
/usr/include/c++/7/bits/unique_ptr.h:147:53: error: no matching function for call to 'get<0>(const std::tuple<clang::XRayFunctionFilter*, std::default_delete<clang::XRayFunctionFilter> >&)'
       pointer    _M_ptr() const { return std::get<0>(_M_t); }
                                          ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h: In instantiation of 'BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = clang::Decl* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<clang::Decl*, clang::Decl*>; KeyT = clang::Decl*; ValueT = clang::Decl*; KeyInfoT = llvm::DenseMapInfo<clang::Decl*>; BucketT = llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*>]':
/llvm/include/llvm/ADT/DenseMap.h:322:29:   required from 'llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<clang::Decl*, clang::Decl*>; KeyT = clang::Decl*; ValueT = clang::Decl*; KeyInfoT = llvm::DenseMapInfo<clang::Decl*>; BucketT = llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*>]'
/llvm/include/llvm/ADT/DenseMap.h:326:28:   required from 'ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<clang::Decl*, clang::Decl*>; KeyT = clang::Decl*; ValueT = clang::Decl*; KeyInfoT = llvm::DenseMapInfo<clang::Decl*>; BucketT = llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*>]'
/llvm/tools/clang/include/clang/AST/ASTContext.h:975:18:   required from here
/llvm/include/llvm/ADT/DenseMap.h:546:5: error: no matching function for call to 'operator new(sizetype, clang::Decl**)'
     ::new (&TheBucket->getSecond()) ValueT(std::forward<ValueArgs>(Values)...);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'clang::Decl**' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h:546:5: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'clang::Decl**'
     ::new (&TheBucket->getSecond()) ValueT(std::forward<ValueArgs>(Values)...);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = clang::TemplateArgument; _Args = {const clang::TemplateArgument&}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const clang::TemplateArgument*; _ForwardIterator = clang::TemplateArgument*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const clang::TemplateArgument*; _ForwardIterator = clang::TemplateArgument*]'
/llvm/tools/clang/include/clang/AST/ExprCXX.h:3888:73:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'T* llvm::optional_detail::OptionalStorage<T, <anonymous> >::getPointer() [with T = clang::ast_matchers::MatchFinder::MatchFinderOptions::Profiling; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:97:19:   required from 'void llvm::optional_detail::OptionalStorage<T, <anonymous> >::reset() [with T = clang::ast_matchers::MatchFinder::MatchFinderOptions::Profiling; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:93:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >::~OptionalStorage() [with T = clang::ast_matchers::MatchFinder::MatchFinderOptions::Profiling; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:120:24:   required from 'constexpr llvm::Optional<T>::Optional() [with T = clang::ast_matchers::MatchFinder::MatchFinderOptions::Profiling]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:122:10:   required from here
/llvm/include/llvm/ADT/Optional.h:104:42: error: 'struct llvm::AlignedCharArrayUnion<clang::ast_matchers::MatchFinder::MatchFinderOptions::Profiling, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<T *>(storage.buffer);
                                  ~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() const [with _Tp = clang::DiagnosticConsumer; _Dp = std::default_delete<clang::DiagnosticConsumer>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = clang::DiagnosticConsumer*]':
/usr/include/c++/7/bits/unique_ptr.h:337:28:   required from 'std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::get() const [with _Tp = clang::DiagnosticConsumer; _Dp = std::default_delete<clang::DiagnosticConsumer>; std::unique_ptr<_Tp, _Dp>::pointer = clang::DiagnosticConsumer*]'
/usr/include/c++/7/bits/unique_ptr.h:351:19:   required from 'std::unique_ptr<_Tp, _Dp>::operator bool() const [with _Tp = clang::DiagnosticConsumer; _Dp = std::default_delete<clang::DiagnosticConsumer>]'
/usr/include/c++/7/bits/unique_ptr.h:707:14:   required from 'bool std::operator!=(const std::unique_ptr<_Tp, _Dp>&, nullptr_t) [with _Tp = clang::DiagnosticConsumer; _Dp = std::default_delete<clang::DiagnosticConsumer>; nullptr_t = std::nullptr_t]'
/llvm/tools/clang/include/clang/Basic/Diagnostic.h:513:45:   required from here
/usr/include/c++/7/bits/unique_ptr.h:147:53: error: no matching function for call to 'get<0>(const std::tuple<clang::DiagnosticConsumer*, std::default_delete<clang::DiagnosticConsumer> >&)'
       pointer    _M_ptr() const { return std::get<0>(_M_t); }
                                          ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple: In instantiation of 'static constexpr bool std::__tuple_compare<_Tp, _Up, __i, __size>::__less(const _Tp&, const _Up&) [with _Tp = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; _Up = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; long unsigned int __i = 2; long unsigned int __size = 4]':
/usr/include/c++/7/tuple:1381:61:   recursively required from 'static constexpr bool std::__tuple_compare<_Tp, _Up, __i, __size>::__less(const _Tp&, const _Up&) [with _Tp = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; _Up = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; long unsigned int __i = 1; long unsigned int __size = 4]'
/usr/include/c++/7/tuple:1381:61:   required from 'static constexpr bool std::__tuple_compare<_Tp, _Up, __i, __size>::__less(const _Tp&, const _Up&) [with _Tp = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; _Up = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; long unsigned int __i = 0; long unsigned int __size = 4]'
/usr/include/c++/7/tuple:1418:31:   required from 'constexpr bool std::operator<(const std::tuple<_Tps ...>&, const std::tuple<_Elements ...>&) [with _TElements = {const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&}; _UElements = {const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&}]'
/llvm/include/llvm/Support/VersionTuple.h:111:58:   required from here
/usr/include/c++/7/tuple:1379:27: error: no matching function for call to 'get<2>(const std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>&)'
  return bool(std::get<__i>(__t) < std::get<__i>(__u))
              ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1379:48: error: no matching function for call to 'get<2>(const std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>&)'
  return bool(std::get<__i>(__t) < std::get<__i>(__u))
                                   ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1380:27: error: no matching function for call to 'get<2>(const std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>&)'
    || (!bool(std::get<__i>(__u) < std::get<__i>(__t))
              ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1380:48: error: no matching function for call to 'get<2>(const std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>&)'
    || (!bool(std::get<__i>(__u) < std::get<__i>(__t))
                                   ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1382:7: error: body of constexpr function 'static constexpr bool std::__tuple_compare<_Tp, _Up, __i, __size>::__less(const _Tp&, const _Up&) [with _Tp = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; _Up = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; long unsigned int __i = 2; long unsigned int __size = 4]' not a return-statement
       }
       ^
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/new_allocator.h: In instantiation of 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = llvm::StringRef; _Args = {llvm::StringRef}; _Tp = llvm::StringRef]':
/usr/include/c++/7/bits/alloc_traits.h:475:4:   required from 'static void std::allocator_traits<std::allocator<_Tp> >::construct(std::allocator_traits<std::allocator<_Tp> >::allocator_type&, _Up*, _Args&& ...) [with _Up = llvm::StringRef; _Args = {llvm::StringRef}; _Tp = llvm::StringRef; std::allocator_traits<std::allocator<_Tp> >::allocator_type = std::allocator<llvm::StringRef>]'
/usr/include/c++/7/bits/vector.tcc:100:30:   required from 'void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {llvm::StringRef}; _Tp = llvm::StringRef; _Alloc = std::allocator<llvm::StringRef>]'
/usr/include/c++/7/bits/stl_vector.h:954:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = llvm::StringRef; _Alloc = std::allocator<llvm::StringRef>; std::vector<_Tp, _Alloc>::value_type = llvm::StringRef]'
/llvm/include/llvm/ADT/StringExtras.h:47:32:   required from here
/usr/include/c++/7/ext/new_allocator.h:136:4: error: no matching function for call to 'operator new(sizetype, void*)'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/new_allocator.h:136:4: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/string:53:0,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/basic_string.tcc: In instantiation of 'void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]':
/usr/include/c++/7/bits/basic_string.h:236:23:   required from 'void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]'
/usr/include/c++/7/bits/basic_string.h:255:20:   required from 'void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]'
/usr/include/c++/7/bits/basic_string.h:607:16:   required from 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterator, _InputIterator, const _Alloc&) [with _InputIterator = char*; <template-parameter-2-2> = void; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]'
/llvm/include/llvm/ADT/StringExtras.h:136:46:   required from here
/usr/include/c++/7/bits/basic_string.tcc:219:23: error: '_M_create' was not declared in this scope
      _M_data(_M_create(__dnew, size_type(0)));
              ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/basic_string.tcc:219:23: note: suggested alternative: '_M_data'
      _M_data(_M_create(__dnew, size_type(0)));
              ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
              _M_data
/usr/include/c++/7/bits/basic_string.tcc:220:17: error: '_M_capacity' was not declared in this scope
      _M_capacity(__dnew);
      ~~~~~~~~~~~^~~~~~~~
/usr/include/c++/7/bits/basic_string.tcc:232:15: error: '_M_set_length' was not declared in this scope
  _M_set_length(__dnew);
  ~~~~~~~~~~~~~^~~~~~~~
/usr/include/c++/7/bits/basic_string.tcc:232:15: note: suggested alternative: '__socklen_t'
  _M_set_length(__dnew);
  ~~~~~~~~~~~~~^~~~~~~~
  __socklen_t
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/new_allocator.h: In instantiation of 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::unique_ptr<llvm::ErrorInfoBase>; _Args = {std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >}; _Tp = std::unique_ptr<llvm::ErrorInfoBase>]':
/usr/include/c++/7/bits/alloc_traits.h:475:4:   required from 'static void std::allocator_traits<std::allocator<_Tp> >::construct(std::allocator_traits<std::allocator<_Tp> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::unique_ptr<llvm::ErrorInfoBase>; _Args = {std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >}; _Tp = std::unique_ptr<llvm::ErrorInfoBase>; std::allocator_traits<std::allocator<_Tp> >::allocator_type = std::allocator<std::unique_ptr<llvm::ErrorInfoBase> >]'
/usr/include/c++/7/bits/vector.tcc:100:30:   required from 'void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >}; _Tp = std::unique_ptr<llvm::ErrorInfoBase>; _Alloc = std::allocator<std::unique_ptr<llvm::ErrorInfoBase> >]'
/usr/include/c++/7/bits/stl_vector.h:954:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::unique_ptr<llvm::ErrorInfoBase>; _Alloc = std::allocator<std::unique_ptr<llvm::ErrorInfoBase> >; std::vector<_Tp, _Alloc>::value_type = std::unique_ptr<llvm::ErrorInfoBase>]'
/llvm/include/llvm/Support/Error.h:387:43:   required from here
/usr/include/c++/7/ext/new_allocator.h:136:4: error: no matching function for call to 'operator new(sizetype, void*)'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/new_allocator.h:136:4: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() const [with _Tp = llvm::ErrorList; _Dp = std::default_delete<llvm::ErrorList>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = llvm::ErrorList*]':
/usr/include/c++/7/bits/unique_ptr.h:337:28:   required from 'std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::get() const [with _Tp = llvm::ErrorList; _Dp = std::default_delete<llvm::ErrorList>; std::unique_ptr<_Tp, _Dp>::pointer = llvm::ErrorList*]'
/usr/include/c++/7/bits/unique_ptr.h:359:19:   required from 'std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::release() [with _Tp = llvm::ErrorList; _Dp = std::default_delete<llvm::ErrorList>; std::unique_ptr<_Tp, _Dp>::pointer = llvm::ErrorList*]'
/usr/include/c++/7/bits/unique_ptr.h:253:60:   required from 'std::unique_ptr<_Tp, _Dp>::unique_ptr(std::unique_ptr<_Up, _Ep>&&) [with _Up = llvm::ErrorList; _Ep = std::default_delete<llvm::ErrorList>; <template-parameter-2-3> = void; _Tp = llvm::ErrorInfoBase; _Dp = std::default_delete<llvm::ErrorInfoBase>]'
/llvm/include/llvm/Support/Error.h:414:59:   required from here
/usr/include/c++/7/bits/unique_ptr.h:147:53: error: no matching function for call to 'get<0>(const std::tuple<llvm::ErrorList*, std::default_delete<llvm::ErrorList> >&)'
       pointer    _M_ptr() const { return std::get<0>(_M_t); }
                                          ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() const [with _Tp = llvm::FileError; _Dp = std::default_delete<llvm::FileError>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = llvm::FileError*]':
/usr/include/c++/7/bits/unique_ptr.h:337:28:   required from 'std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::get() const [with _Tp = llvm::FileError; _Dp = std::default_delete<llvm::FileError>; std::unique_ptr<_Tp, _Dp>::pointer = llvm::FileError*]'
/usr/include/c++/7/bits/unique_ptr.h:359:19:   required from 'std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::release() [with _Tp = llvm::FileError; _Dp = std::default_delete<llvm::FileError>; std::unique_ptr<_Tp, _Dp>::pointer = llvm::FileError*]'
/usr/include/c++/7/bits/unique_ptr.h:253:60:   required from 'std::unique_ptr<_Tp, _Dp>::unique_ptr(std::unique_ptr<_Up, _Ep>&&) [with _Up = llvm::FileError; _Ep = std::default_delete<llvm::FileError>; <template-parameter-2-3> = void; _Tp = llvm::ErrorInfoBase; _Dp = std::default_delete<llvm::ErrorInfoBase>]'
/llvm/include/llvm/Support/Error.h:1205:79:   required from here
/usr/include/c++/7/bits/unique_ptr.h:147:53: error: no matching function for call to 'get<0>(const std::tuple<llvm::FileError*, std::default_delete<llvm::FileError> >&)'
       pointer    _M_ptr() const { return std::get<0>(_M_t); }
                                          ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/new_allocator.h: In instantiation of 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = llvm::SourceMgr::SrcBuffer; _Args = {llvm::SourceMgr::SrcBuffer}; _Tp = llvm::SourceMgr::SrcBuffer]':
/usr/include/c++/7/bits/alloc_traits.h:475:4:   required from 'static void std::allocator_traits<std::allocator<_Tp> >::construct(std::allocator_traits<std::allocator<_Tp> >::allocator_type&, _Up*, _Args&& ...) [with _Up = llvm::SourceMgr::SrcBuffer; _Args = {llvm::SourceMgr::SrcBuffer}; _Tp = llvm::SourceMgr::SrcBuffer; std::allocator_traits<std::allocator<_Tp> >::allocator_type = std::allocator<llvm::SourceMgr::SrcBuffer>]'
/usr/include/c++/7/bits/vector.tcc:100:30:   required from 'void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {llvm::SourceMgr::SrcBuffer}; _Tp = llvm::SourceMgr::SrcBuffer; _Alloc = std::allocator<llvm::SourceMgr::SrcBuffer>]'
/usr/include/c++/7/bits/stl_vector.h:954:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = llvm::SourceMgr::SrcBuffer; _Alloc = std::allocator<llvm::SourceMgr::SrcBuffer>; std::vector<_Tp, _Alloc>::value_type = llvm::SourceMgr::SrcBuffer]'
/llvm/include/llvm/Support/SourceMgr.h:156:36:   required from here
/usr/include/c++/7/ext/new_allocator.h:136:4: error: no matching function for call to 'operator new(sizetype, void*)'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/new_allocator.h:136:4: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/ext/new_allocator.h: In instantiation of 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>; _Args = {std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry, std::default_delete<llvm::vfs::RedirectingFileSystem::Entry> >}; _Tp = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>]':
/usr/include/c++/7/bits/alloc_traits.h:475:4:   required from 'static void std::allocator_traits<std::allocator<_Tp> >::construct(std::allocator_traits<std::allocator<_Tp> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>; _Args = {std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry, std::default_delete<llvm::vfs::RedirectingFileSystem::Entry> >}; _Tp = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>; std::allocator_traits<std::allocator<_Tp> >::allocator_type = std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> >]'
/usr/include/c++/7/bits/vector.tcc:100:30:   required from 'void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry, std::default_delete<llvm::vfs::RedirectingFileSystem::Entry> >}; _Tp = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>; _Alloc = std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> >]'
/usr/include/c++/7/bits/stl_vector.h:954:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>; _Alloc = std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> >; std::vector<_Tp, _Alloc>::value_type = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>]'
/llvm/include/llvm/Support/VirtualFileSystem.h:589:44:   required from here
/usr/include/c++/7/ext/new_allocator.h:136:4: error: no matching function for call to 'operator new(sizetype, void*)'
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/new_allocator.h:136:4: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() const [with _Tp = llvm::vfs::File; _Dp = std::default_delete<llvm::vfs::File>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = llvm::vfs::File*]':
/usr/include/c++/7/bits/unique_ptr.h:337:28:   required from 'std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::get() const [with _Tp = llvm::vfs::File; _Dp = std::default_delete<llvm::vfs::File>; std::unique_ptr<_Tp, _Dp>::pointer = llvm::vfs::File*]'
/usr/include/c++/7/bits/unique_ptr.h:351:19:   required from 'std::unique_ptr<_Tp, _Dp>::operator bool() const [with _Tp = llvm::vfs::File; _Dp = std::default_delete<llvm::vfs::File>]'
/usr/include/c++/7/bits/unique_ptr.h:707:14:   required from 'bool std::operator!=(const std::unique_ptr<_Tp, _Dp>&, nullptr_t) [with _Tp = llvm::vfs::File; _Dp = std::default_delete<llvm::vfs::File>; nullptr_t = std::nullptr_t]'
/llvm/tools/clang/include/clang/Basic/FileManager.h:108:48:   required from here
/usr/include/c++/7/bits/unique_ptr.h:147:53: error: no matching function for call to 'get<0>(const std::tuple<llvm::vfs::File*, std::default_delete<llvm::vfs::File> >&)'
       pointer    _M_ptr() const { return std::get<0>(_M_t); }
                                          ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/new_allocator.h: In instantiation of 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = clang::Module*; _Args = {clang::Module*}; _Tp = clang::Module*]':
/usr/include/c++/7/bits/alloc_traits.h:475:4:   required from 'static void std::allocator_traits<std::allocator<_Tp> >::construct(std::allocator_traits<std::allocator<_Tp> >::allocator_type&, _Up*, _Args&& ...) [with _Up = clang::Module*; _Args = {clang::Module*}; _Tp = clang::Module*; std::allocator_traits<std::allocator<_Tp> >::allocator_type = std::allocator<clang::Module*>]'
/usr/include/c++/7/bits/vector.tcc:100:30:   required from 'void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {clang::Module*}; _Tp = clang::Module*; _Alloc = std::allocator<clang::Module*>]'
/usr/include/c++/7/bits/stl_vector.h:954:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = clang::Module*; _Alloc = std::allocator<clang::Module*>; std::vector<_Tp, _Alloc>::value_type = clang::Module*]'
/llvm/tools/clang/include/clang/Basic/Module.h:433:38:   required from here
/usr/include/c++/7/ext/new_allocator.h:136:4: error: no matching function for call to 'operator new(sizetype, void*)'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/new_allocator.h:136:4: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h: In instantiation of 'BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const clang::FileEntry* const&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >; KeyT = const clang::FileEntry*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseSetPair<const clang::FileEntry*>]':
/llvm/include/llvm/ADT/DenseMap.h:263:33:   required from 'std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >; KeyT = const clang::FileEntry*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseSetPair<const clang::FileEntry*>]'
/llvm/include/llvm/ADT/DenseSet.h:189:39:   required from 'std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = const clang::FileEntry*; MapTy = llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >; ValueInfoT = llvm::DenseMapInfo<const clang::FileEntry*>]'
/llvm/include/llvm/ADT/SetVector.h:142:34:   required from 'bool llvm::SetVector<T, Vector, Set>::insert(const value_type&) [with T = const clang::FileEntry*; Vector = llvm::SmallVector<const clang::FileEntry*, 2>; Set = llvm::SmallDenseSet<const clang::FileEntry*, 2, llvm::DenseMapInfo<const clang::FileEntry*> >; llvm::SetVector<T, Vector, Set>::value_type = const clang::FileEntry*]'
/llvm/tools/clang/include/clang/Basic/Module.h:497:27:   required from here
/llvm/include/llvm/ADT/DenseMap.h:546:5: error: no matching function for call to 'operator new(sizetype, llvm::detail::DenseSetEmpty*)'
     ::new (&TheBucket->getSecond()) ValueT(std::forward<ValueArgs>(Values)...);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::detail::DenseSetEmpty*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h:546:5: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::detail::DenseSetEmpty*'
     ::new (&TheBucket->getSecond()) ValueT(std::forward<ValueArgs>(Values)...);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/new_allocator.h: In instantiation of 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}; _Tp = std::__cxx11::basic_string<char>]':
/usr/include/c++/7/bits/alloc_traits.h:475:4:   required from 'static void std::allocator_traits<std::allocator<_Tp> >::construct(std::allocator_traits<std::allocator<_Tp> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::__cxx11::basic_string<char>; _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}; _Tp = std::__cxx11::basic_string<char>; std::allocator_traits<std::allocator<_Tp> >::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]'
/usr/include/c++/7/bits/vector.tcc:100:30:   required from 'void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]'
/usr/include/c++/7/bits/stl_vector.h:954:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::basic_string<char>]'
/llvm/tools/clang/include/clang/Basic/Module.h:502:38:   required from here
/usr/include/c++/7/ext/new_allocator.h:136:4: error: no matching function for call to 'operator new(sizetype, void*)'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/new_allocator.h:136:4: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() const [with _Tp = clang::AtomicScopeOpenCLModel; _Dp = std::default_delete<clang::AtomicScopeOpenCLModel>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = clang::AtomicScopeOpenCLModel*]':
/usr/include/c++/7/bits/unique_ptr.h:337:28:   required from 'std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::get() const [with _Tp = clang::AtomicScopeOpenCLModel; _Dp = std::default_delete<clang::AtomicScopeOpenCLModel>; std::unique_ptr<_Tp, _Dp>::pointer = clang::AtomicScopeOpenCLModel*]'
/usr/include/c++/7/bits/unique_ptr.h:359:19:   required from 'std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::release() [with _Tp = clang::AtomicScopeOpenCLModel; _Dp = std::default_delete<clang::AtomicScopeOpenCLModel>; std::unique_ptr<_Tp, _Dp>::pointer = clang::AtomicScopeOpenCLModel*]'
/usr/include/c++/7/bits/unique_ptr.h:253:60:   required from 'std::unique_ptr<_Tp, _Dp>::unique_ptr(std::unique_ptr<_Up, _Ep>&&) [with _Up = clang::AtomicScopeOpenCLModel; _Ep = std::default_delete<clang::AtomicScopeOpenCLModel>; <template-parameter-2-3> = void; _Tp = clang::AtomicScopeModel; _Dp = std::default_delete<clang::AtomicScopeModel>]'
/llvm/tools/clang/include/clang/Basic/SyncScope.h:147:54:   required from here
/usr/include/c++/7/bits/unique_ptr.h:147:53: error: no matching function for call to 'get<0>(const std::tuple<clang::AtomicScopeOpenCLModel*, std::default_delete<clang::AtomicScopeOpenCLModel> >&)'
       pointer    _M_ptr() const { return std::get<0>(_M_t); }
                                          ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h: In instantiation of 'void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::initEmpty() [with DerivedT = llvm::DenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >; KeyT = const clang::FileEntry*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseSetPair<const clang::FileEntry*>]':
/llvm/include/llvm/ADT/DenseMap.h:791:7:   required from 'void llvm::DenseMap<KeyT, ValueT, KeyInfoT, BucketT>::init(unsigned int) [with KeyT = const clang::FileEntry*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseSetPair<const clang::FileEntry*>]'
/llvm/include/llvm/ADT/DenseMap.h:726:56:   required from 'llvm::DenseMap<KeyT, ValueT, KeyInfoT, BucketT>::DenseMap(unsigned int) [with KeyT = const clang::FileEntry*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseSetPair<const clang::FileEntry*>]'
/llvm/include/llvm/ADT/DenseSet.h:67:77:   required from 'llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::DenseSetImpl(unsigned int) [with ValueT = const clang::FileEntry*; MapTy = llvm::DenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >; ValueInfoT = llvm::DenseMapInfo<const clang::FileEntry*>]'
/llvm/include/llvm/ADT/DenseSet.h:249:7:   required from here
/llvm/include/llvm/ADT/DenseMap.h:377:7: error: no matching function for call to 'operator new(sizetype, const clang::FileEntry**)'
       ::new (&B->getFirst()) KeyT(EmptyKey);
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'const clang::FileEntry**' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h:377:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'const clang::FileEntry**'
       ::new (&B->getFirst()) KeyT(EmptyKey);
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() const [with _Tp = llvm::SpecialCaseList::Matcher; _Dp = std::default_delete<llvm::SpecialCaseList::Matcher>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = llvm::SpecialCaseList::Matcher*]':
/usr/include/c++/7/bits/unique_ptr.h:337:28:   required from 'std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::get() const [with _Tp = llvm::SpecialCaseList::Matcher; _Dp = std::default_delete<llvm::SpecialCaseList::Matcher>; std::unique_ptr<_Tp, _Dp>::pointer = llvm::SpecialCaseList::Matcher*]'
/usr/include/c++/7/bits/unique_ptr.h:359:19:   required from 'std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::release() [with _Tp = llvm::SpecialCaseList::Matcher; _Dp = std::default_delete<llvm::SpecialCaseList::Matcher>; std::unique_ptr<_Tp, _Dp>::pointer = llvm::SpecialCaseList::Matcher*]'
/usr/include/c++/7/bits/unique_ptr.h:239:18:   required from 'std::unique_ptr<_Tp, _Dp>::unique_ptr(std::unique_ptr<_Tp, _Dp>&&) [with _Tp = llvm::SpecialCaseList::Matcher; _Dp = std::default_delete<llvm::SpecialCaseList::Matcher>]'
/llvm/include/llvm/Support/SpecialCaseList.h:133:70:   required from here
/usr/include/c++/7/bits/unique_ptr.h:147:53: error: no matching function for call to 'get<0>(const std::tuple<llvm::SpecialCaseList::Matcher*, std::default_delete<llvm::SpecialCaseList::Matcher> >&)'
       pointer    _M_ptr() const { return std::get<0>(_M_t); }
                                          ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/unordered_map:47:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/hashtable.h: In instantiation of 'void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::clear() [with _Key = unsigned int; _Value = std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >; _Alloc = std::allocator<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<unsigned int>; _H1 = std::hash<unsigned int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/include/c++/7/bits/hashtable.h:1355:12:   required from 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = unsigned int; _Value = std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >; _Alloc = std::allocator<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<unsigned int>; _H1 = std::hash<unsigned int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]'
/usr/include/c++/7/bits/unordered_map.h:101:11:   required from 'void std::default_delete<_Tp>::operator()(_Tp*) const [with _Tp = llvm::SpecialCaseList::Matcher]'
/usr/include/c++/7/bits/unique_ptr.h:268:17:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = llvm::SpecialCaseList::Matcher; _Dp = std::default_delete<llvm::SpecialCaseList::Matcher>]'
/llvm/include/llvm/Support/SpecialCaseList.h:133:70:   required from here
/usr/include/c++/7/bits/hashtable.h:2030:39: error: using invalid field 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_bucket_count'
       __builtin_memset(_M_buckets, 0, _M_bucket_count * sizeof(__bucket_type));
                                       ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable.h:2031:7: error: using invalid field 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_element_count'
       _M_element_count = 0;
       ^~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/hashtable.h: In instantiation of 'void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = unsigned int; _Value = std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >; _Alloc = std::allocator<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<unsigned int>; _H1 = std::hash<unsigned int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/include/c++/7/bits/hashtable.h:1356:28:   required from 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = unsigned int; _Value = std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >; _Alloc = std::allocator<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<unsigned int>; _H1 = std::hash<unsigned int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]'
/usr/include/c++/7/bits/unordered_map.h:101:11:   required from 'void std::default_delete<_Tp>::operator()(_Tp*) const [with _Tp = llvm::SpecialCaseList::Matcher]'
/usr/include/c++/7/bits/unique_ptr.h:268:17:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = llvm::SpecialCaseList::Matcher; _Dp = std::default_delete<llvm::SpecialCaseList::Matcher>]'
/llvm/include/llvm/Support/SpecialCaseList.h:133:70:   required from here
/usr/include/c++/7/bits/hashtable.h:368:43: error: using invalid field 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_bucket_count'
       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
                                           ^~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from /llvm/include/llvm/ADT/ArrayRef.h:25,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_vector.h: In instantiation of 'std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = std::pair<const void*, llvm::Pass*>; _Alloc = std::allocator<std::pair<const void*, llvm::Pass*> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int]':
/usr/include/c++/7/bits/stl_vector.h:1499:14:   required from 'std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::pair<const void*, llvm::Pass*>; _Alloc = std::allocator<std::pair<const void*, llvm::Pass*> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int]'
/usr/include/c++/7/bits/vector.tcc:404:14:   required from 'void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::pair<const void*, llvm::Pass*>&}; _Tp = std::pair<const void*, llvm::Pass*>; _Alloc = std::allocator<std::pair<const void*, llvm::Pass*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<const void*, llvm::Pass*>*, std::vector<std::pair<const void*, llvm::Pass*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<const void*, llvm::Pass*>*]'
/usr/include/c++/7/bits/stl_vector.h:948:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::pair<const void*, llvm::Pass*>; _Alloc = std::allocator<std::pair<const void*, llvm::Pass*> >; std::vector<_Tp, _Alloc>::value_type = std::pair<const void*, llvm::Pass*>]'
/llvm/include/llvm/PassAnalysisSupport.h:173:32:   required from here
/usr/include/c++/7/bits/stl_vector.h:676:39: error: 'max_size' is not a member of 'std::vector<std::pair<const void*, llvm::Pass*> >::_Alloc_traits {aka __gnu_cxx::__alloc_traits<std::allocator<std::pair<const void*, llvm::Pass*> > >}'
       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
                ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_vector.h: In instantiation of 'std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = const llvm::PassInfo*; _Alloc = std::allocator<const llvm::PassInfo*>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]':
/usr/include/c++/7/bits/stl_vector.h:1499:14:   required from 'std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = const llvm::PassInfo*; _Alloc = std::allocator<const llvm::PassInfo*>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]'
/usr/include/c++/7/bits/vector.tcc:404:14:   required from 'void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const llvm::PassInfo* const&}; _Tp = const llvm::PassInfo*; _Alloc = std::allocator<const llvm::PassInfo*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<const llvm::PassInfo**, std::vector<const llvm::PassInfo*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = const llvm::PassInfo**]'
/usr/include/c++/7/bits/stl_vector.h:948:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = const llvm::PassInfo*; _Alloc = std::allocator<const llvm::PassInfo*>; std::vector<_Tp, _Alloc>::value_type = const llvm::PassInfo*]'
/llvm/include/llvm/PassInfo.h:108:28:   required from here
/usr/include/c++/7/bits/stl_vector.h:676:39: error: 'max_size' is not a member of 'std::vector<const llvm::PassInfo*>::_Alloc_traits {aka __gnu_cxx::__alloc_traits<std::allocator<const llvm::PassInfo*> >}'
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::_Rb_tree_node<int> > >':
/usr/include/c++/7/bits/stl_tree.h:650:24:   required from 'void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<int>*]'
/usr/include/c++/7/bits/stl_tree.h:658:17:   required from 'void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_drop_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<int>*]'
/usr/include/c++/7/bits/stl_tree.h:1858:16:   required from 'void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<int>*]'
/usr/include/c++/7/bits/stl_tree.h:949:17:   required from 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]'
/usr/include/c++/7/bits/stl_set.h:157:7:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::_Rb_tree_node<int> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::_Rb_tree_node<int> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::_Rb_tree_node<int> > >::_Base_type {aka std::allocator_traits<std::allocator<std::_Rb_tree_node<int> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::_Rb_tree_node<int> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::_Rb_tree_node<int> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /usr/include/c++/7/map:60:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:32,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_tree.h: In instantiation of 'void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >*]':
/usr/include/c++/7/bits/stl_tree.h:643:21:   required from 'std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >*]'
/usr/include/c++/7/bits/stl_tree.h:2398:33:   required from 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_emplace_hint_unique(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<>}; _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator = std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >]'
/usr/include/c++/7/bits/stl_map.h:512:8:   required from 'std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type& std::map<_Key, _Tp, _Compare, _Alloc>::operator[](std::map<_Key, _Tp, _Compare, _Alloc>::key_type&&) [with _Key = std::__cxx11::basic_string<char>; _Tp = clang::ast_type_traits::DynTypedNode; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type = clang::ast_type_traits::DynTypedNode; std::map<_Key, _Tp, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:152:15:   required from here
/usr/include/c++/7/bits/stl_tree.h:625:8: error: no matching function for call to 'operator new(sizetype, std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >*&)'
        ::new(__node) _Rb_tree_node<_Val>;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> > >::_Link_type {aka std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >*}' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/map:60:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:32,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_tree.h:625:8: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> > >::_Link_type {aka std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >*}'
        ::new(__node) _Rb_tree_node<_Val>;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::_Rb_tree_node<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> > > >':
/usr/include/c++/7/bits/stl_tree.h:650:24:   required from 'void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = clang::FileID; _Val = std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File>; _KeyOfValue = std::_Select1st<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> >; _Compare = std::less<clang::FileID>; _Alloc = std::allocator<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> >*]'
/usr/include/c++/7/bits/stl_tree.h:658:17:   required from 'void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_drop_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = clang::FileID; _Val = std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File>; _KeyOfValue = std::_Select1st<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> >; _Compare = std::less<clang::FileID>; _Alloc = std::allocator<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> >*]'
/usr/include/c++/7/bits/stl_tree.h:1858:16:   required from 'void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = clang::FileID; _Val = std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File>; _KeyOfValue = std::_Select1st<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> >; _Compare = std::less<clang::FileID>; _Alloc = std::allocator<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> >*]'
/usr/include/c++/7/bits/stl_tree.h:1171:17:   required from 'void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::clear() [with _Key = clang::FileID; _Val = std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File>; _KeyOfValue = std::_Select1st<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> >; _Compare = std::less<clang::FileID>; _Alloc = std::allocator<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> >]'
/usr/include/c++/7/bits/stl_map.h:1128:9:   required from 'void std::map<_Key, _Tp, _Compare, _Alloc>::clear() [with _Key = clang::FileID; _Tp = clang::DiagnosticsEngine::DiagStateMap::File; _Compare = std::less<clang::FileID>; _Alloc = std::allocator<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> >]'
/llvm/tools/clang/include/clang/Basic/Diagnostic.h:324:19:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> > > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> > > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::_Rb_tree_node<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> > > >::_Base_type {aka std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> > > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::_Rb_tree_node<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> > > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<const clang::FileID, clang::DiagnosticsEngine::DiagStateMap::File> > > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple: In instantiation of 'static constexpr bool std::__tuple_compare<_Tp, _Up, __i, __size>::__less(const _Tp&, const _Up&) [with _Tp = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; _Up = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; long unsigned int __i = 3; long unsigned int __size = 4]':
/usr/include/c++/7/tuple:1381:61:   recursively required from 'static constexpr bool std::__tuple_compare<_Tp, _Up, __i, __size>::__less(const _Tp&, const _Up&) [with _Tp = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; _Up = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; long unsigned int __i = 1; long unsigned int __size = 4]'
/usr/include/c++/7/tuple:1381:61:   required from 'static constexpr bool std::__tuple_compare<_Tp, _Up, __i, __size>::__less(const _Tp&, const _Up&) [with _Tp = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; _Up = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; long unsigned int __i = 0; long unsigned int __size = 4]'
/usr/include/c++/7/tuple:1418:31:   required from 'constexpr bool std::operator<(const std::tuple<_Tps ...>&, const std::tuple<_Elements ...>&) [with _TElements = {const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&}; _UElements = {const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&}]'
/llvm/include/llvm/Support/VersionTuple.h:111:58:   required from here
/usr/include/c++/7/tuple:1379:27: error: no matching function for call to 'get<3>(const std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>&)'
  return bool(std::get<__i>(__t) < std::get<__i>(__u))
              ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1379:48: error: no matching function for call to 'get<3>(const std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>&)'
  return bool(std::get<__i>(__t) < std::get<__i>(__u))
                                   ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1380:27: error: no matching function for call to 'get<3>(const std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>&)'
    || (!bool(std::get<__i>(__u) < std::get<__i>(__t))
              ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1380:48: error: no matching function for call to 'get<3>(const std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>&)'
    || (!bool(std::get<__i>(__u) < std::get<__i>(__t))
                                   ~~~~~~~~~~~~~^~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/unique_ptr.h:37:0,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/tuple:1382:7: error: body of constexpr function 'static constexpr bool std::__tuple_compare<_Tp, _Up, __i, __size>::__less(const _Tp&, const _Up&) [with _Tp = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; _Up = std::tuple<const unsigned int&, const unsigned int&, const unsigned int&, const unsigned int&>; long unsigned int __i = 3; long unsigned int __size = 4]' not a return-statement
       }
       ^
In file included from /usr/include/c++/7/vector:64:0,
                 from /llvm/include/llvm/ADT/ArrayRef.h:25,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_vector.h: In instantiation of 'std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = llvm::StringRef; _Alloc = std::allocator<llvm::StringRef>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]':
/usr/include/c++/7/bits/stl_vector.h:1499:14:   required from 'std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = llvm::StringRef; _Alloc = std::allocator<llvm::StringRef>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]'
/usr/include/c++/7/bits/vector.tcc:404:14:   required from 'void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {llvm::StringRef}; _Tp = llvm::StringRef; _Alloc = std::allocator<llvm::StringRef>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<llvm::StringRef*, std::vector<llvm::StringRef> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = llvm::StringRef*]'
/usr/include/c++/7/bits/vector.tcc:105:21:   required from 'void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {llvm::StringRef}; _Tp = llvm::StringRef; _Alloc = std::allocator<llvm::StringRef>]'
/usr/include/c++/7/bits/stl_vector.h:954:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = llvm::StringRef; _Alloc = std::allocator<llvm::StringRef>; std::vector<_Tp, _Alloc>::value_type = llvm::StringRef]'
/llvm/include/llvm/ADT/StringExtras.h:47:32:   required from here
/usr/include/c++/7/bits/stl_vector.h:676:39: error: 'max_size' is not a member of 'std::vector<llvm::StringRef>::_Alloc_traits {aka __gnu_cxx::__alloc_traits<std::allocator<llvm::StringRef> >}'
       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
                ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_vector.h: In instantiation of 'std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = std::unique_ptr<llvm::ErrorInfoBase>; _Alloc = std::allocator<std::unique_ptr<llvm::ErrorInfoBase> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int]':
/usr/include/c++/7/bits/stl_vector.h:1499:14:   required from 'std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::unique_ptr<llvm::ErrorInfoBase>; _Alloc = std::allocator<std::unique_ptr<llvm::ErrorInfoBase> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int]'
/usr/include/c++/7/bits/vector.tcc:404:14:   required from 'void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >}; _Tp = std::unique_ptr<llvm::ErrorInfoBase>; _Alloc = std::allocator<std::unique_ptr<llvm::ErrorInfoBase> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase>*, std::vector<std::unique_ptr<llvm::ErrorInfoBase> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::unique_ptr<llvm::ErrorInfoBase>*]'
/usr/include/c++/7/bits/vector.tcc:105:21:   required from 'void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >}; _Tp = std::unique_ptr<llvm::ErrorInfoBase>; _Alloc = std::allocator<std::unique_ptr<llvm::ErrorInfoBase> >]'
/usr/include/c++/7/bits/stl_vector.h:954:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::unique_ptr<llvm::ErrorInfoBase>; _Alloc = std::allocator<std::unique_ptr<llvm::ErrorInfoBase> >; std::vector<_Tp, _Alloc>::value_type = std::unique_ptr<llvm::ErrorInfoBase>]'
/llvm/include/llvm/Support/Error.h:387:43:   required from here
/usr/include/c++/7/bits/stl_vector.h:676:39: error: 'max_size' is not a member of 'std::vector<std::unique_ptr<llvm::ErrorInfoBase> >::_Alloc_traits {aka __gnu_cxx::__alloc_traits<std::allocator<std::unique_ptr<llvm::ErrorInfoBase> > >}'
In file included from /usr/include/c++/7/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/7/memory:81,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/shared_ptr_base.h: In instantiation of 'std::__shared_count<_Lp>::__shared_count(std::_Sp_make_shared_tag, _Tp*, const _Alloc&, _Args&& ...) [with _Tp = llvm::sys::fs::detail::DirIterState; _Alloc = std::allocator<llvm::sys::fs::detail::DirIterState>; _Args = {}; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2]':
/usr/include/c++/7/bits/shared_ptr_base.h:1295:35:   required from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<llvm::sys::fs::detail::DirIterState>; _Args = {}; _Tp = llvm::sys::fs::detail::DirIterState; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2]'
/usr/include/c++/7/bits/shared_ptr.h:344:64:   required from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<llvm::sys::fs::detail::DirIterState>; _Args = {}; _Tp = llvm::sys::fs::detail::DirIterState]'
/usr/include/c++/7/bits/shared_ptr.h:690:14:   required from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = llvm::sys::fs::detail::DirIterState; _Alloc = std::allocator<llvm::sys::fs::detail::DirIterState>; _Args = {}]'
/usr/include/c++/7/bits/shared_ptr.h:706:39:   required from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = llvm::sys::fs::detail::DirIterState; _Args = {}]'
/llvm/include/llvm/Support/FileSystem.h:1204:52:   required from here
/usr/include/c++/7/bits/shared_ptr_base.h:637:4: error: no matching function for call to 'operator new(sizetype, _Sp_cp_type*&)'
    ::new (__mem) _Sp_cp_type(std::move(__a),
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         std::forward<_Args>(__args)...);
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from '_Sp_cp_type* {aka std::_Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (__gnu_cxx::_Lock_policy)2>*}' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/7/memory:81,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/shared_ptr_base.h:637:4: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and '_Sp_cp_type* {aka std::_Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (__gnu_cxx::_Lock_policy)2>*}'
    ::new (__mem) _Sp_cp_type(std::move(__a),
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         std::forward<_Args>(__args)...);
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/shared_ptr_base.h:640:12: error: no match for 'operator=' (operand types are 'std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (__gnu_cxx::_Lock_policy)2> > >' and 'std::nullptr_t')
    __guard = nullptr;
    ~~~~~~~~^~~~~~~~~
In file included from /usr/include/c++/7/bits/shared_ptr_base.h:55:0,
                 from /usr/include/c++/7/bits/shared_ptr.h:52,
                 from /usr/include/c++/7/memory:81,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/allocated_ptr.h:46:12: note: candidate: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (__gnu_cxx::_Lock_policy)2> > >& std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (__gnu_cxx::_Lock_policy)2> > >::operator=(const std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (__gnu_cxx::_Lock_policy)2> > >&) <deleted>
     struct __allocated_ptr
            ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/allocated_ptr.h:46:12: note:   no known conversion for argument 1 from 'std::nullptr_t' to 'const std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (__gnu_cxx::_Lock_policy)2> > >&'
In file included from /usr/include/c++/7/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/7/memory:81,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/shared_ptr_base.h: In instantiation of 'std::__shared_count<_Lp>::__shared_count(std::_Sp_make_shared_tag, _Tp*, const _Alloc&, _Args&& ...) [with _Tp = llvm::sys::fs::detail::RecDirIterState; _Alloc = std::allocator<llvm::sys::fs::detail::RecDirIterState>; _Args = {}; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2]':
/usr/include/c++/7/bits/shared_ptr_base.h:1295:35:   required from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<llvm::sys::fs::detail::RecDirIterState>; _Args = {}; _Tp = llvm::sys::fs::detail::RecDirIterState; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2]'
/usr/include/c++/7/bits/shared_ptr.h:344:64:   required from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<llvm::sys::fs::detail::RecDirIterState>; _Args = {}; _Tp = llvm::sys::fs::detail::RecDirIterState]'
/usr/include/c++/7/bits/shared_ptr.h:690:14:   required from 'std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = llvm::sys::fs::detail::RecDirIterState; _Alloc = std::allocator<llvm::sys::fs::detail::RecDirIterState>; _Args = {}]'
/usr/include/c++/7/bits/shared_ptr.h:706:39:   required from 'std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = llvm::sys::fs::detail::RecDirIterState; _Args = {}]'
/llvm/include/llvm/Support/FileSystem.h:1266:57:   required from here
/usr/include/c++/7/bits/shared_ptr_base.h:637:4: error: no matching function for call to 'operator new(sizetype, _Sp_cp_type*&)'
    ::new (__mem) _Sp_cp_type(std::move(__a),
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         std::forward<_Args>(__args)...);
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from '_Sp_cp_type* {aka std::_Sp_counted_ptr_inplace<llvm::sys::fs::detail::RecDirIterState, std::allocator<llvm::sys::fs::detail::RecDirIterState>, (__gnu_cxx::_Lock_policy)2>*}' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/shared_ptr.h:52:0,
                 from /usr/include/c++/7/memory:81,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/shared_ptr_base.h:637:4: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and '_Sp_cp_type* {aka std::_Sp_counted_ptr_inplace<llvm::sys::fs::detail::RecDirIterState, std::allocator<llvm::sys::fs::detail::RecDirIterState>, (__gnu_cxx::_Lock_policy)2>*}'
    ::new (__mem) _Sp_cp_type(std::move(__a),
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         std::forward<_Args>(__args)...);
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/shared_ptr_base.h:640:12: error: no match for 'operator=' (operand types are 'std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<llvm::sys::fs::detail::RecDirIterState, std::allocator<llvm::sys::fs::detail::RecDirIterState>, (__gnu_cxx::_Lock_policy)2> > >' and 'std::nullptr_t')
    __guard = nullptr;
    ~~~~~~~~^~~~~~~~~
In file included from /usr/include/c++/7/bits/shared_ptr_base.h:55:0,
                 from /usr/include/c++/7/bits/shared_ptr.h:52,
                 from /usr/include/c++/7/memory:81,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/allocated_ptr.h:46:12: note: candidate: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<llvm::sys::fs::detail::RecDirIterState, std::allocator<llvm::sys::fs::detail::RecDirIterState>, (__gnu_cxx::_Lock_policy)2> > >& std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<llvm::sys::fs::detail::RecDirIterState, std::allocator<llvm::sys::fs::detail::RecDirIterState>, (__gnu_cxx::_Lock_policy)2> > >::operator=(const std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<llvm::sys::fs::detail::RecDirIterState, std::allocator<llvm::sys::fs::detail::RecDirIterState>, (__gnu_cxx::_Lock_policy)2> > >&) <deleted>
     struct __allocated_ptr
            ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/allocated_ptr.h:46:12: note:   no known conversion for argument 1 from 'std::nullptr_t' to 'const std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<llvm::sys::fs::detail::RecDirIterState, std::allocator<llvm::sys::fs::detail::RecDirIterState>, (__gnu_cxx::_Lock_policy)2> > >&'
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/new_allocator.h: In instantiation of 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = llvm::sys::fs::directory_iterator; _Args = {llvm::sys::fs::directory_iterator}; _Tp = llvm::sys::fs::directory_iterator]':
/usr/include/c++/7/bits/alloc_traits.h:475:4:   required from 'static void std::allocator_traits<std::allocator<_Tp> >::construct(std::allocator_traits<std::allocator<_Tp> >::allocator_type&, _Up*, _Args&& ...) [with _Up = llvm::sys::fs::directory_iterator; _Args = {llvm::sys::fs::directory_iterator}; _Tp = llvm::sys::fs::directory_iterator; std::allocator_traits<std::allocator<_Tp> >::allocator_type = std::allocator<llvm::sys::fs::directory_iterator>]'
/usr/include/c++/7/bits/vector.tcc:100:30:   required from 'void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {llvm::sys::fs::directory_iterator}; _Tp = llvm::sys::fs::directory_iterator; _Alloc = std::allocator<llvm::sys::fs::directory_iterator>]'
/usr/include/c++/7/bits/stl_vector.h:954:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = llvm::sys::fs::directory_iterator; _Alloc = std::allocator<llvm::sys::fs::directory_iterator>; std::vector<_Tp, _Alloc>::value_type = llvm::sys::fs::directory_iterator]'
/usr/include/c++/7/bits/stl_stack.h:231:9:   required from 'void std::stack<_Tp, _Sequence>::push(std::stack<_Tp, _Sequence>::value_type&&) [with _Tp = llvm::sys::fs::directory_iterator; _Sequence = std::vector<llvm::sys::fs::directory_iterator>; std::stack<_Tp, _Sequence>::value_type = llvm::sys::fs::directory_iterator]'
/llvm/include/llvm/Support/FileSystem.h:1268:59:   required from here
/usr/include/c++/7/ext/new_allocator.h:136:4: error: no matching function for call to 'operator new(sizetype, void*)'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0,
                 from /usr/include/c++/7/bits/allocator.h:46,
                 from /usr/include/c++/7/string:41,
                 from /llvm/include/llvm/ADT/APInt.h:23,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/new_allocator.h:136:4: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = std::__cxx11::basic_string<char>; _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*]'
/usr/include/c++/7/bits/stl_uninitialized.h:289:37:   required from '_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = std::__cxx11::basic_string<char>*; _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]'
/usr/include/c++/7/bits/vector.tcc:225:35:   required from 'std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]'
/llvm/include/llvm/Support/SourceMgr.h:112:26:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from /llvm/include/llvm/ADT/ArrayRef.h:25,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_vector.h: In instantiation of 'std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = llvm::SourceMgr::SrcBuffer; _Alloc = std::allocator<llvm::SourceMgr::SrcBuffer>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]':
/usr/include/c++/7/bits/stl_vector.h:1499:14:   required from 'std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = llvm::SourceMgr::SrcBuffer; _Alloc = std::allocator<llvm::SourceMgr::SrcBuffer>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]'
/usr/include/c++/7/bits/vector.tcc:404:14:   required from 'void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {llvm::SourceMgr::SrcBuffer}; _Tp = llvm::SourceMgr::SrcBuffer; _Alloc = std::allocator<llvm::SourceMgr::SrcBuffer>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<llvm::SourceMgr::SrcBuffer*, std::vector<llvm::SourceMgr::SrcBuffer> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = llvm::SourceMgr::SrcBuffer*]'
/usr/include/c++/7/bits/vector.tcc:105:21:   required from 'void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {llvm::SourceMgr::SrcBuffer}; _Tp = llvm::SourceMgr::SrcBuffer; _Alloc = std::allocator<llvm::SourceMgr::SrcBuffer>]'
/usr/include/c++/7/bits/stl_vector.h:954:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = llvm::SourceMgr::SrcBuffer; _Alloc = std::allocator<llvm::SourceMgr::SrcBuffer>; std::vector<_Tp, _Alloc>::value_type = llvm::SourceMgr::SrcBuffer]'
/llvm/include/llvm/Support/SourceMgr.h:156:36:   required from here
/usr/include/c++/7/bits/stl_vector.h:676:39: error: 'max_size' is not a member of 'std::vector<llvm::SourceMgr::SrcBuffer>::_Alloc_traits {aka __gnu_cxx::__alloc_traits<std::allocator<llvm::SourceMgr::SrcBuffer> >}'
       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
                ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_vector.h: In instantiation of 'std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>; _Alloc = std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int]':
/usr/include/c++/7/bits/stl_vector.h:1499:14:   required from 'std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>; _Alloc = std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int]'
/usr/include/c++/7/bits/vector.tcc:404:14:   required from 'void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry, std::default_delete<llvm::vfs::RedirectingFileSystem::Entry> >}; _Tp = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>; _Alloc = std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>*, std::vector<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>*]'
/usr/include/c++/7/bits/vector.tcc:105:21:   required from 'void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry, std::default_delete<llvm::vfs::RedirectingFileSystem::Entry> >}; _Tp = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>; _Alloc = std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> >]'
/usr/include/c++/7/bits/stl_vector.h:954:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>; _Alloc = std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> >; std::vector<_Tp, _Alloc>::value_type = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>]'
/llvm/include/llvm/Support/VirtualFileSystem.h:589:44:   required from here
/usr/include/c++/7/bits/stl_vector.h:676:39: error: 'max_size' is not a member of 'std::vector<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> >::_Alloc_traits {aka __gnu_cxx::__alloc_traits<std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> > >}'
/usr/include/c++/7/bits/stl_vector.h: In instantiation of 'std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = clang::Module*; _Alloc = std::allocator<clang::Module*>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]':
/usr/include/c++/7/bits/stl_vector.h:1499:14:   required from 'std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = clang::Module*; _Alloc = std::allocator<clang::Module*>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]'
/usr/include/c++/7/bits/vector.tcc:404:14:   required from 'void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {clang::Module*}; _Tp = clang::Module*; _Alloc = std::allocator<clang::Module*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<clang::Module**, std::vector<clang::Module*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = clang::Module**]'
/usr/include/c++/7/bits/vector.tcc:105:21:   required from 'void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {clang::Module*}; _Tp = clang::Module*; _Alloc = std::allocator<clang::Module*>]'
/usr/include/c++/7/bits/stl_vector.h:954:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = clang::Module*; _Alloc = std::allocator<clang::Module*>; std::vector<_Tp, _Alloc>::value_type = clang::Module*]'
/llvm/tools/clang/include/clang/Basic/Module.h:433:38:   required from here
/usr/include/c++/7/bits/stl_vector.h:676:39: error: 'max_size' is not a member of 'std::vector<clang::Module*>::_Alloc_traits {aka __gnu_cxx::__alloc_traits<std::allocator<clang::Module*> >}'
/usr/include/c++/7/bits/stl_vector.h: In instantiation of 'std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int]':
/usr/include/c++/7/bits/stl_vector.h:1499:14:   required from 'std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int]'
/usr/include/c++/7/bits/vector.tcc:404:14:   required from 'void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*]'
/usr/include/c++/7/bits/vector.tcc:105:21:   required from 'void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]'
/usr/include/c++/7/bits/stl_vector.h:954:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::basic_string<char>]'
/llvm/tools/clang/include/clang/Basic/Module.h:502:38:   required from here
/usr/include/c++/7/bits/stl_vector.h:676:39: error: 'max_size' is not a member of 'std::vector<std::__cxx11::basic_string<char> >::_Alloc_traits {aka __gnu_cxx::__alloc_traits<std::allocator<std::__cxx11::basic_string<char> > >}'
In file included from /llvm/include/llvm/ADT/STLExtras.h:19:0,
                 from /llvm/include/llvm/ADT/StringRef.h:12,
                 from /llvm/include/llvm/ADT/SmallString.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = clang::ARMInterruptAttr::InterruptType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:13:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::ARMInterruptAttr::InterruptType; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::ARMInterruptAttr::InterruptType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::ARMInterruptAttr::InterruptType>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::ARMInterruptAttr::InterruptType>; R = llvm::Optional<clang::ARMInterruptAttr::InterruptType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:237:41:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<clang::ARMInterruptAttr::InterruptType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       new (storage.buffer) T(std::move(y));
            ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = clang::BlocksAttr::BlockType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:13:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::BlocksAttr::BlockType; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::BlocksAttr::BlockType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::BlocksAttr::BlockType>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::BlocksAttr::BlockType>; R = llvm::Optional<clang::BlocksAttr::BlockType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:1618:39:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<clang::BlocksAttr::BlockType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = clang::CallableWhenAttr::ConsumedState; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:13:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::CallableWhenAttr::ConsumedState; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::CallableWhenAttr::ConsumedState>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::CallableWhenAttr::ConsumedState>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::CallableWhenAttr::ConsumedState>; R = llvm::Optional<clang::CallableWhenAttr::ConsumedState>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:2167:49:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<clang::CallableWhenAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = clang::ConsumableAttr::ConsumedState; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:13:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::ConsumableAttr::ConsumedState; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::ConsumableAttr::ConsumedState>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::ConsumableAttr::ConsumedState>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::ConsumableAttr::ConsumedState>; R = llvm::Optional<clang::ConsumableAttr::ConsumedState>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:2575:47:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<clang::ConsumableAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = clang::DiagnoseIfAttr::DiagnosticType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:13:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::DiagnoseIfAttr::DiagnosticType; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::DiagnoseIfAttr::DiagnosticType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::DiagnoseIfAttr::DiagnosticType>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::DiagnoseIfAttr::DiagnosticType>; R = llvm::Optional<clang::DiagnoseIfAttr::DiagnosticType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:2983:46:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<clang::DiagnoseIfAttr::DiagnosticType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = clang::EnumExtensibilityAttr::Kind; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:13:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::EnumExtensibilityAttr::Kind; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::EnumExtensibilityAttr::Kind>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::EnumExtensibilityAttr::Kind>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::EnumExtensibilityAttr::Kind>; R = llvm::Optional<clang::EnumExtensibilityAttr::Kind>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:3151:52:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<clang::EnumExtensibilityAttr::Kind, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = clang::LoopHintAttr::OptionType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:13:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::LoopHintAttr::OptionType; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::LoopHintAttr::OptionType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::LoopHintAttr::OptionType>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::LoopHintAttr::OptionType>; R = llvm::Optional<clang::LoopHintAttr::OptionType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:4149:49:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<clang::LoopHintAttr::OptionType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = clang::LoopHintAttr::LoopHintState; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:13:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::LoopHintAttr::LoopHintState; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::LoopHintAttr::LoopHintState>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::LoopHintAttr::LoopHintState>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::LoopHintAttr::LoopHintState>; R = llvm::Optional<clang::LoopHintAttr::LoopHintState>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:4190:43:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<clang::LoopHintAttr::LoopHintState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = clang::MipsInterruptAttr::InterruptType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:13:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::MipsInterruptAttr::InterruptType; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::MipsInterruptAttr::InterruptType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::MipsInterruptAttr::InterruptType>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::MipsInterruptAttr::InterruptType>; R = llvm::Optional<clang::MipsInterruptAttr::InterruptType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:4722:49:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<clang::MipsInterruptAttr::InterruptType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = clang::OMPDeclareSimdDeclAttr::BranchStateTy; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:13:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::OMPDeclareSimdDeclAttr::BranchStateTy; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::OMPDeclareSimdDeclAttr::BranchStateTy>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::OMPDeclareSimdDeclAttr::BranchStateTy>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::OMPDeclareSimdDeclAttr::BranchStateTy>; R = llvm::Optional<clang::OMPDeclareSimdDeclAttr::BranchStateTy>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:5712:53:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<clang::OMPDeclareSimdDeclAttr::BranchStateTy, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = clang::OMPDeclareTargetDeclAttr::MapTypeTy; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:13:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::OMPDeclareTargetDeclAttr::MapTypeTy; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::OMPDeclareTargetDeclAttr::MapTypeTy>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::OMPDeclareTargetDeclAttr::MapTypeTy>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::OMPDeclareTargetDeclAttr::MapTypeTy>; R = llvm::Optional<clang::OMPDeclareTargetDeclAttr::MapTypeTy>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:5866:50:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<clang::OMPDeclareTargetDeclAttr::MapTypeTy, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = clang::ObjCMethodFamilyAttr::FamilyKind; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:13:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::ObjCMethodFamilyAttr::FamilyKind; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::ObjCMethodFamilyAttr::FamilyKind>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::ObjCMethodFamilyAttr::FamilyKind>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::ObjCMethodFamilyAttr::FamilyKind>; R = llvm::Optional<clang::ObjCMethodFamilyAttr::FamilyKind>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:6478:51:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<clang::ObjCMethodFamilyAttr::FamilyKind, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = clang::ParamTypestateAttr::ConsumedState; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:13:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::ParamTypestateAttr::ConsumedState; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::ParamTypestateAttr::ConsumedState>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::ParamTypestateAttr::ConsumedState>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::ParamTypestateAttr::ConsumedState>; R = llvm::Optional<clang::ParamTypestateAttr::ConsumedState>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:7260:51:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<clang::ParamTypestateAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = clang::PcsAttr::PCSType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:13:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::PcsAttr::PCSType; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::PcsAttr::PCSType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::PcsAttr::PCSType>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::PcsAttr::PCSType>; R = llvm::Optional<clang::PcsAttr::PCSType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:7375:36:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<clang::PcsAttr::PCSType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = clang::RISCVInterruptAttr::InterruptType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:13:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::RISCVInterruptAttr::InterruptType; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::RISCVInterruptAttr::InterruptType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::RISCVInterruptAttr::InterruptType>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::RISCVInterruptAttr::InterruptType>; R = llvm::Optional<clang::RISCVInterruptAttr::InterruptType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:7793:45:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<clang::RISCVInterruptAttr::InterruptType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = clang::ReturnTypestateAttr::ConsumedState; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:13:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::ReturnTypestateAttr::ConsumedState; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::ReturnTypestateAttr::ConsumedState>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::ReturnTypestateAttr::ConsumedState>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::ReturnTypestateAttr::ConsumedState>; R = llvm::Optional<clang::ReturnTypestateAttr::ConsumedState>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:8183:52:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<clang::ReturnTypestateAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = clang::SetTypestateAttr::ConsumedState; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:13:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::SetTypestateAttr::ConsumedState; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::SetTypestateAttr::ConsumedState>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::SetTypestateAttr::ConsumedState>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::SetTypestateAttr::ConsumedState>; R = llvm::Optional<clang::SetTypestateAttr::ConsumedState>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:8474:49:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<clang::SetTypestateAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = clang::TestTypestateAttr::ConsumedState; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:13:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::TestTypestateAttr::ConsumedState; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::TestTypestateAttr::ConsumedState>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::TestTypestateAttr::ConsumedState>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::TestTypestateAttr::ConsumedState>; R = llvm::Optional<clang::TestTypestateAttr::ConsumedState>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:8986:52:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<clang::TestTypestateAttr::ConsumedState, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = clang::TypeVisibilityAttr::VisibilityType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:13:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::TypeVisibilityAttr::VisibilityType; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::TypeVisibilityAttr::VisibilityType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::TypeVisibilityAttr::VisibilityType>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::TypeVisibilityAttr::VisibilityType>; R = llvm::Optional<clang::TypeVisibilityAttr::VisibilityType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:9343:51:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<clang::TypeVisibilityAttr::VisibilityType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
/llvm/include/llvm/ADT/Optional.h: In instantiation of 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = clang::VisibilityAttr::VisibilityType; bool <anonymous> = true]':
/llvm/include/llvm/ADT/Optional.h:66:13:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(llvm::optional_detail::OptionalStorage<T, <anonymous> >&&) [with T = clang::VisibilityAttr::VisibilityType; bool <anonymous> = true]'
/llvm/include/llvm/ADT/Optional.h:114:29:   required from 'llvm::optional_detail::OptionalStorage<T, <anonymous> >& llvm::optional_detail::OptionalStorage<T, <anonymous> >::operator=(T&&) [with T = llvm::Optional<clang::VisibilityAttr::VisibilityType>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/Optional.h:130:13:   required from 'llvm::Optional<T>& llvm::Optional<T>::operator=(T&&) [with T = llvm::Optional<clang::VisibilityAttr::VisibilityType>]'
/llvm/include/llvm/ADT/StringSwitch.h:69:14:   required from 'llvm::StringSwitch<T, R>& llvm::StringSwitch<T, R>::Case(llvm::StringLiteral, T) [with T = llvm::Optional<clang::VisibilityAttr::VisibilityType>; R = llvm::Optional<clang::VisibilityAttr::VisibilityType>]'
/llvm/build/tools/clang/include/clang/AST/Attrs.inc:9731:47:   required from here
/llvm/include/llvm/ADT/Optional.h:57:20: error: 'struct llvm::AlignedCharArrayUnion<clang::VisibilityAttr::VisibilityType, char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>; _Args = {const std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, clang::FullSourceLoc>&}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>*; _ForwardIterator = std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>*; _ForwardIterator = std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>*]'
/llvm/include/llvm/ADT/SmallVector.h:202:28:   required from 'static void llvm::SmallVectorTemplateBase<T, <anonymous> >::uninitialized_copy(It1, It1, It2) [with It1 = const std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>*; It2 = std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>*; T = std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/SmallVector.h:393:5:   required from 'void llvm::SmallVectorImpl<T>::append(in_iter, in_iter) [with in_iter = const std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>*; <template-parameter-2-2> = void; T = std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>]'
/llvm/tools/clang/include/clang/Basic/SourceManager.h:779:61:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = clang::FixItHint; _Args = {clang::FixItHint}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<clang::FixItHint*>; _ForwardIterator = clang::FixItHint*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<clang::FixItHint*>; _ForwardIterator = clang::FixItHint*]'
/llvm/include/llvm/ADT/SmallVector.h:194:28:   required from 'static void llvm::SmallVectorTemplateBase<T, <anonymous> >::uninitialized_move(It1, It1, It2) [with It1 = clang::FixItHint*; It2 = clang::FixItHint*; T = clang::FixItHint; bool <anonymous> = false]'
/llvm/include/llvm/ADT/SmallVector.h:243:3:   required from 'void llvm::SmallVectorTemplateBase<T, <anonymous> >::grow(size_t) [with T = clang::FixItHint; bool <anonymous> = false; size_t = long unsigned int]'
/llvm/include/llvm/ADT/SmallVector.h:213:13:   required from 'void llvm::SmallVectorTemplateBase<T, <anonymous> >::push_back(const T&) [with T = clang::FixItHint; bool <anonymous> = false]'
/llvm/tools/clang/include/clang/Basic/Diagnostic.h:1171:45:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = clang::FixItHint; _Args = {const clang::FixItHint&}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const clang::FixItHint*; _ForwardIterator = clang::FixItHint*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const clang::FixItHint*; _ForwardIterator = clang::FixItHint*]'
/llvm/include/llvm/ADT/SmallVector.h:202:28:   required from 'static void llvm::SmallVectorTemplateBase<T, <anonymous> >::uninitialized_copy(It1, It1, It2) [with It1 = const clang::FixItHint*; It2 = clang::FixItHint*; T = clang::FixItHint; bool <anonymous> = false]'
/llvm/include/llvm/ADT/SmallVector.h:748:3:   required from 'llvm::SmallVectorImpl<T>& llvm::SmallVectorImpl<T>::operator=(const llvm::SmallVectorImpl<T>&) [with T = clang::FixItHint]'
/llvm/include/llvm/ADT/SmallVector.h:877:34:   required from 'const llvm::SmallVector<T, N>& llvm::SmallVector<T, N>::operator=(const llvm::SmallVector<T, N>&) [with T = clang::FixItHint; unsigned int N = 6]'
/llvm/tools/clang/include/clang/Basic/PartialDiagnostic.h:44:10:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = std::__cxx11::basic_string<char>; _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<std::__cxx11::basic_string<char>*>; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<std::__cxx11::basic_string<char>*>; _ForwardIterator = std::__cxx11::basic_string<char>*]'
/llvm/include/llvm/ADT/SmallVector.h:194:28:   required from 'static void llvm::SmallVectorTemplateBase<T, <anonymous> >::uninitialized_move(It1, It1, It2) [with It1 = std::__cxx11::basic_string<char>*; It2 = std::__cxx11::basic_string<char>*; T = std::__cxx11::basic_string<char>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/SmallVector.h:243:3:   required from 'void llvm::SmallVectorTemplateBase<T, <anonymous> >::grow(size_t) [with T = std::__cxx11::basic_string<char>; bool <anonymous> = false; size_t = long unsigned int]'
/llvm/include/llvm/ADT/SmallVector.h:220:13:   required from 'void llvm::SmallVectorTemplateBase<T, <anonymous> >::push_back(T&&) [with T = std::__cxx11::basic_string<char>; bool <anonymous> = false]'
/llvm/include/llvm/Support/Error.h:969:34:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/vector:64:0,
                 from /llvm/include/llvm/ADT/ArrayRef.h:25,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_vector.h: In instantiation of 'std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = llvm::sys::fs::directory_iterator; _Alloc = std::allocator<llvm::sys::fs::directory_iterator>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]':
/usr/include/c++/7/bits/stl_vector.h:1499:14:   required from 'std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = llvm::sys::fs::directory_iterator; _Alloc = std::allocator<llvm::sys::fs::directory_iterator>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]'
/usr/include/c++/7/bits/vector.tcc:404:14:   required from 'void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {llvm::sys::fs::directory_iterator}; _Tp = llvm::sys::fs::directory_iterator; _Alloc = std::allocator<llvm::sys::fs::directory_iterator>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<llvm::sys::fs::directory_iterator*, std::vector<llvm::sys::fs::directory_iterator> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = llvm::sys::fs::directory_iterator*]'
/usr/include/c++/7/bits/vector.tcc:105:21:   required from 'void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {llvm::sys::fs::directory_iterator}; _Tp = llvm::sys::fs::directory_iterator; _Alloc = std::allocator<llvm::sys::fs::directory_iterator>]'
/usr/include/c++/7/bits/stl_vector.h:954:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = llvm::sys::fs::directory_iterator; _Alloc = std::allocator<llvm::sys::fs::directory_iterator>; std::vector<_Tp, _Alloc>::value_type = llvm::sys::fs::directory_iterator]'
/usr/include/c++/7/bits/stl_stack.h:231:9:   required from 'void std::stack<_Tp, _Sequence>::push(std::stack<_Tp, _Sequence>::value_type&&) [with _Tp = llvm::sys::fs::directory_iterator; _Sequence = std::vector<llvm::sys::fs::directory_iterator>; std::stack<_Tp, _Sequence>::value_type = llvm::sys::fs::directory_iterator]'
/llvm/include/llvm/Support/FileSystem.h:1268:59:   required from here
/usr/include/c++/7/bits/stl_vector.h:676:39: error: 'max_size' is not a member of 'std::vector<llvm::sys::fs::directory_iterator>::_Alloc_traits {aka __gnu_cxx::__alloc_traits<std::allocator<llvm::sys::fs::directory_iterator> >}'
       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
                ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = std::__cxx11::basic_string<char>; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*]'
/usr/include/c++/7/bits/stl_uninitialized.h:289:37:   required from '_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _ForwardIterator = std::__cxx11::basic_string<char>*; _Tp = std::__cxx11::basic_string<char>]'
/usr/include/c++/7/bits/stl_vector.h:1263:35:   required from 'std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_M_allocate_and_copy(std::vector<_Tp, _Alloc>::size_type, _ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::pointer = std::__cxx11::basic_string<char>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int]'
/usr/include/c++/7/bits/vector.tcc:206:44:   required from 'std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]'
/llvm/include/llvm/Support/SourceMgr.h:112:26:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = llvm::SMFixIt; _Args = {llvm::SMFixIt}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<llvm::SMFixIt*>; _ForwardIterator = llvm::SMFixIt*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<llvm::SMFixIt*>; _ForwardIterator = llvm::SMFixIt*]'
/llvm/include/llvm/ADT/SmallVector.h:194:28:   required from 'static void llvm::SmallVectorTemplateBase<T, <anonymous> >::uninitialized_move(It1, It1, It2) [with It1 = llvm::SMFixIt*; It2 = llvm::SMFixIt*; T = llvm::SMFixIt; bool <anonymous> = false]'
/llvm/include/llvm/ADT/SmallVector.h:243:3:   required from 'void llvm::SmallVectorTemplateBase<T, <anonymous> >::grow(size_t) [with T = llvm::SMFixIt; bool <anonymous> = false; size_t = long unsigned int]'
/llvm/include/llvm/ADT/SmallVector.h:213:13:   required from 'void llvm::SmallVectorTemplateBase<T, <anonymous> >::push_back(const T&) [with T = llvm::SMFixIt; bool <anonymous> = false]'
/llvm/include/llvm/Support/SourceMgr.h:295:26:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>; _Args = {std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, clang::FullSourceLoc>}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>*>; _ForwardIterator = std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>*>; _ForwardIterator = std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>*]'
/llvm/include/llvm/ADT/SmallVector.h:194:28:   required from 'static void llvm::SmallVectorTemplateBase<T, <anonymous> >::uninitialized_move(It1, It1, It2) [with It1 = std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>*; It2 = std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>*; T = std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/SmallVector.h:243:3:   required from 'void llvm::SmallVectorTemplateBase<T, <anonymous> >::grow(size_t) [with T = std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>; bool <anonymous> = false; size_t = long unsigned int]'
/llvm/include/llvm/ADT/SmallVector.h:390:7:   required from 'void llvm::SmallVectorImpl<T>::append(in_iter, in_iter) [with in_iter = const std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>*; <template-parameter-2-2> = void; T = std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc>]'
/llvm/tools/clang/include/clang/Basic/SourceManager.h:779:61:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_construct.h:61:0,
                 from /usr/include/c++/7/bits/stl_tempbuf.h:60,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/ext/alloc_traits.h: In instantiation of 'struct __gnu_cxx::__alloc_traits<std::allocator<std::__detail::_Hash_node<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, false> > >':
/usr/include/c++/7/bits/hashtable_policy.h:2081:53:   required from 'void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type*) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, false> >; std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type = std::__detail::_Hash_node<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, false>]'
/usr/include/c++/7/bits/hashtable_policy.h:2097:22:   required from 'void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type*) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, false> >; std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type = std::__detail::_Hash_node<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, false>]'
/usr/include/c++/7/bits/hashtable.h:2029:7:   required from 'void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::clear() [with _Key = unsigned int; _Value = std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >; _Alloc = std::allocator<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<unsigned int>; _H1 = std::hash<unsigned int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]'
/usr/include/c++/7/bits/hashtable.h:1355:12:   required from 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = unsigned int; _Value = std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >; _Alloc = std::allocator<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<unsigned int>; _H1 = std::hash<unsigned int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]'
/usr/include/c++/7/bits/unordered_map.h:101:11:   required from 'void std::default_delete<_Tp>::operator()(_Tp*) const [with _Tp = llvm::SpecialCaseList::Matcher]'
/usr/include/c++/7/bits/unique_ptr.h:268:17:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = llvm::SpecialCaseList::Matcher; _Dp = std::default_delete<llvm::SpecialCaseList::Matcher>]'
/llvm/include/llvm/Support/SpecialCaseList.h:133:70:   required from here
/usr/include/c++/7/ext/alloc_traits.h:61:53: error: no type named 'size_type' in 'struct std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, false> > >'
     typedef typename _Base_type::size_type          size_type;
                                                     ^~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:62:53: error: no type named 'difference_type' in 'struct std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, false> > >'
     typedef typename _Base_type::difference_type    difference_type;
                                                     ^~~~~~~~~~~~~~~
/usr/include/c++/7/ext/alloc_traits.h:70:23: error: no members matching '__gnu_cxx::__alloc_traits<std::allocator<std::__detail::_Hash_node<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, false> > >::_Base_type {aka std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, false> > >}::max_size' in '__gnu_cxx::__alloc_traits<std::allocator<std::__detail::_Hash_node<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, false> > >::_Base_type {aka struct std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const unsigned int, llvm::SmallVector<long unsigned int, 4> >, false> > >}'
     using _Base_type::max_size;
                       ^~~~~~~~
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = clang::ast_matchers::internal::BoundNodesMap; _Args = {clang::ast_matchers::internal::BoundNodesMap}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<clang::ast_matchers::internal::BoundNodesMap*>; _ForwardIterator = clang::ast_matchers::internal::BoundNodesMap*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<clang::ast_matchers::internal::BoundNodesMap*>; _ForwardIterator = clang::ast_matchers::internal::BoundNodesMap*]'
/llvm/include/llvm/ADT/SmallVector.h:194:28:   required from 'static void llvm::SmallVectorTemplateBase<T, <anonymous> >::uninitialized_move(It1, It1, It2) [with It1 = clang::ast_matchers::internal::BoundNodesMap*; It2 = clang::ast_matchers::internal::BoundNodesMap*; T = clang::ast_matchers::internal::BoundNodesMap; bool <anonymous> = false]'
/llvm/include/llvm/ADT/SmallVector.h:243:3:   required from 'void llvm::SmallVectorTemplateBase<T, <anonymous> >::grow(size_t) [with T = clang::ast_matchers::internal::BoundNodesMap; bool <anonymous> = false; size_t = long unsigned int]'
/llvm/include/llvm/ADT/SmallVector.h:646:7:   required from 'void llvm::SmallVectorImpl<T>::emplace_back(ArgTypes&& ...) [with ArgTypes = {}; T = clang::ast_matchers::internal::BoundNodesMap]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:227:29:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = clang::ast_matchers::internal::BoundNodesMap; _Args = {const clang::ast_matchers::internal::BoundNodesMap&}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const clang::ast_matchers::internal::BoundNodesMap*; _ForwardIterator = clang::ast_matchers::internal::BoundNodesMap*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const clang::ast_matchers::internal::BoundNodesMap*; _ForwardIterator = clang::ast_matchers::internal::BoundNodesMap*]'
/llvm/include/llvm/ADT/SmallVector.h:202:28:   required from 'static void llvm::SmallVectorTemplateBase<T, <anonymous> >::uninitialized_copy(It1, It1, It2) [with It1 = const clang::ast_matchers::internal::BoundNodesMap*; It2 = clang::ast_matchers::internal::BoundNodesMap*; T = clang::ast_matchers::internal::BoundNodesMap; bool <anonymous> = false]'
/llvm/include/llvm/ADT/SmallVector.h:748:3:   required from 'llvm::SmallVectorImpl<T>& llvm::SmallVectorImpl<T>::operator=(const llvm::SmallVectorImpl<T>&) [with T = clang::ast_matchers::internal::BoundNodesMap]'
/llvm/include/llvm/ADT/SmallVector.h:873:36:   required from 'llvm::SmallVector<T, N>::SmallVector(const llvm::SmallVector<T, N>&) [with T = clang::ast_matchers::internal::BoundNodesMap; unsigned int N = 1]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:210:7:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = clang::ast_matchers::BoundNodes; _Args = {clang::ast_matchers::BoundNodes}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<clang::ast_matchers::BoundNodes*>; _ForwardIterator = clang::ast_matchers::BoundNodes*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<clang::ast_matchers::BoundNodes*>; _ForwardIterator = clang::ast_matchers::BoundNodes*]'
/llvm/include/llvm/ADT/SmallVector.h:194:28:   required from 'static void llvm::SmallVectorTemplateBase<T, <anonymous> >::uninitialized_move(It1, It1, It2) [with It1 = clang::ast_matchers::BoundNodes*; It2 = clang::ast_matchers::BoundNodes*; T = clang::ast_matchers::BoundNodes; bool <anonymous> = false]'
/llvm/include/llvm/ADT/SmallVector.h:243:3:   required from 'void llvm::SmallVectorTemplateBase<T, <anonymous> >::grow(size_t) [with T = clang::ast_matchers::BoundNodes; bool <anonymous> = false; size_t = long unsigned int]'
/llvm/include/llvm/ADT/SmallVector.h:213:13:   required from 'void llvm::SmallVectorTemplateBase<T, <anonymous> >::push_back(const T&) [with T = clang::ast_matchers::BoundNodes; bool <anonymous> = false]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:279:33:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h: In instantiation of 'void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::moveFromOldBuckets(BucketT*, BucketT*) [with DerivedT = llvm::DenseMap<unsigned int, clang::DiagnosticMapping>; KeyT = unsigned int; ValueT = clang::DiagnosticMapping; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, clang::DiagnosticMapping>]':
/llvm/include/llvm/ADT/DenseMap.h:809:5:   required from 'void llvm::DenseMap<KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with KeyT = unsigned int; ValueT = clang::DiagnosticMapping; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, clang::DiagnosticMapping>]'
/llvm/include/llvm/ADT/DenseMap.h:533:5:   required from 'void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with DerivedT = llvm::DenseMap<unsigned int, clang::DiagnosticMapping>; KeyT = unsigned int; ValueT = clang::DiagnosticMapping; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, clang::DiagnosticMapping>]'
/llvm/include/llvm/ADT/DenseMap.h:577:13:   required from 'BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, clang::DiagnosticMapping>; KeyT = unsigned int; ValueT = clang::DiagnosticMapping; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, clang::DiagnosticMapping>]'
/llvm/include/llvm/ADT/DenseMap.h:543:37:   required from 'BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const unsigned int&; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, clang::DiagnosticMapping>; KeyT = unsigned int; ValueT = clang::DiagnosticMapping; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, clang::DiagnosticMapping>]'
/llvm/include/llvm/ADT/DenseMap.h:322:29:   required from 'llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<unsigned int, clang::DiagnosticMapping>; KeyT = unsigned int; ValueT = clang::DiagnosticMapping; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, clang::DiagnosticMapping>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, clang::DiagnosticMapping>]'
/llvm/include/llvm/ADT/DenseMap.h:326:28:   required from 'ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<unsigned int, clang::DiagnosticMapping>; KeyT = unsigned int; ValueT = clang::DiagnosticMapping; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, clang::DiagnosticMapping>]'
/llvm/tools/clang/include/clang/Basic/Diagnostic.h:290:19:   required from here
/llvm/include/llvm/ADT/DenseMap.h:406:9: error: no matching function for call to 'operator new(sizetype, clang::DiagnosticMapping*)'
         ::new (&DestBucket->getSecond()) ValueT(std::move(B->getSecond()));
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'clang::DiagnosticMapping*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h:406:9: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'clang::DiagnosticMapping*'
         ::new (&DestBucket->getSecond()) ValueT(std::move(B->getSecond()));
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer& std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() [with _Tp = llvm::vfs::RedirectingFileSystem::Entry; _Dp = std::default_delete<llvm::vfs::RedirectingFileSystem::Entry>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = llvm::vfs::RedirectingFileSystem::Entry*]':
/usr/include/c++/7/bits/unique_ptr.h:266:8:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = llvm::vfs::RedirectingFileSystem::Entry; _Dp = std::default_delete<llvm::vfs::RedirectingFileSystem::Entry>]'
/usr/include/c++/7/bits/stl_construct.h:98:7:   required from 'void std::_Destroy(_Tp*) [with _Tp = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>]'
/usr/include/c++/7/bits/stl_construct.h:108:19:   required from 'static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>*; bool <anonymous> = false]'
/usr/include/c++/7/bits/stl_construct.h:137:11:   required from 'void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>*]'
/usr/include/c++/7/bits/stl_construct.h:206:15:   required from 'void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_Tp>&) [with _ForwardIterator = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>*; _Tp = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>]'
/usr/include/c++/7/bits/stl_vector.h:434:22:   required from 'std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>; _Alloc = std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> >]'
/llvm/include/llvm/Support/VirtualFileSystem.h:582:25:   required from here
/usr/include/c++/7/bits/unique_ptr.h:146:47: error: no matching function for call to 'get<0>(std::tuple<llvm::vfs::RedirectingFileSystem::Entry*, std::default_delete<llvm::vfs::RedirectingFileSystem::Entry> >&)'
       pointer&   _M_ptr() { return std::get<0>(_M_t); }
                                    ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h: In instantiation of 'const llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::LargeRep* llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getLargeRep() const [with KeyT = const clang::FileEntry*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 2; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseSetPair<const clang::FileEntry*>]':
/llvm/include/llvm/ADT/DenseMap.h:1156:47:   required from 'unsigned int llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getNumBuckets() const [with KeyT = const clang::FileEntry*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 2; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseSetPair<const clang::FileEntry*>]'
/llvm/include/llvm/ADT/DenseMap.h:521:63:   required from 'unsigned int llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getNumBuckets() const [with DerivedT = llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >; KeyT = const clang::FileEntry*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseSetPair<const clang::FileEntry*>]'
/llvm/include/llvm/ADT/DenseMap.h:525:40:   required from 'BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getBucketsEnd() [with DerivedT = llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >; KeyT = const clang::FileEntry*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseSetPair<const clang::FileEntry*>]'
/llvm/include/llvm/ADT/DenseMap.h:259:53:   required from 'std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >; KeyT = const clang::FileEntry*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseSetPair<const clang::FileEntry*>]'
/llvm/include/llvm/ADT/DenseSet.h:189:39:   required from 'std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = const clang::FileEntry*; MapTy = llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >; ValueInfoT = llvm::DenseMapInfo<const clang::FileEntry*>]'
/llvm/include/llvm/ADT/SetVector.h:142:34:   required from 'bool llvm::SetVector<T, Vector, Set>::insert(const value_type&) [with T = const clang::FileEntry*; Vector = llvm::SmallVector<const clang::FileEntry*, 2>; Set = llvm::SmallDenseSet<const clang::FileEntry*, 2, llvm::DenseMapInfo<const clang::FileEntry*> >; llvm::SetVector<T, Vector, Set>::value_type = const clang::FileEntry*]'
/llvm/tools/clang/include/clang/Basic/Module.h:497:27:   required from here
/llvm/include/llvm/ADT/DenseMap.h:1138:55: error: 'const struct llvm::AlignedCharArrayUnion<llvm::detail::DenseSetPair<const clang::FileEntry*> [2], llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >::LargeRep, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<const LargeRep *>(storage.buffer);
                                               ~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/DenseMap.h: In instantiation of 'void llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::grow(unsigned int) [with KeyT = const clang::FileEntry*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 2; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseSetPair<const clang::FileEntry*>]':
/llvm/include/llvm/ADT/DenseMap.h:533:5:   required from 'void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with DerivedT = llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >; KeyT = const clang::FileEntry*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseSetPair<const clang::FileEntry*>]'
/llvm/include/llvm/ADT/DenseMap.h:577:13:   required from 'BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const clang::FileEntry*; DerivedT = llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >; KeyT = const clang::FileEntry*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseSetPair<const clang::FileEntry*>]'
/llvm/include/llvm/ADT/DenseMap.h:543:37:   required from 'BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const clang::FileEntry* const&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >; KeyT = const clang::FileEntry*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseSetPair<const clang::FileEntry*>]'
/llvm/include/llvm/ADT/DenseMap.h:263:33:   required from 'std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >; KeyT = const clang::FileEntry*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseSetPair<const clang::FileEntry*>]'
/llvm/include/llvm/ADT/DenseSet.h:189:39:   required from 'std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = const clang::FileEntry*; MapTy = llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >; ValueInfoT = llvm::DenseMapInfo<const clang::FileEntry*>]'
/llvm/include/llvm/ADT/SetVector.h:142:34:   required from 'bool llvm::SetVector<T, Vector, Set>::insert(const value_type&) [with T = const clang::FileEntry*; Vector = llvm::SmallVector<const clang::FileEntry*, 2>; Set = llvm::SmallDenseSet<const clang::FileEntry*, 2, llvm::DenseMapInfo<const clang::FileEntry*> >; llvm::SetVector<T, Vector, Set>::value_type = const clang::FileEntry*]'
/llvm/tools/clang/include/clang/Basic/Module.h:497:27:   required from here
/llvm/include/llvm/ADT/DenseMap.h:1040:66: error: 'struct llvm::AlignedCharArrayUnion<llvm::detail::DenseSetPair<const clang::FileEntry*> [2], char, char, char, char, char, char, char, char, char>' has no member named 'buffer'
       BucketT *TmpBegin = reinterpret_cast<BucketT *>(TmpStorage.buffer);
                                                       ~~~~~~~~~~~^~~~~~
/llvm/include/llvm/ADT/DenseMap.h:1052:11: error: no matching function for call to 'operator new(sizetype, const clang::FileEntry**)'
           ::new (&TmpEnd->getFirst()) KeyT(std::move(P->getFirst()));
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'const clang::FileEntry**' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h:1052:11: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'const clang::FileEntry**'
           ::new (&TmpEnd->getFirst()) KeyT(std::move(P->getFirst()));
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/DenseMap.h:1053:11: error: no matching function for call to 'operator new(sizetype, llvm::detail::DenseSetEmpty*)'
           ::new (&TmpEnd->getSecond()) ValueT(std::move(P->getSecond()));
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::detail::DenseSetEmpty*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h:1053:11: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::detail::DenseSetEmpty*'
           ::new (&TmpEnd->getSecond()) ValueT(std::move(P->getSecond()));
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/DenseMap.h:1063:7: error: no matching function for call to 'operator new(sizetype, llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >::LargeRep*)'
       new (getLargeRep()) LargeRep(allocateBuckets(AtLeast));
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >::LargeRep*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h:1063:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >::LargeRep*'
       new (getLargeRep()) LargeRep(allocateBuckets(AtLeast));
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/DenseMap.h:1073:7: error: no matching function for call to 'operator new(sizetype, llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >::LargeRep*)'
       new (getLargeRep()) LargeRep(allocateBuckets(AtLeast));
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >::LargeRep*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h:1073:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >::LargeRep*'
       new (getLargeRep()) LargeRep(allocateBuckets(AtLeast));
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = std::pair<const void*, llvm::Pass*>; _Args = {std::pair<const void*, llvm::Pass*>}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<std::pair<const void*, llvm::Pass*>*>; _ForwardIterator = std::pair<const void*, llvm::Pass*>*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<std::pair<const void*, llvm::Pass*>*>; _ForwardIterator = std::pair<const void*, llvm::Pass*>*]'
/usr/include/c++/7/bits/stl_uninitialized.h:289:37:   required from '_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = std::move_iterator<std::pair<const void*, llvm::Pass*>*>; _ForwardIterator = std::pair<const void*, llvm::Pass*>*; _Tp = std::pair<const void*, llvm::Pass*>]'
/usr/include/c++/7/bits/stl_uninitialized.h:311:2:   required from '_ForwardIterator std::__uninitialized_move_if_noexcept_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::pair<const void*, llvm::Pass*>*; _ForwardIterator = std::pair<const void*, llvm::Pass*>*; _Allocator = std::allocator<std::pair<const void*, llvm::Pass*> >]'
/usr/include/c++/7/bits/vector.tcc:426:6:   required from 'void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const std::pair<const void*, llvm::Pass*>&}; _Tp = std::pair<const void*, llvm::Pass*>; _Alloc = std::allocator<std::pair<const void*, llvm::Pass*> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<const void*, llvm::Pass*>*, std::vector<std::pair<const void*, llvm::Pass*> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<const void*, llvm::Pass*>*]'
/usr/include/c++/7/bits/stl_vector.h:948:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::pair<const void*, llvm::Pass*>; _Alloc = std::allocator<std::pair<const void*, llvm::Pass*> >; std::vector<_Tp, _Alloc>::value_type = std::pair<const void*, llvm::Pass*>]'
/llvm/include/llvm/PassAnalysisSupport.h:173:32:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/map:60:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:32,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_tree.h: In instantiation of 'void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<int>*]':
/usr/include/c++/7/bits/stl_tree.h:643:21:   required from 'std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(_Args&& ...) [with _Args = {const int&}; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<int>*]'
/usr/include/c++/7/bits/stl_tree.h:556:62:   required from 'std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Alloc_node::operator()(_Arg&&) const [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<int>*]'
/usr/include/c++/7/bits/stl_tree.h:1753:29:   required from 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _Arg&&, _NodeGen&) [with _Arg = const int&; _NodeGen = std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator = std::_Rb_tree_iterator<int>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr = std::_Rb_tree_node_base*]'
/usr/include/c++/7/bits/stl_tree.h:2096:26:   required from 'std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = const int&; _Key = int; _Val = int; _KeyOfValue = std::_Identity<int>; _Compare = std::less<int>; _Alloc = std::allocator<int>]'
/usr/include/c++/7/bits/stl_set.h:501:48:   required from 'std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Key>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(const value_type&) [with _Key = int; _Compare = std::less<int>; _Alloc = std::allocator<int>; typename std::_Rb_tree<_Key, _Key, std::_Identity<_Key>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator = std::_Rb_tree_const_iterator<int>; std::set<_Key, _Compare, _Alloc>::value_type = int]'
/llvm/include/llvm/ADT/SmallSet.h:182:49:   required from 'std::pair<llvm::NoneType, bool> llvm::SmallSet<T, N, C>::insert(const T&) [with T = int; unsigned int N = 4; C = std::less<int>]'
/llvm/tools/clang/include/clang/Basic/TargetInfo.h:864:28:   required from here
/usr/include/c++/7/bits/stl_tree.h:625:8: error: no matching function for call to 'operator new(sizetype, std::_Rb_tree_node<int>*&)'
        ::new(__node) _Rb_tree_node<_Val>;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Link_type {aka std::_Rb_tree_node<int>*}' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/map:60:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:32,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_tree.h:625:8: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Link_type {aka std::_Rb_tree_node<int>*}'
        ::new(__node) _Rb_tree_node<_Val>;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = std::pair<void*, long unsigned int>; _Args = {std::pair<void*, long unsigned int>}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<std::pair<void*, long unsigned int>*>; _ForwardIterator = std::pair<void*, long unsigned int>*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<std::pair<void*, long unsigned int>*>; _ForwardIterator = std::pair<void*, long unsigned int>*]'
/llvm/include/llvm/ADT/SmallVector.h:194:28:   required from 'static void llvm::SmallVectorTemplateBase<T, <anonymous> >::uninitialized_move(It1, It1, It2) [with It1 = std::pair<void*, long unsigned int>*; It2 = std::pair<void*, long unsigned int>*; T = std::pair<void*, long unsigned int>; bool <anonymous> = false]'
/llvm/include/llvm/ADT/SmallVector.h:243:3:   required from 'void llvm::SmallVectorTemplateBase<T, <anonymous> >::grow(size_t) [with T = std::pair<void*, long unsigned int>; bool <anonymous> = false; size_t = long unsigned int]'
/llvm/include/llvm/ADT/SmallVector.h:220:13:   required from 'void llvm::SmallVectorTemplateBase<T, <anonymous> >::push_back(T&&) [with T = std::pair<void*, long unsigned int>; bool <anonymous> = false]'
/llvm/include/llvm/Support/Allocator.h:249:33:   required from 'void* llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>::Allocate(size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; size_t = long unsigned int]'
/llvm/tools/clang/include/clang/AST/ASTContext.h:669:42:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h: In instantiation of 'void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::initEmpty() [with DerivedT = llvm::DenseMap<clang::Decl*, clang::Decl*>; KeyT = clang::Decl*; ValueT = clang::Decl*; KeyInfoT = llvm::DenseMapInfo<clang::Decl*>; BucketT = llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*>]':
/llvm/include/llvm/ADT/DenseMap.h:805:7:   required from 'void llvm::DenseMap<KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with KeyT = clang::Decl*; ValueT = clang::Decl*; KeyInfoT = llvm::DenseMapInfo<clang::Decl*>; BucketT = llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*>]'
/llvm/include/llvm/ADT/DenseMap.h:533:5:   required from 'void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with DerivedT = llvm::DenseMap<clang::Decl*, clang::Decl*>; KeyT = clang::Decl*; ValueT = clang::Decl*; KeyInfoT = llvm::DenseMapInfo<clang::Decl*>; BucketT = llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*>]'
/llvm/include/llvm/ADT/DenseMap.h:577:13:   required from 'BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = clang::Decl*; DerivedT = llvm::DenseMap<clang::Decl*, clang::Decl*>; KeyT = clang::Decl*; ValueT = clang::Decl*; KeyInfoT = llvm::DenseMapInfo<clang::Decl*>; BucketT = llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*>]'
/llvm/include/llvm/ADT/DenseMap.h:543:37:   required from 'BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = clang::Decl* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<clang::Decl*, clang::Decl*>; KeyT = clang::Decl*; ValueT = clang::Decl*; KeyInfoT = llvm::DenseMapInfo<clang::Decl*>; BucketT = llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*>]'
/llvm/include/llvm/ADT/DenseMap.h:322:29:   required from 'llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<clang::Decl*, clang::Decl*>; KeyT = clang::Decl*; ValueT = clang::Decl*; KeyInfoT = llvm::DenseMapInfo<clang::Decl*>; BucketT = llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*>]'
/llvm/include/llvm/ADT/DenseMap.h:326:28:   required from 'ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<clang::Decl*, clang::Decl*>; KeyT = clang::Decl*; ValueT = clang::Decl*; KeyInfoT = llvm::DenseMapInfo<clang::Decl*>; BucketT = llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*>]'
/llvm/tools/clang/include/clang/AST/ASTContext.h:975:18:   required from here
/llvm/include/llvm/ADT/DenseMap.h:377:7: error: no matching function for call to 'operator new(sizetype, clang::Decl**)'
       ::new (&B->getFirst()) KeyT(EmptyKey);
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'clang::Decl**' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h:377:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'clang::Decl**'
       ::new (&B->getFirst()) KeyT(EmptyKey);
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm/include/llvm/ADT/DenseMap.h: In instantiation of 'void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::moveFromOldBuckets(BucketT*, BucketT*) [with DerivedT = llvm::DenseMap<clang::Decl*, clang::Decl*>; KeyT = clang::Decl*; ValueT = clang::Decl*; KeyInfoT = llvm::DenseMapInfo<clang::Decl*>; BucketT = llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*>]':
/llvm/include/llvm/ADT/DenseMap.h:809:5:   required from 'void llvm::DenseMap<KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with KeyT = clang::Decl*; ValueT = clang::Decl*; KeyInfoT = llvm::DenseMapInfo<clang::Decl*>; BucketT = llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*>]'
/llvm/include/llvm/ADT/DenseMap.h:533:5:   required from 'void llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::grow(unsigned int) [with DerivedT = llvm::DenseMap<clang::Decl*, clang::Decl*>; KeyT = clang::Decl*; ValueT = clang::Decl*; KeyInfoT = llvm::DenseMapInfo<clang::Decl*>; BucketT = llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*>]'
/llvm/include/llvm/ADT/DenseMap.h:577:13:   required from 'BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = clang::Decl*; DerivedT = llvm::DenseMap<clang::Decl*, clang::Decl*>; KeyT = clang::Decl*; ValueT = clang::Decl*; KeyInfoT = llvm::DenseMapInfo<clang::Decl*>; BucketT = llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*>]'
/llvm/include/llvm/ADT/DenseMap.h:543:37:   required from 'BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = clang::Decl* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<clang::Decl*, clang::Decl*>; KeyT = clang::Decl*; ValueT = clang::Decl*; KeyInfoT = llvm::DenseMapInfo<clang::Decl*>; BucketT = llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*>]'
/llvm/include/llvm/ADT/DenseMap.h:322:29:   required from 'llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<clang::Decl*, clang::Decl*>; KeyT = clang::Decl*; ValueT = clang::Decl*; KeyInfoT = llvm::DenseMapInfo<clang::Decl*>; BucketT = llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*>]'
/llvm/include/llvm/ADT/DenseMap.h:326:28:   required from 'ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<clang::Decl*, clang::Decl*>; KeyT = clang::Decl*; ValueT = clang::Decl*; KeyInfoT = llvm::DenseMapInfo<clang::Decl*>; BucketT = llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*>]'
/llvm/tools/clang/include/clang/AST/ASTContext.h:975:18:   required from here
/llvm/include/llvm/ADT/DenseMap.h:406:9: error: no matching function for call to 'operator new(sizetype, clang::Decl**)'
         ::new (&DestBucket->getSecond()) ValueT(std::move(B->getSecond()));
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'clang::Decl**' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h:406:9: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'clang::Decl**'
         ::new (&DestBucket->getSecond()) ValueT(std::move(B->getSecond()));
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = llvm::StringRef; _Args = {llvm::StringRef}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<llvm::StringRef*>; _ForwardIterator = llvm::StringRef*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<llvm::StringRef*>; _ForwardIterator = llvm::StringRef*]'
/usr/include/c++/7/bits/stl_uninitialized.h:289:37:   required from '_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = std::move_iterator<llvm::StringRef*>; _ForwardIterator = llvm::StringRef*; _Tp = llvm::StringRef]'
/usr/include/c++/7/bits/stl_uninitialized.h:311:2:   required from '_ForwardIterator std::__uninitialized_move_if_noexcept_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = llvm::StringRef*; _ForwardIterator = llvm::StringRef*; _Allocator = std::allocator<llvm::StringRef>]'
/usr/include/c++/7/bits/vector.tcc:426:6:   required from 'void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {llvm::StringRef}; _Tp = llvm::StringRef; _Alloc = std::allocator<llvm::StringRef>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<llvm::StringRef*, std::vector<llvm::StringRef> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = llvm::StringRef*]'
/usr/include/c++/7/bits/vector.tcc:105:21:   required from 'void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {llvm::StringRef}; _Tp = llvm::StringRef; _Alloc = std::allocator<llvm::StringRef>]'
/usr/include/c++/7/bits/stl_vector.h:954:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = llvm::StringRef; _Alloc = std::allocator<llvm::StringRef>; std::vector<_Tp, _Alloc>::value_type = llvm::StringRef]'
/llvm/include/llvm/ADT/StringExtras.h:47:32:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = std::unique_ptr<llvm::ErrorInfoBase>; _Args = {std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<std::unique_ptr<llvm::ErrorInfoBase>*>; _ForwardIterator = std::unique_ptr<llvm::ErrorInfoBase>*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<std::unique_ptr<llvm::ErrorInfoBase>*>; _ForwardIterator = std::unique_ptr<llvm::ErrorInfoBase>*]'
/usr/include/c++/7/bits/stl_uninitialized.h:289:37:   required from '_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = std::move_iterator<std::unique_ptr<llvm::ErrorInfoBase>*>; _ForwardIterator = std::unique_ptr<llvm::ErrorInfoBase>*; _Tp = std::unique_ptr<llvm::ErrorInfoBase>]'
/usr/include/c++/7/bits/stl_uninitialized.h:311:2:   required from '_ForwardIterator std::__uninitialized_move_if_noexcept_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::unique_ptr<llvm::ErrorInfoBase>*; _ForwardIterator = std::unique_ptr<llvm::ErrorInfoBase>*; _Allocator = std::allocator<std::unique_ptr<llvm::ErrorInfoBase> >]'
/usr/include/c++/7/bits/vector.tcc:426:6:   required from 'void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >}; _Tp = std::unique_ptr<llvm::ErrorInfoBase>; _Alloc = std::allocator<std::unique_ptr<llvm::ErrorInfoBase> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase>*, std::vector<std::unique_ptr<llvm::ErrorInfoBase> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::unique_ptr<llvm::ErrorInfoBase>*]'
/usr/include/c++/7/bits/vector.tcc:105:21:   required from 'void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >}; _Tp = std::unique_ptr<llvm::ErrorInfoBase>; _Alloc = std::allocator<std::unique_ptr<llvm::ErrorInfoBase> >]'
/usr/include/c++/7/bits/stl_vector.h:954:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::unique_ptr<llvm::ErrorInfoBase>; _Alloc = std::allocator<std::unique_ptr<llvm::ErrorInfoBase> >; std::vector<_Tp, _Alloc>::value_type = std::unique_ptr<llvm::ErrorInfoBase>]'
/llvm/include/llvm/Support/Error.h:387:43:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = llvm::SourceMgr::SrcBuffer; _Args = {llvm::SourceMgr::SrcBuffer}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<llvm::SourceMgr::SrcBuffer*>; _ForwardIterator = llvm::SourceMgr::SrcBuffer*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<llvm::SourceMgr::SrcBuffer*>; _ForwardIterator = llvm::SourceMgr::SrcBuffer*]'
/usr/include/c++/7/bits/stl_uninitialized.h:289:37:   required from '_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = std::move_iterator<llvm::SourceMgr::SrcBuffer*>; _ForwardIterator = llvm::SourceMgr::SrcBuffer*; _Tp = llvm::SourceMgr::SrcBuffer]'
/usr/include/c++/7/bits/stl_uninitialized.h:311:2:   required from '_ForwardIterator std::__uninitialized_move_if_noexcept_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = llvm::SourceMgr::SrcBuffer*; _ForwardIterator = llvm::SourceMgr::SrcBuffer*; _Allocator = std::allocator<llvm::SourceMgr::SrcBuffer>]'
/usr/include/c++/7/bits/vector.tcc:426:6:   required from 'void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {llvm::SourceMgr::SrcBuffer}; _Tp = llvm::SourceMgr::SrcBuffer; _Alloc = std::allocator<llvm::SourceMgr::SrcBuffer>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<llvm::SourceMgr::SrcBuffer*, std::vector<llvm::SourceMgr::SrcBuffer> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = llvm::SourceMgr::SrcBuffer*]'
/usr/include/c++/7/bits/vector.tcc:105:21:   required from 'void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {llvm::SourceMgr::SrcBuffer}; _Tp = llvm::SourceMgr::SrcBuffer; _Alloc = std::allocator<llvm::SourceMgr::SrcBuffer>]'
/usr/include/c++/7/bits/stl_vector.h:954:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = llvm::SourceMgr::SrcBuffer; _Alloc = std::allocator<llvm::SourceMgr::SrcBuffer>; std::vector<_Tp, _Alloc>::value_type = llvm::SourceMgr::SrcBuffer]'
/llvm/include/llvm/Support/SourceMgr.h:156:36:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of '_Dp& std::__uniq_ptr_impl<_Tp, _Dp>::_M_deleter() [with _Tp = llvm::vfs::RedirectingFileSystem::Entry; _Dp = std::default_delete<llvm::vfs::RedirectingFileSystem::Entry>]':
/usr/include/c++/7/bits/unique_ptr.h:342:32:   required from 'std::unique_ptr<_Tp, _Dp>::deleter_type& std::unique_ptr<_Tp, _Dp>::get_deleter() [with _Tp = llvm::vfs::RedirectingFileSystem::Entry; _Dp = std::default_delete<llvm::vfs::RedirectingFileSystem::Entry>; std::unique_ptr<_Tp, _Dp>::deleter_type = std::default_delete<llvm::vfs::RedirectingFileSystem::Entry>]'
/usr/include/c++/7/bits/unique_ptr.h:268:15:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = llvm::vfs::RedirectingFileSystem::Entry; _Dp = std::default_delete<llvm::vfs::RedirectingFileSystem::Entry>]'
/usr/include/c++/7/bits/stl_construct.h:98:7:   required from 'void std::_Destroy(_Tp*) [with _Tp = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>]'
/usr/include/c++/7/bits/stl_construct.h:108:19:   required from 'static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>*; bool <anonymous> = false]'
/usr/include/c++/7/bits/stl_construct.h:137:11:   required from 'void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>*]'
/usr/include/c++/7/bits/stl_construct.h:206:15:   required from 'void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_Tp>&) [with _ForwardIterator = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>*; _Tp = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>]'
/usr/include/c++/7/bits/stl_vector.h:434:22:   required from 'std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>; _Alloc = std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> >]'
/llvm/include/llvm/Support/VirtualFileSystem.h:582:25:   required from here
/usr/include/c++/7/bits/unique_ptr.h:148:51: error: no matching function for call to 'get<1>(std::tuple<llvm::vfs::RedirectingFileSystem::Entry*, std::default_delete<llvm::vfs::RedirectingFileSystem::Entry> >&)'
       _Dp&       _M_deleter() { return std::get<1>(_M_t); }
                                        ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>; _Args = {std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry, std::default_delete<llvm::vfs::RedirectingFileSystem::Entry> >}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>*>; _ForwardIterator = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>*>; _ForwardIterator = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>*]'
/usr/include/c++/7/bits/stl_uninitialized.h:289:37:   required from '_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = std::move_iterator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>*>; _ForwardIterator = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>*; _Tp = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>]'
/usr/include/c++/7/bits/stl_uninitialized.h:311:2:   required from '_ForwardIterator std::__uninitialized_move_if_noexcept_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>*; _ForwardIterator = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>*; _Allocator = std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> >]'
/usr/include/c++/7/bits/vector.tcc:426:6:   required from 'void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry, std::default_delete<llvm::vfs::RedirectingFileSystem::Entry> >}; _Tp = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>; _Alloc = std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>*, std::vector<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>*]'
/usr/include/c++/7/bits/vector.tcc:105:21:   required from 'void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry, std::default_delete<llvm::vfs::RedirectingFileSystem::Entry> >}; _Tp = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>; _Alloc = std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> >]'
/usr/include/c++/7/bits/stl_vector.h:954:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>; _Alloc = std::allocator<std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry> >; std::vector<_Tp, _Alloc>::value_type = std::unique_ptr<llvm::vfs::RedirectingFileSystem::Entry>]'
/llvm/include/llvm/Support/VirtualFileSystem.h:589:44:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:22:0,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/ADT/DenseMap.h: In instantiation of 'const BucketT* llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getInlineBuckets() const [with KeyT = const clang::FileEntry*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 2; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseSetPair<const clang::FileEntry*>]':
/llvm/include/llvm/ADT/DenseMap.h:1147:36:   required from 'const BucketT* llvm::SmallDenseMap<KeyT, ValueT, InlineBuckets, KeyInfoT, BucketT>::getBuckets() const [with KeyT = const clang::FileEntry*; ValueT = llvm::detail::DenseSetEmpty; unsigned int InlineBuckets = 2; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseSetPair<const clang::FileEntry*>]'
/llvm/include/llvm/ADT/DenseMap.h:513:60:   required from 'const BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::getBuckets() const [with DerivedT = llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >; KeyT = const clang::FileEntry*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseSetPair<const clang::FileEntry*>]'
/llvm/include/llvm/ADT/DenseMap.h:606:43:   required from 'bool llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::LookupBucketFor(const LookupKeyT&, const BucketT*&) const [with LookupKeyT = const clang::FileEntry*; DerivedT = llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >; KeyT = const clang::FileEntry*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseSetPair<const clang::FileEntry*>]'
/llvm/include/llvm/ADT/DenseMap.h:657:10:   required from 'bool llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::LookupBucketFor(const LookupKeyT&, BucketT*&) [with LookupKeyT = const clang::FileEntry*; DerivedT = llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >; KeyT = const clang::FileEntry*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseSetPair<const clang::FileEntry*>]'
/llvm/include/llvm/ADT/DenseMap.h:257:24:   required from 'std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >; KeyT = const clang::FileEntry*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<const clang::FileEntry*>; BucketT = llvm::detail::DenseSetPair<const clang::FileEntry*>]'
/llvm/include/llvm/ADT/DenseSet.h:189:39:   required from 'std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = const clang::FileEntry*; MapTy = llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >; ValueInfoT = llvm::DenseMapInfo<const clang::FileEntry*>]'
/llvm/include/llvm/ADT/SetVector.h:142:34:   required from 'bool llvm::SetVector<T, Vector, Set>::insert(const value_type&) [with T = const clang::FileEntry*; Vector = llvm::SmallVector<const clang::FileEntry*, 2>; Set = llvm::SmallDenseSet<const clang::FileEntry*, 2, llvm::DenseMapInfo<const clang::FileEntry*> >; llvm::SetVector<T, Vector, Set>::value_type = const clang::FileEntry*]'
/llvm/tools/clang/include/clang/Basic/Module.h:497:27:   required from here
/llvm/include/llvm/ADT/DenseMap.h:1127:54: error: 'const struct llvm::AlignedCharArrayUnion<llvm::detail::DenseSetPair<const clang::FileEntry*> [2], llvm::SmallDenseMap<const clang::FileEntry*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<const clang::FileEntry*>, llvm::detail::DenseSetPair<const clang::FileEntry*> >::LargeRep, char, char, char, char, char, char, char, char>' has no member named 'buffer'
     return reinterpret_cast<const BucketT *>(storage.buffer);
                                              ~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/map:60:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:32,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_tree.h: In instantiation of 'void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, clang::ast_type_traits::DynTypedNode>&}; _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >*]':
/usr/include/c++/7/bits/stl_tree.h:643:21:   required from 'std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(_Args&& ...) [with _Args = {const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, clang::ast_type_traits::DynTypedNode>&}; _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >*]'
/usr/include/c++/7/bits/stl_tree.h:556:62:   required from 'std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Alloc_node::operator()(_Arg&&) const [with _Arg = const std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode>&; _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >*]'
/usr/include/c++/7/bits/stl_tree.h:666:33:   required from 'std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_clone_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, _NodeGen&) [with _NodeGen = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> > >::_Alloc_node; _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >*; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >*]'
/usr/include/c++/7/bits/stl_tree.h:1818:34:   required from 'std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_copy(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr, _NodeGen&) [with _NodeGen = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> > >::_Alloc_node; _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >*; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >*; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr = std::_Rb_tree_node_base*]'
/usr/include/c++/7/bits/stl_tree.h:875:31:   required from 'std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_copy(const std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&, _NodeGen&) [with _NodeGen = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> > >::_Alloc_node; _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >*]'
/usr/include/c++/7/bits/stl_tree.h:886:16:   required from 'std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_copy(const std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >*]'
/usr/include/c++/7/bits/stl_tree.h:924:23:   required from 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree(const std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&) [with _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >]'
/usr/include/c++/7/bits/stl_map.h:199:7:   required from here
/usr/include/c++/7/bits/stl_tree.h:625:8: error: no matching function for call to 'operator new(sizetype, std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >*&)'
        ::new(__node) _Rb_tree_node<_Val>;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> > >::_Link_type {aka std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >*}' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/map:60:0,
                 from /llvm/tools/clang/include/clang/Basic/Diagnostic.h:32,
                 from /llvm/tools/clang/include/clang/AST/NestedNameSpecifier.h:17,
                 from /llvm/tools/clang/include/clang/AST/Type.h:20,
                 from /llvm/tools/clang/include/clang/AST/DeclarationName.h:16,
                 from /llvm/tools/clang/include/clang/AST/DeclBase.h:17,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:18,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_tree.h:625:8: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> > >::_Link_type {aka std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, clang::ast_type_traits::DynTypedNode> >*}'
        ::new(__node) _Rb_tree_node<_Val>;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = clang::ast_matchers::internal::DynTypedMatcher; _Args = {const clang::ast_matchers::internal::Matcher<clang::Stmt>&}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = llvm::pointee_iterator<const clang::ast_matchers::internal::Matcher<clang::Stmt>* const*, const clang::ast_matchers::internal::Matcher<clang::Stmt> >; _ForwardIterator = clang::ast_matchers::internal::DynTypedMatcher*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = llvm::pointee_iterator<const clang::ast_matchers::internal::Matcher<clang::Stmt>* const*, const clang::ast_matchers::internal::Matcher<clang::Stmt> >; _ForwardIterator = clang::ast_matchers::internal::DynTypedMatcher*]'
/usr/include/c++/7/bits/stl_uninitialized.h:289:37:   required from '_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = llvm::pointee_iterator<const clang::ast_matchers::internal::Matcher<clang::Stmt>* const*, const clang::ast_matchers::internal::Matcher<clang::Stmt> >; _ForwardIterator = clang::ast_matchers::internal::DynTypedMatcher*; _Tp = clang::ast_matchers::internal::DynTypedMatcher]'
/usr/include/c++/7/bits/stl_vector.h:1326:33:   required from 'void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = llvm::pointee_iterator<const clang::ast_matchers::internal::Matcher<clang::Stmt>* const*, const clang::ast_matchers::internal::Matcher<clang::Stmt> >; _Tp = clang::ast_matchers::internal::DynTypedMatcher; _Alloc = std::allocator<clang::ast_matchers::internal::DynTypedMatcher>]'
/usr/include/c++/7/bits/stl_vector.h:1299:23:   required from 'void std::vector<_Tp, _Alloc>::_M_initialize_dispatch(_InputIterator, _InputIterator, std::__false_type) [with _InputIterator = llvm::pointee_iterator<const clang::ast_matchers::internal::Matcher<clang::Stmt>* const*, const clang::ast_matchers::internal::Matcher<clang::Stmt> >; _Tp = clang::ast_matchers::internal::DynTypedMatcher; _Alloc = std::allocator<clang::ast_matchers::internal::DynTypedMatcher>]'
/usr/include/c++/7/bits/stl_vector.h:414:26:   required from 'std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = llvm::pointee_iterator<const clang::ast_matchers::internal::Matcher<clang::Stmt>* const*, const clang::ast_matchers::internal::Matcher<clang::Stmt> >; <template-parameter-2-2> = void; _Tp = clang::ast_matchers::internal::DynTypedMatcher; _Alloc = std::allocator<clang::ast_matchers::internal::DynTypedMatcher>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<clang::ast_matchers::internal::DynTypedMatcher>]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1390:32:   required from 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<T>*>) [with T = clang::Stmt]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1575:7:   required from 'class clang::ast_matchers::internal::VariadicAllOfMatcher<clang::Stmt>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:2499:27:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = clang::ast_matchers::internal::DynTypedMatcher; _Args = {const clang::ast_matchers::internal::Matcher<clang::QualType>&}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = llvm::pointee_iterator<const clang::ast_matchers::internal::Matcher<clang::QualType>* const*, const clang::ast_matchers::internal::Matcher<clang::QualType> >; _ForwardIterator = clang::ast_matchers::internal::DynTypedMatcher*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = llvm::pointee_iterator<const clang::ast_matchers::internal::Matcher<clang::QualType>* const*, const clang::ast_matchers::internal::Matcher<clang::QualType> >; _ForwardIterator = clang::ast_matchers::internal::DynTypedMatcher*]'
/usr/include/c++/7/bits/stl_uninitialized.h:289:37:   required from '_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = llvm::pointee_iterator<const clang::ast_matchers::internal::Matcher<clang::QualType>* const*, const clang::ast_matchers::internal::Matcher<clang::QualType> >; _ForwardIterator = clang::ast_matchers::internal::DynTypedMatcher*; _Tp = clang::ast_matchers::internal::DynTypedMatcher]'
/usr/include/c++/7/bits/stl_vector.h:1326:33:   required from 'void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = llvm::pointee_iterator<const clang::ast_matchers::internal::Matcher<clang::QualType>* const*, const clang::ast_matchers::internal::Matcher<clang::QualType> >; _Tp = clang::ast_matchers::internal::DynTypedMatcher; _Alloc = std::allocator<clang::ast_matchers::internal::DynTypedMatcher>]'
/usr/include/c++/7/bits/stl_vector.h:1299:23:   required from 'void std::vector<_Tp, _Alloc>::_M_initialize_dispatch(_InputIterator, _InputIterator, std::__false_type) [with _InputIterator = llvm::pointee_iterator<const clang::ast_matchers::internal::Matcher<clang::QualType>* const*, const clang::ast_matchers::internal::Matcher<clang::QualType> >; _Tp = clang::ast_matchers::internal::DynTypedMatcher; _Alloc = std::allocator<clang::ast_matchers::internal::DynTypedMatcher>]'
/usr/include/c++/7/bits/stl_vector.h:414:26:   required from 'std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = llvm::pointee_iterator<const clang::ast_matchers::internal::Matcher<clang::QualType>* const*, const clang::ast_matchers::internal::Matcher<clang::QualType> >; <template-parameter-2-2> = void; _Tp = clang::ast_matchers::internal::DynTypedMatcher; _Alloc = std::allocator<clang::ast_matchers::internal::DynTypedMatcher>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<clang::ast_matchers::internal::DynTypedMatcher>]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1390:32:   required from 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<T>*>) [with T = clang::QualType]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1575:7:   required from 'class clang::ast_matchers::internal::VariadicAllOfMatcher<clang::QualType>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:3138:49:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = clang::ast_matchers::internal::DynTypedMatcher; _Args = {const clang::ast_matchers::internal::Matcher<clang::Decl>&}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = llvm::pointee_iterator<const clang::ast_matchers::internal::Matcher<clang::Decl>* const*, const clang::ast_matchers::internal::Matcher<clang::Decl> >; _ForwardIterator = clang::ast_matchers::internal::DynTypedMatcher*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = llvm::pointee_iterator<const clang::ast_matchers::internal::Matcher<clang::Decl>* const*, const clang::ast_matchers::internal::Matcher<clang::Decl> >; _ForwardIterator = clang::ast_matchers::internal::DynTypedMatcher*]'
/usr/include/c++/7/bits/stl_uninitialized.h:289:37:   required from '_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = llvm::pointee_iterator<const clang::ast_matchers::internal::Matcher<clang::Decl>* const*, const clang::ast_matchers::internal::Matcher<clang::Decl> >; _ForwardIterator = clang::ast_matchers::internal::DynTypedMatcher*; _Tp = clang::ast_matchers::internal::DynTypedMatcher]'
/usr/include/c++/7/bits/stl_vector.h:1326:33:   required from 'void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = llvm::pointee_iterator<const clang::ast_matchers::internal::Matcher<clang::Decl>* const*, const clang::ast_matchers::internal::Matcher<clang::Decl> >; _Tp = clang::ast_matchers::internal::DynTypedMatcher; _Alloc = std::allocator<clang::ast_matchers::internal::DynTypedMatcher>]'
/usr/include/c++/7/bits/stl_vector.h:1299:23:   required from 'void std::vector<_Tp, _Alloc>::_M_initialize_dispatch(_InputIterator, _InputIterator, std::__false_type) [with _InputIterator = llvm::pointee_iterator<const clang::ast_matchers::internal::Matcher<clang::Decl>* const*, const clang::ast_matchers::internal::Matcher<clang::Decl> >; _Tp = clang::ast_matchers::internal::DynTypedMatcher; _Alloc = std::allocator<clang::ast_matchers::internal::DynTypedMatcher>]'
/usr/include/c++/7/bits/stl_vector.h:414:26:   required from 'std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = llvm::pointee_iterator<const clang::ast_matchers::internal::Matcher<clang::Decl>* const*, const clang::ast_matchers::internal::Matcher<clang::Decl> >; <template-parameter-2-2> = void; _Tp = clang::ast_matchers::internal::DynTypedMatcher; _Alloc = std::allocator<clang::ast_matchers::internal::DynTypedMatcher>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<clang::ast_matchers::internal::DynTypedMatcher>]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1390:32:   required from 'clang::ast_matchers::internal::BindableMatcher<T> clang::ast_matchers::internal::makeAllOfComposite(llvm::ArrayRef<const clang::ast_matchers::internal::Matcher<T>*>) [with T = clang::Decl]'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1575:7:   required from 'class clang::ast_matchers::internal::VariadicAllOfMatcher<clang::Decl>'
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:5074:77:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/stl_construct.h: In instantiation of 'void std::_Construct(_T1*, _Args&& ...) [with _T1 = llvm::sys::fs::directory_iterator; _Args = {llvm::sys::fs::directory_iterator}]':
/usr/include/c++/7/bits/stl_uninitialized.h:83:18:   required from 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<llvm::sys::fs::directory_iterator*>; _ForwardIterator = llvm::sys::fs::directory_iterator*; bool _TrivialValueTypes = false]'
/usr/include/c++/7/bits/stl_uninitialized.h:134:15:   required from '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<llvm::sys::fs::directory_iterator*>; _ForwardIterator = llvm::sys::fs::directory_iterator*]'
/usr/include/c++/7/bits/stl_uninitialized.h:289:37:   required from '_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = std::move_iterator<llvm::sys::fs::directory_iterator*>; _ForwardIterator = llvm::sys::fs::directory_iterator*; _Tp = llvm::sys::fs::directory_iterator]'
/usr/include/c++/7/bits/stl_uninitialized.h:311:2:   required from '_ForwardIterator std::__uninitialized_move_if_noexcept_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = llvm::sys::fs::directory_iterator*; _ForwardIterator = llvm::sys::fs::directory_iterator*; _Allocator = std::allocator<llvm::sys::fs::directory_iterator>]'
/usr/include/c++/7/bits/vector.tcc:426:6:   required from 'void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {llvm::sys::fs::directory_iterator}; _Tp = llvm::sys::fs::directory_iterator; _Alloc = std::allocator<llvm::sys::fs::directory_iterator>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<llvm::sys::fs::directory_iterator*, std::vector<llvm::sys::fs::directory_iterator> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = llvm::sys::fs::directory_iterator*]'
/usr/include/c++/7/bits/vector.tcc:105:21:   required from 'void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {llvm::sys::fs::directory_iterator}; _Tp = llvm::sys::fs::directory_iterator; _Alloc = std::allocator<llvm::sys::fs::directory_iterator>]'
/usr/include/c++/7/bits/stl_vector.h:954:21:   required from 'void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = llvm::sys::fs::directory_iterator; _Alloc = std::allocator<llvm::sys::fs::directory_iterator>; std::vector<_Tp, _Alloc>::value_type = llvm::sys::fs::directory_iterator]'
/usr/include/c++/7/bits/stl_stack.h:231:9:   required from 'void std::stack<_Tp, _Sequence>::push(std::stack<_Tp, _Sequence>::value_type&&) [with _Tp = llvm::sys::fs::directory_iterator; _Sequence = std::vector<llvm::sys::fs::directory_iterator>; std::stack<_Tp, _Sequence>::value_type = llvm::sys::fs::directory_iterator]'
/llvm/include/llvm/Support/FileSystem.h:1268:59:   required from here
/usr/include/c++/7/bits/stl_construct.h:75:7: error: no matching function for call to 'operator new(sizetype, void*)'
<built-in>: note: candidate: void* operator new(long unsigned int)
<built-in>: note:   candidate expects 1 argument, 2 provided
In file included from /llvm/tools/clang/include/clang/AST/AST.h:17:0,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note: candidate: void* operator new(size_t, const clang::ASTContext&, size_t)
 inline void *operator new(size_t Bytes, const clang::ASTContext &C,
              ^~~~~~~~
/llvm/tools/clang/include/clang/AST/ASTContext.h:3014:14: note:   no known conversion for argument 2 from 'void*' to 'const clang::ASTContext&'
In file included from /llvm/include/llvm/ADT/StringMap.h:19:0,
                 from /llvm/include/llvm/Support/Host.h:16,
                 from /llvm/include/llvm/ADT/Hashing.h:48,
                 from /llvm/include/llvm/ADT/ArrayRef.h:12,
                 from /llvm/include/llvm/ADT/APFloat.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:18,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/llvm/include/llvm/Support/Allocator.h:496:7: note: candidate: template<class AllocatorT, long unsigned int SlabSize, long unsigned int SizeThreshold> void* operator new(size_t, llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>&)
 void *operator new(size_t Size,
       ^~~~~~~~
/llvm/include/llvm/Support/Allocator.h:496:7: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/bits/stl_tempbuf.h:60:0,
                 from /usr/include/c++/7/bits/stl_algo.h:62,
                 from /usr/include/c++/7/algorithm:62,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/stl_construct.h:75:7: note:   mismatched types 'llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold>' and 'void*'
     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'std::__uniq_ptr_impl<_Tp, _Dp>::pointer& std::__uniq_ptr_impl<_Tp, _Dp>::_M_ptr() [with _Tp = llvm::Regex; _Dp = std::default_delete<llvm::Regex>; std::__uniq_ptr_impl<_Tp, _Dp>::pointer = llvm::Regex*]':
/usr/include/c++/7/bits/unique_ptr.h:266:8:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = llvm::Regex; _Dp = std::default_delete<llvm::Regex>]'
/usr/include/c++/7/bits/stl_pair.h:198:12:   required from 'void std::_Destroy(_Tp*) [with _Tp = std::pair<std::unique_ptr<llvm::Regex>, unsigned int>]'
/usr/include/c++/7/bits/stl_construct.h:108:19:   required from 'static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::pair<std::unique_ptr<llvm::Regex>, unsigned int>*; bool <anonymous> = false]'
/usr/include/c++/7/bits/stl_construct.h:137:11:   required from 'void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::pair<std::unique_ptr<llvm::Regex>, unsigned int>*]'
/usr/include/c++/7/bits/stl_construct.h:206:15:   required from 'void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_Tp>&) [with _ForwardIterator = std::pair<std::unique_ptr<llvm::Regex>, unsigned int>*; _Tp = std::pair<std::unique_ptr<llvm::Regex>, unsigned int>]'
/usr/include/c++/7/bits/stl_vector.h:434:22:   required from 'std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::pair<std::unique_ptr<llvm::Regex>, unsigned int>; _Alloc = std::allocator<std::pair<std::unique_ptr<llvm::Regex>, unsigned int> >]'
/llvm/include/llvm/Support/SpecialCaseList.h:117:9:   required from 'void std::default_delete<_Tp>::operator()(_Tp*) const [with _Tp = llvm::SpecialCaseList::Matcher]'
/usr/include/c++/7/bits/unique_ptr.h:268:17:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = llvm::SpecialCaseList::Matcher; _Dp = std::default_delete<llvm::SpecialCaseList::Matcher>]'
/llvm/include/llvm/Support/SpecialCaseList.h:133:70:   required from here
/usr/include/c++/7/bits/unique_ptr.h:146:47: error: no matching function for call to 'get<0>(std::tuple<llvm::Regex*, std::default_delete<llvm::Regex> >&)'
       pointer&   _M_ptr() { return std::get<0>(_M_t); }
                                    ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/memory:80:0,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/bits/unique_ptr.h: In instantiation of '_Dp& std::__uniq_ptr_impl<_Tp, _Dp>::_M_deleter() [with _Tp = llvm::Regex; _Dp = std::default_delete<llvm::Regex>]':
/usr/include/c++/7/bits/unique_ptr.h:342:32:   required from 'std::unique_ptr<_Tp, _Dp>::deleter_type& std::unique_ptr<_Tp, _Dp>::get_deleter() [with _Tp = llvm::Regex; _Dp = std::default_delete<llvm::Regex>; std::unique_ptr<_Tp, _Dp>::deleter_type = std::default_delete<llvm::Regex>]'
/usr/include/c++/7/bits/unique_ptr.h:268:15:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = llvm::Regex; _Dp = std::default_delete<llvm::Regex>]'
/usr/include/c++/7/bits/stl_pair.h:198:12:   required from 'void std::_Destroy(_Tp*) [with _Tp = std::pair<std::unique_ptr<llvm::Regex>, unsigned int>]'
/usr/include/c++/7/bits/stl_construct.h:108:19:   required from 'static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::pair<std::unique_ptr<llvm::Regex>, unsigned int>*; bool <anonymous> = false]'
/usr/include/c++/7/bits/stl_construct.h:137:11:   required from 'void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::pair<std::unique_ptr<llvm::Regex>, unsigned int>*]'
/usr/include/c++/7/bits/stl_construct.h:206:15:   required from 'void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_Tp>&) [with _ForwardIterator = std::pair<std::unique_ptr<llvm::Regex>, unsigned int>*; _Tp = std::pair<std::unique_ptr<llvm::Regex>, unsigned int>]'
/usr/include/c++/7/bits/stl_vector.h:434:22:   required from 'std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::pair<std::unique_ptr<llvm::Regex>, unsigned int>; _Alloc = std::allocator<std::pair<std::unique_ptr<llvm::Regex>, unsigned int> >]'
/llvm/include/llvm/Support/SpecialCaseList.h:117:9:   required from 'void std::default_delete<_Tp>::operator()(_Tp*) const [with _Tp = llvm::SpecialCaseList::Matcher]'
/usr/include/c++/7/bits/unique_ptr.h:268:17:   required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = llvm::SpecialCaseList::Matcher; _Dp = std::default_delete<llvm::SpecialCaseList::Matcher>]'
/llvm/include/llvm/Support/SpecialCaseList.h:133:70:   required from here
/usr/include/c++/7/bits/unique_ptr.h:148:51: error: no matching function for call to 'get<1>(std::tuple<llvm::Regex*, std::default_delete<llvm::Regex> >&)'
       _Dp&       _M_deleter() { return std::get<1>(_M_t); }
                                        ~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/7/algorithm:60:0,
                 from /llvm/include/llvm/Support/MathExtras.h:18,
                 from /llvm/include/llvm/ADT/APInt.h:19,
                 from /llvm/include/llvm/ADT/APSInt.h:17,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:19,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/utility:225:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:230:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr int&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^~~
/usr/include/c++/7/utility:230:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/utility:235:5: note: candidate: template<<declaration error>, class _Tp1, class _Tp2> constexpr const int& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^~~
/usr/include/c++/7/utility:235:5: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/7/tuple:39:0,
                 from /usr/include/c++/7/bits/unique_ptr.h:37,
                 from /usr/include/c++/7/memory:80,
                 from /llvm/include/llvm/ADT/SmallVector.h:30,
                 from /llvm/include/llvm/ADT/SmallString.h:16,
                 from /llvm/tools/clang/include/clang/Basic/FixedPoint.h:20,
                 from /llvm/tools/clang/include/clang/AST/APValue.h:16,
                 from /llvm/tools/clang/include/clang/AST/Decl.h:16,
                 from /llvm/tools/clang/include/clang/AST/ASTTypeTraits.h:19,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:18,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from ASTToCoords.h:4,
                 from ASTToCoords.cpp:1:
/usr/include/c++/7/array:307:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp& std::get(int&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:307:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:316:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr _Tp&& std::get(int&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^~~
/usr/include/c++/7/array:316:5: note:   template argument deduction/substitution failed:
/usr/include/c++/7/array:324:5: note: candidate: template<<declaration error>, class _Tp, <declaration error> > constexpr const _Tp& std::get(const int&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^~~
/usr/include/c++/7/array:324:5: note:   template argument deduction/substitution failed:
In file included from Interpretation.h:7:0,
                 from Interpretation.cpp:13:
ASTToCoords.h:1:7: error: stray '#' in program
 VecVec#ifndef ASTTOCOORDS_H
       ^
ASTToCoords.h:73:2: error: #endif without #if
 #endif
  ^~~~~
In file included from Interpretation.h:6:0,
                 from Interpretation.cpp:13:
Coords.h:154:50: error: 'Scalar' has not been declared
   Vector_Lit(const clang::CXXConstructExpr *ast, Scalar a);
                                                  ^~~~~~
In file included from Interpretation.h:7:0,
                 from Interpretation.cpp:13:
ASTToCoords.h:1:1: error: 'VecVec' does not name a type
 VecVec#ifndef ASTTOCOORDS_H
 ^~~~~~
In file included from Oracle.h:7:0,
                 from Interpretation.h:8,
                 from Interpretation.cpp:13:
Domain.h:50:48: error: 'VecLitExpr' in namespace 'coords' does not name a type
  VecExpr* mkVecLitExpr(Space& s, const coords::VecLitExpr* e);
                                                ^~~~~~~~~~
Domain.h:51:48: error: 'VecLitExpr' in namespace 'coords' does not name a type
  VecExpr* mkVecVarExpr(Space& s, const coords::VecLitExpr* e);  // KEVIN
                                                ^~~~~~~~~~
Domain.h:101:2: error: 'ToCoordscoords' does not name a type; did you mean 'ToCoords'?
  ToCoordscoords::Coords *c) : coords_(c) {}
  ^~~~~~~~~~~~~~
  ToCoords
Domain.h:105:2: error: expected ';' after class definition
 }
  ^
  ;
Domain.h:111:32: error: expected class-name before '{' token
 class VecIdent : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecIdent::VecIdent(domain::Space&, const coords::VecIdent*)':
Domain.h:113:54: error: type 'domain::ToCoords' is not a direct base of 'domain::VecIdent'
  VecIdent(Space& space, const coords::VecIdent* c) : ToCoords(c), space_(&space) {}
                                                      ^~~~~~~~
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:21: error: expected '<' before '<:' token
   return static_cast<:VecIdent*>getBaseCoords();
                     ^~
Domain.h:116:21: error: expected type-specifier before '<:' token
Domain.h:116:21: error: expected '>' before '<:' token
Domain.h:116:21: error: expected '(' before '<:' token
Domain.h:116:23: error: capture of non-variable 'domain::VecIdent::VecIdent' 
   return static_cast<:VecIdent*>getBaseCoords();
                       ^~~~~~~~
Domain.h:111:32: note: 'class domain::VecIdent domain::VecIdent::VecIdent' declared here
 class VecIdent : public ToCode {
                                ^
Domain.h:116:31: error: expected ',' before '*' token
   return static_cast<:VecIdent*>getBaseCoords();
                               ^
Domain.h:116:31: error: expected identifier before '*' token
Domain.h:116:48: error: expected ']' before ';' token
   return static_cast<:VecIdent*>getBaseCoords();
                                                ^
Domain.h: In lambda function:
Domain.h:116:48: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:48: error: expected ')' before ';' token
Domain.h: At global scope:
Domain.h:125:32: error: expected class-name before '{' token
 class VecExpr  : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)':
Domain.h:127:57: error: type 'domain::ToCoords' is not a direct base of 'domain::VecExpr'
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
                                                         ^~~~~~~~
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:21: error: expected '<' before '<:' token
   return static_cast<:VecExpr*>getBaseCoords();
                     ^~
Domain.h:129:21: error: expected type-specifier before '<:' token
Domain.h:129:21: error: expected '>' before '<:' token
Domain.h:129:21: error: expected '(' before '<:' token
Domain.h:129:23: error: capture of non-variable 'domain::VecExpr::VecExpr' 
   return static_cast<:VecExpr*>getBaseCoords();
                       ^~~~~~~
Domain.h:125:32: note: 'class domain::VecExpr domain::VecExpr::VecExpr' declared here
 class VecExpr  : public ToCode {
                                ^
Domain.h:129:30: error: expected ',' before '*' token
   return static_cast<:VecExpr*>getBaseCoords();
                              ^
Domain.h:129:30: error: expected identifier before '*' token
Domain.h:129:47: error: expected ']' before ';' token
   return static_cast<:VecExpr*>getBaseCoords();
                                               ^
Domain.h: In lambda function:
Domain.h:129:47: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:47: error: expected ')' before ';' token
Domain.h: In member function 'virtual std::__cxx11::string domain::VecExpr::toString() const':
Domain.h:133:7: error: 'ast_' was not declared in this scope
   if (ast_ != NULL) {
       ^~~~
Domain.h:133:7: note: suggested alternative: 'asin'
   if (ast_ != NULL) {
       ^~~~
       asin
Domain.h: At global scope:
Domain.h:147:37: error: expected ';' after class definition
 class VecLitExpr : public VecExpr {}
                                     ^
                                     ;
Domain.h: In member function 'virtual std::__cxx11::string domain::VecVarExpr::toString() const':
Domain.h:154:16: error: 'ast_' was not declared in this scope
   return "(" + ast_->toString() + " )";
                ^~~~
Domain.h:154:16: note: suggested alternative: 'asin'
   return "(" + ast_->toString() + " )";
                ^~~~
                asin
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVarExpr::getCoords()':
Domain.h:157:34: error: expected '(' before 'coords_'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
Domain.h:157:34: error: 'coords_' was not declared in this scope
Domain.h:157:34: note: suggested alternative: 'Coords'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
                                  Coords
Domain.h:157:41: error: expected ')' before ';' token
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                         ^
Domain.h: At global scope:
Domain.h:166:33: error: 'VecAddAddExpr' in namespace 'coords' does not name a type
         Space& s, const coords::VecAddAddExpr* c, domain::VecExpr *mem, domain::VecExpr *arg) :
                                 ^~~~~~~~~~~~~
Domain.h: In constructor 'domain::VecVecAddExpr::VecVecAddExpr(domain::Space&, const int*, domain::VecExpr*, domain::VecExpr*)':
Domain.h:167:46: error: no matching function for call to 'domain::VecExpr::VecExpr(domain::Space&, const int*&)'
    domain::VecExpr(s, c), arg_(arg), mem_(mem) {
                                              ^
Domain.h:127:5: note: candidate: domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
     ^~~~~~~
Domain.h:127:5: note:   no known conversion for argument 2 from 'const int*' to 'const coords::VecExpr*'
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(const domain::VecExpr&)
 class VecExpr  : public ToCode {
       ^~~~~~~
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(domain::VecExpr&&)
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVecAddExpr::getCoords()':
Domain.h:172:37: error: expected '(' before 'coords_'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
Domain.h:172:37: error: 'coords_' was not declared in this scope
Domain.h:172:37: note: suggested alternative: 'Coords'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
                                     Coords
Domain.h:172:44: error: expected ')' before ';' token
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                            ^
Domain.h: At global scope:
Domain.h:188:32: error: expected class-name before '{' token
 class Vector : public ToCode   {
                                ^
Domain.h:190:55: error: 'VecCtorType' has not been declared
  Vector(const Space& s, const coords::Vector* coords, VecCtorType tag) :
                                                       ^~~~~~~~~~~
Domain.h:207:2: error: 'VecCtorType' does not name a type; did you mean 'Vector'?
  VecCtorType tag_;
  ^~~~~~~~~~~
  Vector
Domain.h: In constructor 'domain::Vector::Vector(const domain::Space&, const coords::Vector*, int)':
Domain.h:191:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector'
   ToCoords(c), space_(&s), tag_(tag) {
   ^~~~~~~~
Domain.h:191:12: error: 'c' was not declared in this scope
   ToCoords(c), space_(&s), tag_(tag) {
            ^
Domain.h:191:28: error: class 'domain::Vector' does not have any field named 'tag_'
   ToCoords(c), space_(&s), tag_(tag) {
                            ^~~~
Domain.h: In member function 'bool domain::Vector::isLit()':
Domain.h:193:25: error: 'tag_' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
Domain.h:193:25: note: suggested alternative: 'tanl'
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
                         tanl
Domain.h:193:33: error: 'VEC_LIT' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                                 ^~~~~~~
Domain.h: In member function 'bool domain::Vector::isExpr()':
Domain.h:194:26: error: 'tag_' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
Domain.h:194:26: note: suggested alternative: 'tanl'
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
                          tanl
Domain.h:194:34: error: 'VEC_EXPR' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                                  ^~~~~~~~
Domain.h: In member function 'bool domain::Vector::isVar()':
Domain.h:195:25: error: 'tag_' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
Domain.h:195:25: note: suggested alternative: 'tanl'
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
                         tanl
Domain.h:195:33: error: 'VEC_VAR' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                                 ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector::getCoords() const':
Domain.h:200:30: error: expected '(' before 'coords_'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
Domain.h:200:30: error: 'coords_' was not declared in this scope
Domain.h:200:30: note: suggested alternative: 'ToCoords'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
                              ToCoords
Domain.h:200:37: error: expected ')' before ';' token
   return static_cast<Vector*>coords_;
                                     ^
Domain.h: In constructor 'domain::Vector_Lit::Vector_Lit(const domain::Space&, const coords::Vector*)':
Domain.h:215:16: error: 'VEC_LIT' was not declared in this scope
   Vector(s, c, VEC_LIT) {
                ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Lit::getCoords() const':
Domain.h:218:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
Domain.h:218:34: error: 'coords_' was not declared in this scope
Domain.h:218:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:218:41: error: expected ')' before ';' token
   return static_cast<Vector_Lit*>coords_;
                                         ^
Domain.h: In constructor 'domain::Vector_Expr::Vector_Expr(const domain::Space&, const coords::Vector*, domain::VecExpr*)':
Domain.h:234:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Expr'
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
   ^~~~~~~~
Domain.h:234:32: error: expected primary-expression before ',' token
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                ^
Domain.h:234:34: error: 'VEC_EXPR' was not declared in this scope
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                  ^~~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Expr::getCoords() const':
Domain.h:238:35: error: expected '(' before 'coords_'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
Domain.h:238:35: error: 'coords_' was not declared in this scope
Domain.h:238:35: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
                                   ToCoords
Domain.h:238:42: error: expected ')' before ';' token
   return static_cast<Vector_Expr*>coords_;
                                          ^
Domain.h: At global scope:
Domain.h:248:36: error: expected ';' after class definition
 class Vector_Var : public Vector {}
                                    ^
                                    ;
Domain.h:255:35: error: expected class-name before '{' token
 class Vector_Def : public ToCode  {
                                   ^
Domain.h: In constructor 'domain::Vector_Def::Vector_Def(const coords::Vector_Def*, const domain::VecIdent*, const domain::VecExpr*)':
Domain.h:258:4: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Def'
    ToCoords(c), identifier_(identifier), expr_(expr) {}
    ^~~~~~~~
Domain.h: In member function 'const coords::Vector_Def* domain::Vector_Def::getCoords() const':
Domain.h:263:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
Domain.h:263:34: error: 'coords_' was not declared in this scope
Domain.h:263:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:263:41: error: expected ')' before ';' token
   return static_cast<Vector_Def*>coords_;
                                         ^
In file included from Interpretation.h:10:0,
                 from Interpretation.cpp:13:
CoordsToDomain.h: At global scope:
CoordsToDomain.h:42:29: error: 'coords::VecLitExpr' has not been declared
  void putVecLitExpr(coords::VecLitExpr n, domain::VecLitExpr &v);
                             ^~~~~~~~~~
CoordsToDomain.h:43:22: error: expected ';' at end of member declaration
  domain::VecLitExpr *getLitInterp(coords::VecLitExpr c) const;
                      ^~~~~~~~~~~~
CoordsToDomain.h:43:54: error: expected ')' before 'c'
  domain::VecLitExpr *getLitInterp(coords::VecLitExpr c) const;
                                                      ^
CoordsToDomain.h:44:10: error: 'VecLitExpr' in namespace 'coords' does not name a type
  coords::VecLitExpr *getLitInterp(domain::VecLitExpr d) const;
          ^~~~~~~~~~
CoordsToDomain.h:62:51: error: expected ',' or '...' before 'const'
  coords::Vector *getVector(domain::Vector_Expr* d const);
                                                   ^~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Interpretation.h:5,
                 from Interpretation.cpp:13:
/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of 'struct std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher>':
/usr/include/c++/7/type_traits:143:12:   required from 'struct std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> >'
/usr/include/c++/7/type_traits:154:31:   required from 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecIdent, domain::VecIdent*, coords::CoordsHasher>'
CoordsToDomain.h:85:81:   required from here
/usr/include/c++/7/bits/hashtable_policy.h:87:34: error: no match for call to '(const coords::CoordsHasher) (const coords::VecIdent&)'
  noexcept(declval<const _Hash&>()(declval<const _Key&>()))>
           ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/ios:39,
                 from /usr/include/c++/7/ostream:38,
                 from /usr/include/c++/7/iostream:39,
                 from Interpretation.h:4,
                 from Interpretation.cpp:13:
/usr/include/c++/7/type_traits: In instantiation of 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >':
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecIdent, domain::VecIdent*, coords::CoordsHasher>'
CoordsToDomain.h:85:81:   required from here
/usr/include/c++/7/type_traits:154:31: error: 'value' is not a member of 'std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> >'
     : public __bool_constant<!bool(_Pp::value)>
                               ^~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Interpretation.h:5,
                 from Interpretation.cpp:13:
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<coords::VecIdent, domain::VecIdent*, coords::CoordsHasher>':
CoordsToDomain.h:85:81:   required from here
/usr/include/c++/7/bits/unordered_map.h:103:66: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
                                                                  ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:110:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_type key_type;
                                             ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:111:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::value_type value_type;
                                               ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:112:48: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:113:43: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::hasher hasher;
                                           ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:114:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_equal key_equal;
                                              ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:115:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::allocator_type allocator_type;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:120:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::pointer  pointer;
                                             ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:121:50: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_pointer const_pointer;
                                                  ^~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:122:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::reference  reference;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:123:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_reference const_reference;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:124:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::iterator  iterator;
                                              ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:125:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_iterator const_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:126:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::local_iterator local_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:127:57: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_local_iterator const_local_iterator;
                                                         ^~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:128:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::size_type  size_type;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:129:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::difference_type difference_type;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:288:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       operator=(initializer_list<value_type> __l)
       ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:386:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  emplace(_Args&&... __args)
  ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:578:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:584:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(value_type&& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:591:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  insert(_Pair&& __x)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:657:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:953:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x)
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:957:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x) const
       ^~~~~~~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Interpretation.h:5,
                 from Interpretation.cpp:13:
/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of 'struct std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher>':
/usr/include/c++/7/type_traits:143:12:   required from 'struct std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> >'
/usr/include/c++/7/type_traits:154:31:   required from 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>'
CoordsToDomain.h:86:79:   required from here
/usr/include/c++/7/bits/hashtable_policy.h:87:34: error: no match for call to '(const coords::CoordsHasher) (const coords::VecExpr&)'
  noexcept(declval<const _Hash&>()(declval<const _Key&>()))>
           ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/ios:39,
                 from /usr/include/c++/7/ostream:38,
                 from /usr/include/c++/7/iostream:39,
                 from Interpretation.h:4,
                 from Interpretation.cpp:13:
/usr/include/c++/7/type_traits: In instantiation of 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >':
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>'
CoordsToDomain.h:86:79:   required from here
/usr/include/c++/7/type_traits:154:31: error: 'value' is not a member of 'std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> >'
     : public __bool_constant<!bool(_Pp::value)>
                               ^~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Interpretation.h:5,
                 from Interpretation.cpp:13:
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>':
CoordsToDomain.h:86:79:   required from here
/usr/include/c++/7/bits/unordered_map.h:103:66: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
                                                                  ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:110:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_type key_type;
                                             ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:111:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::value_type value_type;
                                               ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:112:48: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:113:43: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::hasher hasher;
                                           ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:114:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_equal key_equal;
                                              ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:115:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::allocator_type allocator_type;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:120:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::pointer  pointer;
                                             ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:121:50: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_pointer const_pointer;
                                                  ^~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:122:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::reference  reference;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:123:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_reference const_reference;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:124:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::iterator  iterator;
                                              ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:125:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_iterator const_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:126:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::local_iterator local_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:127:57: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_local_iterator const_local_iterator;
                                                         ^~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:128:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::size_type  size_type;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:129:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::difference_type difference_type;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:288:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       operator=(initializer_list<value_type> __l)
       ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:386:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
  emplace(_Args&&... __args)
  ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:578:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       insert(const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:584:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       insert(value_type&& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:591:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
  insert(_Pair&& __x)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:657:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       insert(initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:953:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       equal_range(const key_type& __x)
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:957:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       equal_range(const key_type& __x) const
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<coords::VecIdent, domain::Vector*, coords::CoordsHasher>':
CoordsToDomain.h:87:79:   required from here
/usr/include/c++/7/bits/unordered_map.h:103:66: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
                                                                  ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:110:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_type key_type;
                                             ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:111:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::value_type value_type;
                                               ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:112:48: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:113:43: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::hasher hasher;
                                           ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:114:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_equal key_equal;
                                              ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:115:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::allocator_type allocator_type;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:120:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::pointer  pointer;
                                             ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:121:50: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_pointer const_pointer;
                                                  ^~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:122:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::reference  reference;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:123:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_reference const_reference;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:124:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::iterator  iterator;
                                              ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:125:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_iterator const_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:126:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::local_iterator local_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:127:57: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_local_iterator const_local_iterator;
                                                         ^~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:128:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::size_type  size_type;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:129:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::difference_type difference_type;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:288:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       operator=(initializer_list<value_type> __l)
       ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:386:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  emplace(_Args&&... __args)
  ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:578:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:584:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(value_type&& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:591:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  insert(_Pair&& __x)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:657:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:953:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x)
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:957:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x) const
       ^~~~~~~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Interpretation.h:5,
                 from Interpretation.cpp:13:
/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of 'struct std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher>':
/usr/include/c++/7/type_traits:143:12:   required from 'struct std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> >'
/usr/include/c++/7/type_traits:154:31:   required from 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::Vector_Def, domain::Vector_Def*, coords::CoordsHasher>'
CoordsToDomain.h:88:85:   required from here
/usr/include/c++/7/bits/hashtable_policy.h:87:34: error: no match for call to '(const coords::CoordsHasher) (const coords::Vector_Def&)'
  noexcept(declval<const _Hash&>()(declval<const _Key&>()))>
           ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/ios:39,
                 from /usr/include/c++/7/ostream:38,
                 from /usr/include/c++/7/iostream:39,
                 from Interpretation.h:4,
                 from Interpretation.cpp:13:
/usr/include/c++/7/type_traits: In instantiation of 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >':
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::Vector_Def, domain::Vector_Def*, coords::CoordsHasher>'
CoordsToDomain.h:88:85:   required from here
/usr/include/c++/7/type_traits:154:31: error: 'value' is not a member of 'std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> >'
     : public __bool_constant<!bool(_Pp::value)>
                               ^~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Interpretation.h:5,
                 from Interpretation.cpp:13:
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<coords::Vector_Def, domain::Vector_Def*, coords::CoordsHasher>':
CoordsToDomain.h:88:85:   required from here
/usr/include/c++/7/bits/unordered_map.h:103:66: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
                                                                  ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:110:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_type key_type;
                                             ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:111:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::value_type value_type;
                                               ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:112:48: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:113:43: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::hasher hasher;
                                           ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:114:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_equal key_equal;
                                              ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:115:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::allocator_type allocator_type;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:120:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::pointer  pointer;
                                             ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:121:50: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_pointer const_pointer;
                                                  ^~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:122:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::reference  reference;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:123:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_reference const_reference;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:124:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::iterator  iterator;
                                              ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:125:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_iterator const_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:126:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::local_iterator local_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:127:57: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_local_iterator const_local_iterator;
                                                         ^~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:128:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::size_type  size_type;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:129:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::difference_type difference_type;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:288:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       operator=(initializer_list<value_type> __l)
       ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:386:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
  emplace(_Args&&... __args)
  ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:578:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       insert(const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:584:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       insert(value_type&& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:591:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
  insert(_Pair&& __x)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:657:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       insert(initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:953:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       equal_range(const key_type& __x)
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:957:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       equal_range(const key_type& __x) const
       ^~~~~~~~~~~
In file included from Interpretation.cpp:13:0:
Interpretation.h:49:5: error: 'ast2coords' does not name a type
     ast2coords::ASTToCoords *ast2coords_;
     ^~~~~~~~~~
Interpretation.h: In member function 'domain::VecExpr* interp::Interpretation::getVecExpr(ast::VecExpr*)':
Interpretation.h:37:64: error: no matching function for call to 'coords::VecExpr::VecExpr(ast::VecExpr*&)'
         const coords::VecExpr *coords = new coords::VecExpr(ast);
                                                                ^
In file included from Interpretation.h:6:0,
                 from Interpretation.cpp:13:
Coords.h:100:3: note: candidate: coords::VecExpr::VecExpr(clang::Expr)
   VecExpr(const clang::Expr v);
   ^~~~~~~
Coords.h:100:3: note:   no known conversion for argument 1 from 'ast::VecExpr* {aka const clang::Expr*}' to 'clang::Expr'
Coords.h:98:7: note: candidate: constexpr coords::VecExpr::VecExpr(const coords::VecExpr&)
 class VecExpr : public Coords {
       ^~~~~~~
Coords.h:98:7: note:   no known conversion for argument 1 from 'ast::VecExpr* {aka const clang::Expr*}' to 'const coords::VecExpr&'
Coords.h:98:7: note: candidate: constexpr coords::VecExpr::VecExpr(coords::VecExpr&&)
Coords.h:98:7: note:   no known conversion for argument 1 from 'ast::VecExpr* {aka const clang::Expr*}' to 'coords::VecExpr&&'
In file included from Interpretation.cpp:13:0:
Interpretation.h:38:62: error: invalid conversion from 'const coords::VecExpr*' to 'coords::VecExpr*' [-fpermissive]
         domain::VecExpr* dom = coords2dom_->getVecExpr(coords);
                                                              ^
In file included from Interpretation.h:10:0,
                 from Interpretation.cpp:13:
CoordsToDomain.h:39:19: note:   initializing argument 1 of 'domain::VecExpr* coords2domain::CoordsToDomain::getVecExpr(coords::VecExpr*)'
  domain::VecExpr *getVecExpr(coords::VecExpr* c);
                   ^~~~~~~~~~
Interpretation.cpp: In constructor 'interp::Interpretation::Interpretation()':
Interpretation.cpp:21:5: error: 'ast2coords_' was not declared in this scope
     ast2coords_ = new ast2coords::ASTToCoords();
     ^~~~~~~~~~~
Interpretation.cpp:21:5: note: suggested alternative: 'getCoords'
     ast2coords_ = new ast2coords::ASTToCoords();
     ^~~~~~~~~~~
     getCoords
Interpretation.cpp:21:23: error: 'ast2coords' does not name a type
     ast2coords_ = new ast2coords::ASTToCoords();
                       ^~~~~~~~~~
Interpretation.cpp: In member function 'void interp::Interpretation::mkVecIdent(ast::VecIdent*)':
Interpretation.cpp:35:38: error: 'ast2coords_' was not declared in this scope
     const coords::VecIdent *coords = ast2coords_->mkVecIdent(ast);
                                      ^~~~~~~~~~~
Interpretation.cpp:35:38: note: suggested alternative: 'getCoords'
     const coords::VecIdent *coords = ast2coords_->mkVecIdent(ast);
                                      ^~~~~~~~~~~
                                      getCoords
Interpretation.cpp:37:41: error: invalid conversion from 'const coords::VecIdent*' to 'coords::VecIdent*' [-fpermissive]
     coords2dom_->putVecIdent(coords, dom);
                                         ^
In file included from Interpretation.h:10:0,
                 from Interpretation.cpp:13:
CoordsToDomain.h:33:7: note:   initializing argument 1 of 'void coords2domain::CoordsToDomain::putVecIdent(coords::VecIdent*, domain::VecIdent*)'
  void putVecIdent(coords::VecIdent *key, domain::VecIdent *i);
       ^~~~~~~~~~~
Interpretation.cpp: In member function 'void interp::Interpretation::mkVecVarExpr(ast::VecVarExpr*, clang::ASTContext*)':
Interpretation.cpp:53:38: error: 'ast2coords_' was not declared in this scope
     coords::VecVarExpr *var_coords = ast2coords_->mkVecVarExpr(ast);
                                      ^~~~~~~~~~~
Interpretation.cpp:53:38: note: suggested alternative: 'getCoords'
     coords::VecVarExpr *var_coords = ast2coords_->mkVecVarExpr(ast);
                                      ^~~~~~~~~~~
                                      getCoords
Interpretation.cpp:54:37: error: 'class oracle::Oracle' has no member named 'getSpaceForVecVarExpr'; did you mean 'getSpaceForVecVarExp'?
     domain::Space& space = oracle_->getSpaceForVecVarExpr(ast);
                                     ^~~~~~~~~~~~~~~~~~~~~
                                     getSpaceForVecVarExp
Interpretation.cpp:55:71: error: no matching function for call to 'domain::Domain::mkVecVarExpr(domain::Space&, domain::VecVarExpr*&)'
     domain::VecVarExpr *dom_var = domain_->mkVecVarExpr(space, dom_var);
                                                                       ^
In file included from Oracle.h:7:0,
                 from Interpretation.h:8,
                 from Interpretation.cpp:13:
Domain.h:46:11: note: candidate: domain::VecExpr* domain::Domain::mkVecVarExpr(domain::Space&, const coords::VecVarExpr*)
  VecExpr* mkVecVarExpr(Space& s, const coords::VecVarExpr* ast);
           ^~~~~~~~~~~~
Domain.h:46:11: note:   no known conversion for argument 2 from 'domain::VecVarExpr*' to 'const coords::VecVarExpr*'
Domain.h:51:11: note: candidate: domain::VecExpr* domain::Domain::mkVecVarExpr(domain::Space&, const int*)
  VecExpr* mkVecVarExpr(Space& s, const coords::VecLitExpr* e);  // KEVIN
           ^~~~~~~~~~~~
Domain.h:51:11: note:   no known conversion for argument 2 from 'domain::VecVarExpr*' to 'const int*'
Interpretation.cpp: In member function 'void interp::Interpretation::mkVecVecAddExpr(ast::VecVecAddExpr*, domain::VecExpr*, domain::VecExpr*)':
Interpretation.cpp:72:44: error: 'class domain::VecExpr' has no member named 'getCoords'; did you mean 'Coords'?
   const coords::VecExpr *mem_coords = mem->getCoords();
                                            ^~~~~~~~~
                                            Coords
Interpretation.cpp:73:44: error: 'class domain::VecExpr' has no member named 'getCoords'; did you mean 'Coords'?
   const coords::VecExpr *arg_coords = arg->getCoords();
                                            ^~~~~~~~~
                                            Coords
Interpretation.cpp:79:40: error: 'ast2coords_' was not declared in this scope
   coords::VecVecAddExpr *expr_coords = ast2coords_->mkVecVecAddExpr(ast, mem_coords, arg_coords);
                                        ^~~~~~~~~~~
Interpretation.cpp:79:40: note: suggested alternative: 'arg_coords'
   coords::VecVecAddExpr *expr_coords = ast2coords_->mkVecVecAddExpr(ast, mem_coords, arg_coords);
                                        ^~~~~~~~~~~
                                        arg_coords
Interpretation.cpp:88:33: error: 'stmt_coords' was not declared in this scope
   coords2dom_->PutVecVecAddExpr(stmt_coords, dom_add_expr);
                                 ^~~~~~~~~~~
Interpretation.cpp:88:33: note: suggested alternative: 'mem_coords'
   coords2dom_->PutVecVecAddExpr(stmt_coords, dom_add_expr);
                                 ^~~~~~~~~~~
                                 mem_coords
Interpretation.cpp: In member function 'void interp::Interpretation::mkVector_Lit(ast::Vector_Lit*, clang::ASTContext*)':
Interpretation.cpp:111:38: error: 'ast2coords_' was not declared in this scope
     coords::Vector_Lit *var_coords = ast2coords_->mkVector_Lit(ast, 0.0);
                                      ^~~~~~~~~~~
Interpretation.cpp:111:38: note: suggested alternative: 'getCoords'
     coords::Vector_Lit *var_coords = ast2coords_->mkVector_Lit(ast, 0.0);
                                      ^~~~~~~~~~~
                                      getCoords
Interpretation.cpp:112:13: error: 'Space' is not a member of 'oracle'
     oracle::Space& space = oracle_->getSpaceForVector_Lit(ast); // infer?
             ^~~~~
Interpretation.cpp:112:13: note: suggested alternative: 'Oracle'
     oracle::Space& space = oracle_->getSpaceForVector_Lit(ast); // infer?
             ^~~~~
             Oracle
Interpretation.cpp:112:20: error: 'space' was not declared in this scope
     oracle::Space& space = oracle_->getSpaceForVector_Lit(ast); // infer?
                    ^~~~~
Interpretation.cpp:112:20: note: suggested alternative: 'isspace'
     oracle::Space& space = oracle_->getSpaceForVector_Lit(ast); // infer?
                    ^~~~~
                    isspace
Interpretation.cpp:112:37: error: 'class oracle::Oracle' has no member named 'getSpaceForVector_Lit'; did you mean 'getSpaceForVector'?
     oracle::Space& space = oracle_->getSpaceForVector_Lit(ast); // infer?
                                     ^~~~~~~~~~~~~~~~~~~~~
                                     getSpaceForVector
Interpretation.cpp:114:18: error: 'class coords2domain::CoordsToDomain' has no member named 'PutVecExpr'; did you mean 'getVecExpr'?
     coords2dom_->PutVecExpr(var_coords, dom_var);
                  ^~~~~~~~~~
                  getVecExpr
Interpretation.cpp: At global scope:
Interpretation.cpp:119:29: error: expected identifier before ',' token
       ast::Vector_Var *ast, , domain::VecVarExpr* expr, clang::ASTContext *c) {
                             ^
Interpretation.cpp:119:77: error: no 'void interp::Interpretation::mkVector_Var(ast::Vector_Var*, int, domain::VecVarExpr*, clang::ASTContext*)' member function declared in class 'interp::Interpretation'
       ast::Vector_Var *ast, , domain::VecVarExpr* expr, clang::ASTContext *c) {
                                                                             ^
Interpretation.cpp:130:30: error: expected identifier before ',' token
       ast::Vector_Expr *ast, , domain::VecExpr* expr, clang::ASTContext *c) {
                              ^
Interpretation.cpp:129:6: error: prototype for 'void interp::Interpretation::mkVector_Expr(ast::Vector_Expr*, int, domain::VecExpr*, clang::ASTContext*)' does not match any in class 'interp::Interpretation'
 void Interpretation::mkVector_Expr(
      ^~~~~~~~~~~~~~
In file included from Interpretation.cpp:13:0:
Interpretation.h:26:10: error: candidate is: void interp::Interpretation::mkVector_Expr(ast::VecLitExpr*, clang::ASTContext*)
     void mkVector_Expr(ast::VecLitExpr *ast, clang::ASTContext *context);
          ^~~~~~~~~~~~~
Interpretation.cpp: In member function 'void interp::Interpretation::mkVector_Def(ast::Vector_Def*, domain::VecIdent*, domain::VecExpr*)':
Interpretation.cpp:147:10: warning: the address of 'double exp(double)' will never be NULL [-Waddress]
     if (!exp || !id) { std::cerr << "Interpretation::mkVector_Def: null arg\n"; }
          ^~~
Interpretation.cpp:152:46: error: 'class domain::VecExpr' has no member named 'getCoords'; did you mean 'Coords'?
     const coords::VecExpr *vec_coords = vec->getCoords();
                                              ^~~~~~~~~
                                              Coords
Interpretation.cpp:155:38: error: 'ast2coords_' was not declared in this scope
     coords::Vector_Def *def_coords = ast2coords_->mkVector_Def(ast, id_coords, vec_coords);
                                      ^~~~~~~~~~~
Interpretation.cpp:155:38: note: suggested alternative: 'getCoords'
     coords::Vector_Def *def_coords = ast2coords_->mkVector_Def(ast, id_coords, vec_coords);
                                      ^~~~~~~~~~~
                                      getCoords
Interpretation.cpp:157:78: error: 'expr' was not declared in this scope
     domain::Vector_Def* dom_vec_def = domain_->mkVector_Def(ast, vec_coords, expr);
                                                                              ^~~~
Interpretation.cpp:157:78: note: suggested alternative:
In file included from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43:0,
                 from Coords.h:6,
                 from Interpretation.h:6,
                 from Interpretation.cpp:13:
/llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:1785:64: note:   'clang::ast_matchers::expr'
 extern const internal::VariadicDynCastAllOfMatcher<Stmt, Expr> expr;
                                                                ^~~~
Interpretation.cpp:158:18: error: 'class coords2domain::CoordsToDomain' has no member named 'PutVecExpr'; did you mean 'getVecExpr'?
     coords2dom_->PutVecExpr(var_coords, dom_var);
                  ^~~~~~~~~~
                  getVecExpr
Interpretation.cpp:158:29: error: 'var_coords' was not declared in this scope
     coords2dom_->PutVecExpr(var_coords, dom_var);
                             ^~~~~~~~~~
Interpretation.cpp:158:29: note: suggested alternative: 'vec_coords'
     coords2dom_->PutVecExpr(var_coords, dom_var);
                             ^~~~~~~~~~
                             vec_coords
Interpretation.cpp:158:41: error: 'dom_var' was not declared in this scope
     coords2dom_->PutVecExpr(var_coords, dom_var);
                                         ^~~~~~~
Interpretation.cpp:165:44: error: 'class domain::Domain' has no member named 'putVector_Def'; did you mean 'mkVector_Def'?
     domain::Vector_Def *vec_def = domain_->putVector_Def(bind_coords, id, exp);
                                            ^~~~~~~~~~~~~
                                            mkVector_Def
Interpretation.cpp:165:58: error: 'bind_coords' was not declared in this scope
     domain::Vector_Def *vec_def = domain_->putVector_Def(bind_coords, id, exp);
                                                          ^~~~~~~~~~~
Interpretation.cpp:165:58: note: suggested alternative: 'id_coords'
     domain::Vector_Def *vec_def = domain_->putVector_Def(bind_coords, id, exp);
                                                          ^~~~~~~~~~~
                                                          id_coords
Interpretation.cpp:170:62: error: 'const class coords::VecIdent' has no member named 'get'
             << " wrapped addr is " << std::hex << id_coords->get() << "\n";
                                                              ^~~
Interpretation.cpp:172:16: error: 'const class coords::VecIdent' has no member named 'get'
     id_coords->get()->dump();
                ^~~
Interpretation.cpp:155:25: warning: unused variable 'def_coords' [-Wunused-variable]
     coords::Vector_Def *def_coords = ast2coords_->mkVector_Def(ast, id_coords, vec_coords);
                         ^~~~~~~~~~
Interpretation.cpp:157:25: warning: unused variable 'dom_vec_def' [-Wunused-variable]
     domain::Vector_Def* dom_vec_def = domain_->mkVector_Def(ast, vec_coords, expr);
                         ^~~~~~~~~~~
Interpretation.cpp: In member function 'const coords::VecExpr* interp::Interpretation::getCoords(ast::VecExpr*)':
Interpretation.cpp:181:12: error: 'ast2coords_' was not declared in this scope
     return ast2coords_->getCoords(expr);
            ^~~~~~~~~~~
Interpretation.cpp:181:12: note: suggested alternative: 'getCoords'
     return ast2coords_->getCoords(expr);
            ^~~~~~~~~~~
            getCoords
In file included from Oracle.h:6:0,
                 from Oracle.cpp:4:
Coords.h:154:50: error: 'Scalar' has not been declared
   Vector_Lit(const clang::CXXConstructExpr *ast, Scalar a);
                                                  ^~~~~~
In file included from Oracle.h:7:0,
                 from Oracle.cpp:4:
Domain.h:50:48: error: 'VecLitExpr' in namespace 'coords' does not name a type
  VecExpr* mkVecLitExpr(Space& s, const coords::VecLitExpr* e);
                                                ^~~~~~~~~~
Domain.h:51:48: error: 'VecLitExpr' in namespace 'coords' does not name a type
  VecExpr* mkVecVarExpr(Space& s, const coords::VecLitExpr* e);  // KEVIN
                                                ^~~~~~~~~~
Domain.h:101:2: error: 'ToCoordscoords' does not name a type; did you mean 'ToCoords'?
  ToCoordscoords::Coords *c) : coords_(c) {}
  ^~~~~~~~~~~~~~
  ToCoords
Domain.h:105:2: error: expected ';' after class definition
 }
  ^
  ;
Domain.h:111:32: error: expected class-name before '{' token
 class VecIdent : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecIdent::VecIdent(domain::Space&, const coords::VecIdent*)':
Domain.h:113:54: error: type 'domain::ToCoords' is not a direct base of 'domain::VecIdent'
  VecIdent(Space& space, const coords::VecIdent* c) : ToCoords(c), space_(&space) {}
                                                      ^~~~~~~~
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:21: error: expected '<' before '<:' token
   return static_cast<:VecIdent*>getBaseCoords();
                     ^~
Domain.h:116:21: error: expected type-specifier before '<:' token
Domain.h:116:21: error: expected '>' before '<:' token
Domain.h:116:21: error: expected '(' before '<:' token
Domain.h:116:23: error: capture of non-variable 'domain::VecIdent::VecIdent' 
   return static_cast<:VecIdent*>getBaseCoords();
                       ^~~~~~~~
Domain.h:111:32: note: 'class domain::VecIdent domain::VecIdent::VecIdent' declared here
 class VecIdent : public ToCode {
                                ^
Domain.h:116:31: error: expected ',' before '*' token
   return static_cast<:VecIdent*>getBaseCoords();
                               ^
Domain.h:116:31: error: expected identifier before '*' token
Domain.h:116:48: error: expected ']' before ';' token
   return static_cast<:VecIdent*>getBaseCoords();
                                                ^
Domain.h: In lambda function:
Domain.h:116:48: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:48: error: expected ')' before ';' token
Domain.h: At global scope:
Domain.h:125:32: error: expected class-name before '{' token
 class VecExpr  : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)':
Domain.h:127:57: error: type 'domain::ToCoords' is not a direct base of 'domain::VecExpr'
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
                                                         ^~~~~~~~
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:21: error: expected '<' before '<:' token
   return static_cast<:VecExpr*>getBaseCoords();
                     ^~
Domain.h:129:21: error: expected type-specifier before '<:' token
Domain.h:129:21: error: expected '>' before '<:' token
Domain.h:129:21: error: expected '(' before '<:' token
Domain.h:129:23: error: capture of non-variable 'domain::VecExpr::VecExpr' 
   return static_cast<:VecExpr*>getBaseCoords();
                       ^~~~~~~
Domain.h:125:32: note: 'class domain::VecExpr domain::VecExpr::VecExpr' declared here
 class VecExpr  : public ToCode {
                                ^
Domain.h:129:30: error: expected ',' before '*' token
   return static_cast<:VecExpr*>getBaseCoords();
                              ^
Domain.h:129:30: error: expected identifier before '*' token
Domain.h:129:47: error: expected ']' before ';' token
   return static_cast<:VecExpr*>getBaseCoords();
                                               ^
Domain.h: In lambda function:
Domain.h:129:47: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:47: error: expected ')' before ';' token
Domain.h: In member function 'virtual std::__cxx11::string domain::VecExpr::toString() const':
Domain.h:133:7: error: 'ast_' was not declared in this scope
   if (ast_ != NULL) {
       ^~~~
Domain.h:133:7: note: suggested alternative: 'asin'
   if (ast_ != NULL) {
       ^~~~
       asin
Domain.h: At global scope:
Domain.h:147:37: error: expected ';' after class definition
 class VecLitExpr : public VecExpr {}
                                     ^
                                     ;
Domain.h: In member function 'virtual std::__cxx11::string domain::VecVarExpr::toString() const':
Domain.h:154:16: error: 'ast_' was not declared in this scope
   return "(" + ast_->toString() + " )";
                ^~~~
Domain.h:154:16: note: suggested alternative: 'asin'
   return "(" + ast_->toString() + " )";
                ^~~~
                asin
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVarExpr::getCoords()':
Domain.h:157:34: error: expected '(' before 'coords_'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
Domain.h:157:34: error: 'coords_' was not declared in this scope
Domain.h:157:34: note: suggested alternative: 'Coords'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
                                  Coords
Domain.h:157:41: error: expected ')' before ';' token
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                         ^
Domain.h: At global scope:
Domain.h:166:33: error: 'VecAddAddExpr' in namespace 'coords' does not name a type
         Space& s, const coords::VecAddAddExpr* c, domain::VecExpr *mem, domain::VecExpr *arg) :
                                 ^~~~~~~~~~~~~
Domain.h: In constructor 'domain::VecVecAddExpr::VecVecAddExpr(domain::Space&, const int*, domain::VecExpr*, domain::VecExpr*)':
Domain.h:167:46: error: no matching function for call to 'domain::VecExpr::VecExpr(domain::Space&, const int*&)'
    domain::VecExpr(s, c), arg_(arg), mem_(mem) {
                                              ^
Domain.h:127:5: note: candidate: domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
     ^~~~~~~
Domain.h:127:5: note:   no known conversion for argument 2 from 'const int*' to 'const coords::VecExpr*'
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(const domain::VecExpr&)
 class VecExpr  : public ToCode {
       ^~~~~~~
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(domain::VecExpr&&)
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVecAddExpr::getCoords()':
Domain.h:172:37: error: expected '(' before 'coords_'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
Domain.h:172:37: error: 'coords_' was not declared in this scope
Domain.h:172:37: note: suggested alternative: 'Coords'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
                                     Coords
Domain.h:172:44: error: expected ')' before ';' token
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                            ^
Domain.h: At global scope:
Domain.h:188:32: error: expected class-name before '{' token
 class Vector : public ToCode   {
                                ^
Domain.h:190:55: error: 'VecCtorType' has not been declared
  Vector(const Space& s, const coords::Vector* coords, VecCtorType tag) :
                                                       ^~~~~~~~~~~
Domain.h:207:2: error: 'VecCtorType' does not name a type; did you mean 'Vector'?
  VecCtorType tag_;
  ^~~~~~~~~~~
  Vector
Domain.h: In constructor 'domain::Vector::Vector(const domain::Space&, const coords::Vector*, int)':
Domain.h:191:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector'
   ToCoords(c), space_(&s), tag_(tag) {
   ^~~~~~~~
Domain.h:191:12: error: 'c' was not declared in this scope
   ToCoords(c), space_(&s), tag_(tag) {
            ^
Domain.h:191:28: error: class 'domain::Vector' does not have any field named 'tag_'
   ToCoords(c), space_(&s), tag_(tag) {
                            ^~~~
Domain.h: In member function 'bool domain::Vector::isLit()':
Domain.h:193:25: error: 'tag_' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
Domain.h:193:25: note: suggested alternative: 'tanl'
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
                         tanl
Domain.h:193:33: error: 'VEC_LIT' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                                 ^~~~~~~
Domain.h: In member function 'bool domain::Vector::isExpr()':
Domain.h:194:26: error: 'tag_' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
Domain.h:194:26: note: suggested alternative: 'tanl'
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
                          tanl
Domain.h:194:34: error: 'VEC_EXPR' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                                  ^~~~~~~~
Domain.h: In member function 'bool domain::Vector::isVar()':
Domain.h:195:25: error: 'tag_' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
Domain.h:195:25: note: suggested alternative: 'tanl'
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
                         tanl
Domain.h:195:33: error: 'VEC_VAR' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                                 ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector::getCoords() const':
Domain.h:200:30: error: expected '(' before 'coords_'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
Domain.h:200:30: error: 'coords_' was not declared in this scope
Domain.h:200:30: note: suggested alternative: 'ToCoords'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
                              ToCoords
Domain.h:200:37: error: expected ')' before ';' token
   return static_cast<Vector*>coords_;
                                     ^
Domain.h: In constructor 'domain::Vector_Lit::Vector_Lit(const domain::Space&, const coords::Vector*)':
Domain.h:215:16: error: 'VEC_LIT' was not declared in this scope
   Vector(s, c, VEC_LIT) {
                ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Lit::getCoords() const':
Domain.h:218:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
Domain.h:218:34: error: 'coords_' was not declared in this scope
Domain.h:218:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:218:41: error: expected ')' before ';' token
   return static_cast<Vector_Lit*>coords_;
                                         ^
Domain.h: In constructor 'domain::Vector_Expr::Vector_Expr(const domain::Space&, const coords::Vector*, domain::VecExpr*)':
Domain.h:234:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Expr'
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
   ^~~~~~~~
Domain.h:234:32: error: expected primary-expression before ',' token
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                ^
Domain.h:234:34: error: 'VEC_EXPR' was not declared in this scope
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                  ^~~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Expr::getCoords() const':
Domain.h:238:35: error: expected '(' before 'coords_'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
Domain.h:238:35: error: 'coords_' was not declared in this scope
Domain.h:238:35: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
                                   ToCoords
Domain.h:238:42: error: expected ')' before ';' token
   return static_cast<Vector_Expr*>coords_;
                                          ^
Domain.h: At global scope:
Domain.h:248:36: error: expected ';' after class definition
 class Vector_Var : public Vector {}
                                    ^
                                    ;
Domain.h:255:35: error: expected class-name before '{' token
 class Vector_Def : public ToCode  {
                                   ^
Domain.h: In constructor 'domain::Vector_Def::Vector_Def(const coords::Vector_Def*, const domain::VecIdent*, const domain::VecExpr*)':
Domain.h:258:4: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Def'
    ToCoords(c), identifier_(identifier), expr_(expr) {}
    ^~~~~~~~
Domain.h: In member function 'const coords::Vector_Def* domain::Vector_Def::getCoords() const':
Domain.h:263:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
Domain.h:263:34: error: 'coords_' was not declared in this scope
Domain.h:263:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:263:41: error: expected ')' before ';' token
   return static_cast<Vector_Def*>coords_;
                                         ^
In file included from Domain.h:9:0,
                 from Checker.h:4,
                 from Checker.cpp:9:
Coords.h:154:50: error: 'Scalar' has not been declared
   Vector_Lit(const clang::CXXConstructExpr *ast, Scalar a);
                                                  ^~~~~~
In file included from Checker.h:4:0,
                 from Checker.cpp:9:
Domain.h:50:48: error: 'VecLitExpr' in namespace 'coords' does not name a type
  VecExpr* mkVecLitExpr(Space& s, const coords::VecLitExpr* e);
                                                ^~~~~~~~~~
Domain.h:51:48: error: 'VecLitExpr' in namespace 'coords' does not name a type
  VecExpr* mkVecVarExpr(Space& s, const coords::VecLitExpr* e);  // KEVIN
                                                ^~~~~~~~~~
Domain.h:101:2: error: 'ToCoordscoords' does not name a type; did you mean 'ToCoords'?
  ToCoordscoords::Coords *c) : coords_(c) {}
  ^~~~~~~~~~~~~~
  ToCoords
Domain.h:105:2: error: expected ';' after class definition
 }
  ^
  ;
Domain.h:111:32: error: expected class-name before '{' token
 class VecIdent : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecIdent::VecIdent(domain::Space&, const coords::VecIdent*)':
Domain.h:113:54: error: type 'domain::ToCoords' is not a direct base of 'domain::VecIdent'
  VecIdent(Space& space, const coords::VecIdent* c) : ToCoords(c), space_(&space) {}
                                                      ^~~~~~~~
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:21: error: expected '<' before '<:' token
   return static_cast<:VecIdent*>getBaseCoords();
                     ^~
Domain.h:116:21: error: expected type-specifier before '<:' token
Domain.h:116:21: error: expected '>' before '<:' token
Domain.h:116:21: error: expected '(' before '<:' token
Domain.h:116:23: error: capture of non-variable 'domain::VecIdent::VecIdent' 
   return static_cast<:VecIdent*>getBaseCoords();
                       ^~~~~~~~
Domain.h:111:32: note: 'class domain::VecIdent domain::VecIdent::VecIdent' declared here
 class VecIdent : public ToCode {
                                ^
Domain.h:116:31: error: expected ',' before '*' token
   return static_cast<:VecIdent*>getBaseCoords();
                               ^
Domain.h:116:31: error: expected identifier before '*' token
Domain.h:116:48: error: expected ']' before ';' token
   return static_cast<:VecIdent*>getBaseCoords();
                                                ^
Domain.h: In lambda function:
Domain.h:116:48: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:48: error: expected ')' before ';' token
Domain.h: At global scope:
Domain.h:125:32: error: expected class-name before '{' token
 class VecExpr  : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)':
Domain.h:127:57: error: type 'domain::ToCoords' is not a direct base of 'domain::VecExpr'
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
                                                         ^~~~~~~~
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:21: error: expected '<' before '<:' token
   return static_cast<:VecExpr*>getBaseCoords();
                     ^~
Domain.h:129:21: error: expected type-specifier before '<:' token
Domain.h:129:21: error: expected '>' before '<:' token
Domain.h:129:21: error: expected '(' before '<:' token
Domain.h:129:23: error: capture of non-variable 'domain::VecExpr::VecExpr' 
   return static_cast<:VecExpr*>getBaseCoords();
                       ^~~~~~~
Domain.h:125:32: note: 'class domain::VecExpr domain::VecExpr::VecExpr' declared here
 class VecExpr  : public ToCode {
                                ^
Domain.h:129:30: error: expected ',' before '*' token
   return static_cast<:VecExpr*>getBaseCoords();
                              ^
Domain.h:129:30: error: expected identifier before '*' token
Domain.h:129:47: error: expected ']' before ';' token
   return static_cast<:VecExpr*>getBaseCoords();
                                               ^
Domain.h: In lambda function:
Domain.h:129:47: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:47: error: expected ')' before ';' token
Domain.h: In member function 'virtual std::__cxx11::string domain::VecExpr::toString() const':
Domain.h:133:7: error: 'ast_' was not declared in this scope
   if (ast_ != NULL) {
       ^~~~
Domain.h:133:7: note: suggested alternative: 'asin'
   if (ast_ != NULL) {
       ^~~~
       asin
Domain.h: At global scope:
Domain.h:147:37: error: expected ';' after class definition
 class VecLitExpr : public VecExpr {}
                                     ^
                                     ;
Domain.h: In member function 'virtual std::__cxx11::string domain::VecVarExpr::toString() const':
Domain.h:154:16: error: 'ast_' was not declared in this scope
   return "(" + ast_->toString() + " )";
                ^~~~
Domain.h:154:16: note: suggested alternative: 'asin'
   return "(" + ast_->toString() + " )";
                ^~~~
                asin
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVarExpr::getCoords()':
Domain.h:157:34: error: expected '(' before 'coords_'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
Domain.h:157:34: error: 'coords_' was not declared in this scope
Domain.h:157:34: note: suggested alternative: 'Coords'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
                                  Coords
Domain.h:157:41: error: expected ')' before ';' token
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                         ^
Domain.h: At global scope:
Domain.h:166:33: error: 'VecAddAddExpr' in namespace 'coords' does not name a type
         Space& s, const coords::VecAddAddExpr* c, domain::VecExpr *mem, domain::VecExpr *arg) :
                                 ^~~~~~~~~~~~~
Domain.h: In constructor 'domain::VecVecAddExpr::VecVecAddExpr(domain::Space&, const int*, domain::VecExpr*, domain::VecExpr*)':
Domain.h:167:46: error: no matching function for call to 'domain::VecExpr::VecExpr(domain::Space&, const int*&)'
    domain::VecExpr(s, c), arg_(arg), mem_(mem) {
                                              ^
Domain.h:127:5: note: candidate: domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
     ^~~~~~~
Domain.h:127:5: note:   no known conversion for argument 2 from 'const int*' to 'const coords::VecExpr*'
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(const domain::VecExpr&)
 class VecExpr  : public ToCode {
       ^~~~~~~
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(domain::VecExpr&&)
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVecAddExpr::getCoords()':
Domain.h:172:37: error: expected '(' before 'coords_'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
Domain.h:172:37: error: 'coords_' was not declared in this scope
Domain.h:172:37: note: suggested alternative: 'Coords'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
                                     Coords
Domain.h:172:44: error: expected ')' before ';' token
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                            ^
Domain.h: At global scope:
Domain.h:188:32: error: expected class-name before '{' token
 class Vector : public ToCode   {
                                ^
Domain.h:190:55: error: 'VecCtorType' has not been declared
  Vector(const Space& s, const coords::Vector* coords, VecCtorType tag) :
                                                       ^~~~~~~~~~~
Domain.h:207:2: error: 'VecCtorType' does not name a type; did you mean 'Vector'?
  VecCtorType tag_;
  ^~~~~~~~~~~
  Vector
Domain.h: In constructor 'domain::Vector::Vector(const domain::Space&, const coords::Vector*, int)':
Domain.h:191:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector'
   ToCoords(c), space_(&s), tag_(tag) {
   ^~~~~~~~
Domain.h:191:12: error: 'c' was not declared in this scope
   ToCoords(c), space_(&s), tag_(tag) {
            ^
Domain.h:191:28: error: class 'domain::Vector' does not have any field named 'tag_'
   ToCoords(c), space_(&s), tag_(tag) {
                            ^~~~
Domain.h: In member function 'bool domain::Vector::isLit()':
Domain.h:193:25: error: 'tag_' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
Domain.h:193:25: note: suggested alternative: 'tanl'
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
                         tanl
Domain.h:193:33: error: 'VEC_LIT' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                                 ^~~~~~~
Domain.h: In member function 'bool domain::Vector::isExpr()':
Domain.h:194:26: error: 'tag_' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
Domain.h:194:26: note: suggested alternative: 'tanl'
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
                          tanl
Domain.h:194:34: error: 'VEC_EXPR' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                                  ^~~~~~~~
Domain.h: In member function 'bool domain::Vector::isVar()':
Domain.h:195:25: error: 'tag_' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
Domain.h:195:25: note: suggested alternative: 'tanl'
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
                         tanl
Domain.h:195:33: error: 'VEC_VAR' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                                 ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector::getCoords() const':
Domain.h:200:30: error: expected '(' before 'coords_'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
Domain.h:200:30: error: 'coords_' was not declared in this scope
Domain.h:200:30: note: suggested alternative: 'ToCoords'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
                              ToCoords
Domain.h:200:37: error: expected ')' before ';' token
   return static_cast<Vector*>coords_;
                                     ^
Domain.h: In constructor 'domain::Vector_Lit::Vector_Lit(const domain::Space&, const coords::Vector*)':
Domain.h:215:16: error: 'VEC_LIT' was not declared in this scope
   Vector(s, c, VEC_LIT) {
                ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Lit::getCoords() const':
Domain.h:218:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
Domain.h:218:34: error: 'coords_' was not declared in this scope
Domain.h:218:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:218:41: error: expected ')' before ';' token
   return static_cast<Vector_Lit*>coords_;
                                         ^
Domain.h: In constructor 'domain::Vector_Expr::Vector_Expr(const domain::Space&, const coords::Vector*, domain::VecExpr*)':
Domain.h:234:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Expr'
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
   ^~~~~~~~
Domain.h:234:32: error: expected primary-expression before ',' token
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                ^
Domain.h:234:34: error: 'VEC_EXPR' was not declared in this scope
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                  ^~~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Expr::getCoords() const':
Domain.h:238:35: error: expected '(' before 'coords_'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
Domain.h:238:35: error: 'coords_' was not declared in this scope
Domain.h:238:35: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
                                   ToCoords
Domain.h:238:42: error: expected ')' before ';' token
   return static_cast<Vector_Expr*>coords_;
                                          ^
Domain.h: At global scope:
Domain.h:248:36: error: expected ';' after class definition
 class Vector_Var : public Vector {}
                                    ^
                                    ;
Domain.h:255:35: error: expected class-name before '{' token
 class Vector_Def : public ToCode  {
                                   ^
Domain.h: In constructor 'domain::Vector_Def::Vector_Def(const coords::Vector_Def*, const domain::VecIdent*, const domain::VecExpr*)':
Domain.h:258:4: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Def'
    ToCoords(c), identifier_(identifier), expr_(expr) {}
    ^~~~~~~~
Domain.h: In member function 'const coords::Vector_Def* domain::Vector_Def::getCoords() const':
Domain.h:263:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
Domain.h:263:34: error: 'coords_' was not declared in this scope
Domain.h:263:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:263:41: error: expected ')' before ';' token
   return static_cast<Vector_Def*>coords_;
                                         ^
Coords.cpp:3:0: error: unterminated #ifndef
 #ifndef COORDS_H
 
In file included from Coords.cpp:1:0:
Coords.h:154:50: error: 'Scalar' has not been declared
   Vector_Lit(const clang::CXXConstructExpr *ast, Scalar a);
                                                  ^~~~~~
In file included from CoordsToDomain.h:5:0,
                 from CoordsToDomain.cpp:1:
Coords.h:154:50: error: 'Scalar' has not been declared
   Vector_Lit(const clang::CXXConstructExpr *ast, Scalar a);
                                                  ^~~~~~
In file included from CoordsToDomain.h:6:0,
                 from CoordsToDomain.cpp:1:
Domain.h:50:48: error: 'VecLitExpr' in namespace 'coords' does not name a type
  VecExpr* mkVecLitExpr(Space& s, const coords::VecLitExpr* e);
                                                ^~~~~~~~~~
Domain.h:51:48: error: 'VecLitExpr' in namespace 'coords' does not name a type
  VecExpr* mkVecVarExpr(Space& s, const coords::VecLitExpr* e);  // KEVIN
                                                ^~~~~~~~~~
Domain.h:101:2: error: 'ToCoordscoords' does not name a type; did you mean 'ToCoords'?
  ToCoordscoords::Coords *c) : coords_(c) {}
  ^~~~~~~~~~~~~~
  ToCoords
Domain.h:105:2: error: expected ';' after class definition
 }
  ^
  ;
Domain.h:111:32: error: expected class-name before '{' token
 class VecIdent : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecIdent::VecIdent(domain::Space&, const coords::VecIdent*)':
Domain.h:113:54: error: type 'domain::ToCoords' is not a direct base of 'domain::VecIdent'
  VecIdent(Space& space, const coords::VecIdent* c) : ToCoords(c), space_(&space) {}
                                                      ^~~~~~~~
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:21: error: expected '<' before '<:' token
   return static_cast<:VecIdent*>getBaseCoords();
                     ^~
Domain.h:116:21: error: expected type-specifier before '<:' token
Domain.h:116:21: error: expected '>' before '<:' token
Domain.h:116:21: error: expected '(' before '<:' token
Domain.h:116:23: error: capture of non-variable 'domain::VecIdent::VecIdent' 
   return static_cast<:VecIdent*>getBaseCoords();
                       ^~~~~~~~
Domain.h:111:32: note: 'class domain::VecIdent domain::VecIdent::VecIdent' declared here
 class VecIdent : public ToCode {
                                ^
Domain.h:116:31: error: expected ',' before '*' token
   return static_cast<:VecIdent*>getBaseCoords();
                               ^
Domain.h:116:31: error: expected identifier before '*' token
Domain.h:116:48: error: expected ']' before ';' token
   return static_cast<:VecIdent*>getBaseCoords();
                                                ^
Domain.h: In lambda function:
Domain.h:116:48: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:48: error: expected ')' before ';' token
Domain.h: At global scope:
Domain.h:125:32: error: expected class-name before '{' token
 class VecExpr  : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)':
Domain.h:127:57: error: type 'domain::ToCoords' is not a direct base of 'domain::VecExpr'
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
                                                         ^~~~~~~~
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:21: error: expected '<' before '<:' token
   return static_cast<:VecExpr*>getBaseCoords();
                     ^~
Domain.h:129:21: error: expected type-specifier before '<:' token
Domain.h:129:21: error: expected '>' before '<:' token
Domain.h:129:21: error: expected '(' before '<:' token
Domain.h:129:23: error: capture of non-variable 'domain::VecExpr::VecExpr' 
   return static_cast<:VecExpr*>getBaseCoords();
                       ^~~~~~~
Domain.h:125:32: note: 'class domain::VecExpr domain::VecExpr::VecExpr' declared here
 class VecExpr  : public ToCode {
                                ^
Domain.h:129:30: error: expected ',' before '*' token
   return static_cast<:VecExpr*>getBaseCoords();
                              ^
Domain.h:129:30: error: expected identifier before '*' token
Domain.h:129:47: error: expected ']' before ';' token
   return static_cast<:VecExpr*>getBaseCoords();
                                               ^
Domain.h: In lambda function:
Domain.h:129:47: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:47: error: expected ')' before ';' token
Domain.h: In member function 'virtual std::__cxx11::string domain::VecExpr::toString() const':
Domain.h:133:7: error: 'ast_' was not declared in this scope
   if (ast_ != NULL) {
       ^~~~
Domain.h:133:7: note: suggested alternative: 'asin'
   if (ast_ != NULL) {
       ^~~~
       asin
Domain.h: At global scope:
Domain.h:147:37: error: expected ';' after class definition
 class VecLitExpr : public VecExpr {}
                                     ^
                                     ;
Domain.h: In member function 'virtual std::__cxx11::string domain::VecVarExpr::toString() const':
Domain.h:154:16: error: 'ast_' was not declared in this scope
   return "(" + ast_->toString() + " )";
                ^~~~
Domain.h:154:16: note: suggested alternative: 'asin'
   return "(" + ast_->toString() + " )";
                ^~~~
                asin
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVarExpr::getCoords()':
Domain.h:157:34: error: expected '(' before 'coords_'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
Domain.h:157:34: error: 'coords_' was not declared in this scope
Domain.h:157:34: note: suggested alternative: 'Coords'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
                                  Coords
Domain.h:157:41: error: expected ')' before ';' token
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                         ^
Domain.h: At global scope:
Domain.h:166:33: error: 'VecAddAddExpr' in namespace 'coords' does not name a type
         Space& s, const coords::VecAddAddExpr* c, domain::VecExpr *mem, domain::VecExpr *arg) :
                                 ^~~~~~~~~~~~~
Domain.h: In constructor 'domain::VecVecAddExpr::VecVecAddExpr(domain::Space&, const int*, domain::VecExpr*, domain::VecExpr*)':
Domain.h:167:46: error: no matching function for call to 'domain::VecExpr::VecExpr(domain::Space&, const int*&)'
    domain::VecExpr(s, c), arg_(arg), mem_(mem) {
                                              ^
Domain.h:127:5: note: candidate: domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
     ^~~~~~~
Domain.h:127:5: note:   no known conversion for argument 2 from 'const int*' to 'const coords::VecExpr*'
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(const domain::VecExpr&)
 class VecExpr  : public ToCode {
       ^~~~~~~
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(domain::VecExpr&&)
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVecAddExpr::getCoords()':
Domain.h:172:37: error: expected '(' before 'coords_'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
Domain.h:172:37: error: 'coords_' was not declared in this scope
Domain.h:172:37: note: suggested alternative: 'Coords'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
                                     Coords
Domain.h:172:44: error: expected ')' before ';' token
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                            ^
Domain.h: At global scope:
Domain.h:188:32: error: expected class-name before '{' token
 class Vector : public ToCode   {
                                ^
Domain.h:190:55: error: 'VecCtorType' has not been declared
  Vector(const Space& s, const coords::Vector* coords, VecCtorType tag) :
                                                       ^~~~~~~~~~~
Domain.h:207:2: error: 'VecCtorType' does not name a type; did you mean 'Vector'?
  VecCtorType tag_;
  ^~~~~~~~~~~
  Vector
Domain.h: In constructor 'domain::Vector::Vector(const domain::Space&, const coords::Vector*, int)':
Domain.h:191:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector'
   ToCoords(c), space_(&s), tag_(tag) {
   ^~~~~~~~
Domain.h:191:12: error: 'c' was not declared in this scope
   ToCoords(c), space_(&s), tag_(tag) {
            ^
Domain.h:191:28: error: class 'domain::Vector' does not have any field named 'tag_'
   ToCoords(c), space_(&s), tag_(tag) {
                            ^~~~
Domain.h: In member function 'bool domain::Vector::isLit()':
Domain.h:193:25: error: 'tag_' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
Domain.h:193:25: note: suggested alternative: 'tanl'
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
                         tanl
Domain.h:193:33: error: 'VEC_LIT' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                                 ^~~~~~~
Domain.h: In member function 'bool domain::Vector::isExpr()':
Domain.h:194:26: error: 'tag_' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
Domain.h:194:26: note: suggested alternative: 'tanl'
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
                          tanl
Domain.h:194:34: error: 'VEC_EXPR' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                                  ^~~~~~~~
Domain.h: In member function 'bool domain::Vector::isVar()':
Domain.h:195:25: error: 'tag_' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
Domain.h:195:25: note: suggested alternative: 'tanl'
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
                         tanl
Domain.h:195:33: error: 'VEC_VAR' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                                 ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector::getCoords() const':
Domain.h:200:30: error: expected '(' before 'coords_'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
Domain.h:200:30: error: 'coords_' was not declared in this scope
Domain.h:200:30: note: suggested alternative: 'ToCoords'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
                              ToCoords
Domain.h:200:37: error: expected ')' before ';' token
   return static_cast<Vector*>coords_;
                                     ^
Domain.h: In constructor 'domain::Vector_Lit::Vector_Lit(const domain::Space&, const coords::Vector*)':
Domain.h:215:16: error: 'VEC_LIT' was not declared in this scope
   Vector(s, c, VEC_LIT) {
                ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Lit::getCoords() const':
Domain.h:218:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
Domain.h:218:34: error: 'coords_' was not declared in this scope
Domain.h:218:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:218:41: error: expected ')' before ';' token
   return static_cast<Vector_Lit*>coords_;
                                         ^
Domain.h: In constructor 'domain::Vector_Expr::Vector_Expr(const domain::Space&, const coords::Vector*, domain::VecExpr*)':
Domain.h:234:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Expr'
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
   ^~~~~~~~
Domain.h:234:32: error: expected primary-expression before ',' token
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                ^
Domain.h:234:34: error: 'VEC_EXPR' was not declared in this scope
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                  ^~~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Expr::getCoords() const':
Domain.h:238:35: error: expected '(' before 'coords_'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
Domain.h:238:35: error: 'coords_' was not declared in this scope
Domain.h:238:35: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
                                   ToCoords
Domain.h:238:42: error: expected ')' before ';' token
   return static_cast<Vector_Expr*>coords_;
                                          ^
Domain.h: At global scope:
Domain.h:248:36: error: expected ';' after class definition
 class Vector_Var : public Vector {}
                                    ^
                                    ;
Domain.h:255:35: error: expected class-name before '{' token
 class Vector_Def : public ToCode  {
                                   ^
Domain.h: In constructor 'domain::Vector_Def::Vector_Def(const coords::Vector_Def*, const domain::VecIdent*, const domain::VecExpr*)':
Domain.h:258:4: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Def'
    ToCoords(c), identifier_(identifier), expr_(expr) {}
    ^~~~~~~~
Domain.h: In member function 'const coords::Vector_Def* domain::Vector_Def::getCoords() const':
Domain.h:263:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
Domain.h:263:34: error: 'coords_' was not declared in this scope
Domain.h:263:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:263:41: error: expected ')' before ';' token
   return static_cast<Vector_Def*>coords_;
                                         ^
In file included from CoordsToDomain.cpp:1:0:
CoordsToDomain.h: At global scope:
CoordsToDomain.h:42:29: error: 'coords::VecLitExpr' has not been declared
  void putVecLitExpr(coords::VecLitExpr n, domain::VecLitExpr &v);
                             ^~~~~~~~~~
CoordsToDomain.h:43:22: error: expected ';' at end of member declaration
  domain::VecLitExpr *getLitInterp(coords::VecLitExpr c) const;
                      ^~~~~~~~~~~~
CoordsToDomain.h:43:54: error: expected ')' before 'c'
  domain::VecLitExpr *getLitInterp(coords::VecLitExpr c) const;
                                                      ^
CoordsToDomain.h:44:10: error: 'VecLitExpr' in namespace 'coords' does not name a type
  coords::VecLitExpr *getLitInterp(domain::VecLitExpr d) const;
          ^~~~~~~~~~
CoordsToDomain.h:62:51: error: expected ',' or '...' before 'const'
  coords::Vector *getVector(domain::Vector_Expr* d const);
                                                   ^~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Coords.h:4,
                 from CoordsToDomain.h:5,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of 'struct std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher>':
/usr/include/c++/7/type_traits:143:12:   required from 'struct std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> >'
/usr/include/c++/7/type_traits:154:31:   required from 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecIdent, domain::VecIdent*, coords::CoordsHasher>'
CoordsToDomain.h:85:81:   required from here
/usr/include/c++/7/bits/hashtable_policy.h:87:34: error: no match for call to '(const coords::CoordsHasher) (const coords::VecIdent&)'
  noexcept(declval<const _Hash&>()(declval<const _Key&>()))>
           ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/ios:39,
                 from /usr/include/c++/7/ostream:38,
                 from /usr/include/c++/7/iostream:39,
                 from CoordsToDomain.h:4,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/type_traits: In instantiation of 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >':
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecIdent, domain::VecIdent*, coords::CoordsHasher>'
CoordsToDomain.h:85:81:   required from here
/usr/include/c++/7/type_traits:154:31: error: 'value' is not a member of 'std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> >'
     : public __bool_constant<!bool(_Pp::value)>
                               ^~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Coords.h:4,
                 from CoordsToDomain.h:5,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<coords::VecIdent, domain::VecIdent*, coords::CoordsHasher>':
CoordsToDomain.h:85:81:   required from here
/usr/include/c++/7/bits/unordered_map.h:103:66: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
                                                                  ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:110:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_type key_type;
                                             ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:111:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::value_type value_type;
                                               ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:112:48: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:113:43: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::hasher hasher;
                                           ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:114:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_equal key_equal;
                                              ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:115:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::allocator_type allocator_type;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:120:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::pointer  pointer;
                                             ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:121:50: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_pointer const_pointer;
                                                  ^~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:122:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::reference  reference;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:123:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_reference const_reference;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:124:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::iterator  iterator;
                                              ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:125:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_iterator const_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:126:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::local_iterator local_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:127:57: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_local_iterator const_local_iterator;
                                                         ^~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:128:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::size_type  size_type;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:129:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::difference_type difference_type;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:288:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       operator=(initializer_list<value_type> __l)
       ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:386:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  emplace(_Args&&... __args)
  ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:578:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:584:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(value_type&& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:591:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  insert(_Pair&& __x)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:657:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:953:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x)
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:957:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x) const
       ^~~~~~~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Coords.h:4,
                 from CoordsToDomain.h:5,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of 'struct std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher>':
/usr/include/c++/7/type_traits:143:12:   required from 'struct std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> >'
/usr/include/c++/7/type_traits:154:31:   required from 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>'
CoordsToDomain.h:86:79:   required from here
/usr/include/c++/7/bits/hashtable_policy.h:87:34: error: no match for call to '(const coords::CoordsHasher) (const coords::VecExpr&)'
  noexcept(declval<const _Hash&>()(declval<const _Key&>()))>
           ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/ios:39,
                 from /usr/include/c++/7/ostream:38,
                 from /usr/include/c++/7/iostream:39,
                 from CoordsToDomain.h:4,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/type_traits: In instantiation of 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >':
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>'
CoordsToDomain.h:86:79:   required from here
/usr/include/c++/7/type_traits:154:31: error: 'value' is not a member of 'std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> >'
     : public __bool_constant<!bool(_Pp::value)>
                               ^~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Coords.h:4,
                 from CoordsToDomain.h:5,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>':
CoordsToDomain.h:86:79:   required from here
/usr/include/c++/7/bits/unordered_map.h:103:66: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
                                                                  ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:110:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_type key_type;
                                             ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:111:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::value_type value_type;
                                               ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:112:48: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:113:43: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::hasher hasher;
                                           ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:114:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_equal key_equal;
                                              ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:115:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::allocator_type allocator_type;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:120:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::pointer  pointer;
                                             ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:121:50: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_pointer const_pointer;
                                                  ^~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:122:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::reference  reference;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:123:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_reference const_reference;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:124:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::iterator  iterator;
                                              ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:125:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_iterator const_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:126:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::local_iterator local_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:127:57: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_local_iterator const_local_iterator;
                                                         ^~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:128:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::size_type  size_type;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:129:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::difference_type difference_type;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:288:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       operator=(initializer_list<value_type> __l)
       ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:386:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
  emplace(_Args&&... __args)
  ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:578:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       insert(const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:584:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       insert(value_type&& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:591:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
  insert(_Pair&& __x)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:657:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       insert(initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:953:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       equal_range(const key_type& __x)
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:957:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       equal_range(const key_type& __x) const
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<coords::VecIdent, domain::Vector*, coords::CoordsHasher>':
CoordsToDomain.h:87:79:   required from here
/usr/include/c++/7/bits/unordered_map.h:103:66: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
                                                                  ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:110:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_type key_type;
                                             ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:111:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::value_type value_type;
                                               ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:112:48: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:113:43: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::hasher hasher;
                                           ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:114:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_equal key_equal;
                                              ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:115:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::allocator_type allocator_type;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:120:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::pointer  pointer;
                                             ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:121:50: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_pointer const_pointer;
                                                  ^~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:122:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::reference  reference;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:123:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_reference const_reference;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:124:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::iterator  iterator;
                                              ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:125:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_iterator const_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:126:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::local_iterator local_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:127:57: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_local_iterator const_local_iterator;
                                                         ^~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:128:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::size_type  size_type;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:129:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::difference_type difference_type;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:288:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       operator=(initializer_list<value_type> __l)
       ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:386:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  emplace(_Args&&... __args)
  ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:578:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:584:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(value_type&& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:591:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  insert(_Pair&& __x)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:657:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:953:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x)
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:957:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x) const
       ^~~~~~~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Coords.h:4,
                 from CoordsToDomain.h:5,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of 'struct std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher>':
/usr/include/c++/7/type_traits:143:12:   required from 'struct std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> >'
/usr/include/c++/7/type_traits:154:31:   required from 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::Vector_Def, domain::Vector_Def*, coords::CoordsHasher>'
CoordsToDomain.h:88:85:   required from here
/usr/include/c++/7/bits/hashtable_policy.h:87:34: error: no match for call to '(const coords::CoordsHasher) (const coords::Vector_Def&)'
  noexcept(declval<const _Hash&>()(declval<const _Key&>()))>
           ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/ios:39,
                 from /usr/include/c++/7/ostream:38,
                 from /usr/include/c++/7/iostream:39,
                 from CoordsToDomain.h:4,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/type_traits: In instantiation of 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >':
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::Vector_Def, domain::Vector_Def*, coords::CoordsHasher>'
CoordsToDomain.h:88:85:   required from here
/usr/include/c++/7/type_traits:154:31: error: 'value' is not a member of 'std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> >'
     : public __bool_constant<!bool(_Pp::value)>
                               ^~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Coords.h:4,
                 from CoordsToDomain.h:5,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<coords::Vector_Def, domain::Vector_Def*, coords::CoordsHasher>':
CoordsToDomain.h:88:85:   required from here
/usr/include/c++/7/bits/unordered_map.h:103:66: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
                                                                  ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:110:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_type key_type;
                                             ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:111:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::value_type value_type;
                                               ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:112:48: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:113:43: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::hasher hasher;
                                           ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:114:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_equal key_equal;
                                              ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:115:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::allocator_type allocator_type;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:120:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::pointer  pointer;
                                             ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:121:50: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_pointer const_pointer;
                                                  ^~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:122:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::reference  reference;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:123:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_reference const_reference;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:124:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::iterator  iterator;
                                              ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:125:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_iterator const_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:126:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::local_iterator local_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:127:57: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_local_iterator const_local_iterator;
                                                         ^~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:128:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::size_type  size_type;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:129:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::difference_type difference_type;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:288:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       operator=(initializer_list<value_type> __l)
       ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:386:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
  emplace(_Args&&... __args)
  ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:578:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       insert(const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:584:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       insert(value_type&& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:591:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
  insert(_Pair&& __x)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:657:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       insert(initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:953:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       equal_range(const key_type& __x)
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:957:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       equal_range(const key_type& __x) const
       ^~~~~~~~~~~
CoordsToDomain.cpp: In member function 'void coords2domain::CoordsToDomain::putVecIdent(coords::VecIdent*, domain::VecIdent*)':
CoordsToDomain.cpp:11:50: error: no matching function for call to 'std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>::insert(std::pair<coords::VecIdent, domain::VecIdent*>)'
     interpExpression.insert(std::make_pair(*c, d));
                                                  ^
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Coords.h:4,
                 from CoordsToDomain.h:5,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/bits/unordered_map.h:646:2: note: candidate: template<class _InputIterator> void std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::insert(_InputIterator, _InputIterator) [with _InputIterator = _InputIterator; _Key = coords::VecExpr; _Tp = domain::VecExpr*; _Hash = coords::CoordsHasher; _Pred = std::equal_to<coords::VecExpr>; _Alloc = std::allocator<std::pair<const coords::VecExpr, domain::VecExpr*> >]
  insert(_InputIterator __first, _InputIterator __last)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:646:2: note:   template argument deduction/substitution failed:
CoordsToDomain.cpp:11:50: note:   candidate expects 2 arguments, 1 provided
     interpExpression.insert(std::make_pair(*c, d));
                                                  ^
CoordsToDomain.cpp: In member function 'domain::VecIdent* coords2domain::CoordsToDomain::getVecIdent(coords::VecIdent*) const':
CoordsToDomain.cpp:15:27: error: no match for 'operator[]' (operand types are 'const std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>' and 'coords::VecIdent')
    return interpExpression[*c];
                           ^
CoordsToDomain.cpp: In member function 'coords::VecIdent* coords2domain::CoordsToDomain::getVecIdent(domain::VecIdent*) const':
CoordsToDomain.cpp:19:24: error: invalid conversion from 'const coords::VecIdent*' to 'coords::VecIdent*' [-fpermissive]
     return d->getCoords();
            ~~~~~~~~~~~~^~
CoordsToDomain.cpp: In member function 'domain::VecExpr* coords2domain::CoordsToDomain::getVecExpr(coords::VecExpr*)':
CoordsToDomain.cpp:27:27: error: no match for 'operator[]' (operand types are 'std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>' and 'coords::VecExpr')
    return interpExpression[*c];
                           ^
CoordsToDomain.cpp: In member function 'coords::VecExpr* coords2domain::CoordsToDomain::getVecExpr(domain::VecExpr*) const':
CoordsToDomain.cpp:31:15: error: 'class domain::VecExpr' has no member named 'getCoords'; did you mean 'Coords'?
     return d->getCoords();
               ^~~~~~~~~
               Coords
CoordsToDomain.cpp: At global scope:
CoordsToDomain.cpp:34:44: error: variable or field 'putVecLitExpr' declared void
 void CoordsToDomain::putVecLitExpr(coords::VecLitExpr d, domain::VecLitExpr d) {
                                            ^~~~~~~~~~
CoordsToDomain.cpp:34:44: error: 'VecLitExpr' is not a member of 'coords'
CoordsToDomain.cpp:34:44: note: suggested alternative: 'VecVarExpr'
 void CoordsToDomain::putVecLitExpr(coords::VecLitExpr d, domain::VecLitExpr d) {
                                            ^~~~~~~~~~
                                            VecVarExpr
CoordsToDomain.cpp:34:77: error: expected primary-expression before 'd'
 void CoordsToDomain::putVecLitExpr(coords::VecLitExpr d, domain::VecLitExpr d) {
                                                                             ^
CoordsToDomain.cpp:40:58: error: 'domain::VecLitExpr* coords2domain::CoordsToDomain::getLitInterp' is not a static data member of 'class coords2domain::CoordsToDomain'
 domain::VecLitExpr *CoordsToDomain::getLitInterp(coords::VecLitExpr c) const {
                                                          ^~~~~~~~~~
CoordsToDomain.cpp:40:58: error: 'VecLitExpr' is not a member of 'coords'
CoordsToDomain.cpp:40:58: note: suggested alternative: 'VecVarExpr'
 domain::VecLitExpr *CoordsToDomain::getLitInterp(coords::VecLitExpr c) const {
                                                          ^~~~~~~~~~
                                                          VecVarExpr
CoordsToDomain.cpp:44:9: error: 'VecLitExpr' in namespace 'coords' does not name a type
 coords::VecLitExpr *CoordsToDomain::getLitInterp(domain::VecLitExpr d) const {
         ^~~~~~~~~~
CoordsToDomain.cpp: In member function 'void coords2domain::CoordsToDomain::PutVecVarExpr(coords::VecVarExpr*, domain::VecVarExpr*)':
CoordsToDomain.cpp:51:50: error: no matching function for call to 'std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>::insert(std::pair<coords::VecVarExpr, domain::VecVarExpr*>)'
     interpExpression.insert(std::make_pair(*c, d));
                                                  ^
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Coords.h:4,
                 from CoordsToDomain.h:5,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/bits/unordered_map.h:646:2: note: candidate: template<class _InputIterator> void std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::insert(_InputIterator, _InputIterator) [with _InputIterator = _InputIterator; _Key = coords::VecExpr; _Tp = domain::VecExpr*; _Hash = coords::CoordsHasher; _Pred = std::equal_to<coords::VecExpr>; _Alloc = std::allocator<std::pair<const coords::VecExpr, domain::VecExpr*> >]
  insert(_InputIterator __first, _InputIterator __last)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:646:2: note:   template argument deduction/substitution failed:
CoordsToDomain.cpp:51:50: note:   candidate expects 2 arguments, 1 provided
     interpExpression.insert(std::make_pair(*c, d));
                                                  ^
CoordsToDomain.cpp: In member function 'domain::VecVarExpr* coords2domain::CoordsToDomain::getVecVarExpr(coords::VecVarExpr*) const':
CoordsToDomain.cpp:55:27: error: no match for 'operator[]' (operand types are 'const std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>' and 'coords::VecVarExpr')
    return interpExpression[*c];
                           ^
CoordsToDomain.cpp: In member function 'coords::VecVarExpr* coords2domain::CoordsToDomain::getVecVarExpr(domain::VecVarExpr*) const':
CoordsToDomain.cpp:59:24: error: invalid conversion from 'const coords::VecVarExpr*' to 'coords::VecVarExpr*' [-fpermissive]
     return d->getCoords();
            ~~~~~~~~~~~~^~
CoordsToDomain.cpp: At global scope:
CoordsToDomain.cpp:64:6: error: prototype for 'void coords2domain::CoordsToDomain::PutVecVecAddExpr(coords::VecVecAddExpr*, domain::VecVecAddExpr*)' does not match any in class 'coords2domain::CoordsToDomain'
 void CoordsToDomain::PutVecVecAddExpr(coords::VecVecAddExpr *c, domain::VecVecAddExpr *d) {
      ^~~~~~~~~~~~~~
In file included from CoordsToDomain.cpp:1:0:
CoordsToDomain.h:50:7: error: candidate is: void coords2domain::CoordsToDomain::PutVecVecAddExpr(coords::VecVarExpr*, domain::VecVecAddExpr*)
  void PutVecVecAddExpr(coords::VecVarExpr *n, domain::VecVecAddExpr *e);
       ^~~~~~~~~~~~~~~~
CoordsToDomain.cpp: In member function 'domain::VecVecAddExpr* coords2domain::CoordsToDomain::getVecVecAddExpr(coords::VecVarExpr*) const':
CoordsToDomain.cpp:69:27: error: no match for 'operator[]' (operand types are 'const std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>' and 'coords::VecVarExpr')
    return interpExpression[*c];
                           ^
CoordsToDomain.cpp: In member function 'coords::VecVecAddExpr* coords2domain::CoordsToDomain::getVecVecAddExpr(domain::VecVarExpr*) const':
CoordsToDomain.cpp:73:25: error: cannot convert 'const coords::VecVarExpr*' to 'coords::VecVecAddExpr*' in return
     return d->getCoords();
                         ^
CoordsToDomain.cpp: In member function 'void coords2domain::CoordsToDomain::putVector_Lit(coords::Vector*, domain::Vector_Lit*)':
CoordsToDomain.cpp:79:45: error: 'c' was not declared in this scope
     interpExpression.insert(std::make_pair(*c, d));
                                             ^
CoordsToDomain.cpp:79:48: error: 'd' was not declared in this scope
     interpExpression.insert(std::make_pair(*c, d));
                                                ^
CoordsToDomain.cpp: At global scope:
CoordsToDomain.cpp:82:21: error: prototype for 'domain::Vector_Lit* coords2domain::CoordsToDomain::getVector(coords::Vector_Lit*) const' does not match any in class 'coords2domain::CoordsToDomain'
 domain::Vector_Lit *CoordsToDomain::getVector(coords::Vector_Lit* c) const {
                     ^~~~~~~~~~~~~~
In file included from CoordsToDomain.cpp:1:0:
CoordsToDomain.h:62:18: error: candidates are: coords::Vector* coords2domain::CoordsToDomain::getVector(domain::Vector_Expr*)
  coords::Vector *getVector(domain::Vector_Expr* d const);
                  ^~~~~~~~~
CoordsToDomain.h:61:18: error:                 domain::Vector* coords2domain::CoordsToDomain::getVector(coords::Vector_Expr*) const
  domain::Vector *getVector(coords::Vector_Expr* c) const;
                  ^~~~~~~~~
CoordsToDomain.h:58:18: error:                 coords::Vector* coords2domain::CoordsToDomain::getVector(domain::Vector_Lit*) const
  coords::Vector *getVector(domain::Vector_Lit* d) const;
                  ^~~~~~~~~
CoordsToDomain.h:57:18: error:                 domain::Vector* coords2domain::CoordsToDomain::getVector(coords::Vector_Lit*) const
  domain::Vector *getVector(coords::Vector_Lit* c) const;
                  ^~~~~~~~~
CoordsToDomain.cpp:86:21: error: prototype for 'coords::Vector_Lit* coords2domain::CoordsToDomain::getVector(domain::Vector_Lit*) const' does not match any in class 'coords2domain::CoordsToDomain'
 coords::Vector_Lit *CoordsToDomain::getVector(domain::Vector_Lit* d) const {
                     ^~~~~~~~~~~~~~
In file included from CoordsToDomain.cpp:1:0:
CoordsToDomain.h:62:18: error: candidates are: coords::Vector* coords2domain::CoordsToDomain::getVector(domain::Vector_Expr*)
  coords::Vector *getVector(domain::Vector_Expr* d const);
                  ^~~~~~~~~
CoordsToDomain.h:61:18: error:                 domain::Vector* coords2domain::CoordsToDomain::getVector(coords::Vector_Expr*) const
  domain::Vector *getVector(coords::Vector_Expr* c) const;
                  ^~~~~~~~~
CoordsToDomain.h:58:18: error:                 coords::Vector* coords2domain::CoordsToDomain::getVector(domain::Vector_Lit*) const
  coords::Vector *getVector(domain::Vector_Lit* d) const;
                  ^~~~~~~~~
CoordsToDomain.h:57:18: error:                 domain::Vector* coords2domain::CoordsToDomain::getVector(coords::Vector_Lit*) const
  domain::Vector *getVector(coords::Vector_Lit* c) const;
                  ^~~~~~~~~
CoordsToDomain.cpp: In member function 'void coords2domain::CoordsToDomain::putVector_Expr(coords::Vector*, domain::Vector_Expr*)':
CoordsToDomain.cpp:91:50: error: no matching function for call to 'std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>::insert(std::pair<coords::Vector, domain::Vector_Expr*>)'
     interpExpression.insert(std::make_pair(*c, d));
                                                  ^
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Coords.h:4,
                 from CoordsToDomain.h:5,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/bits/unordered_map.h:646:2: note: candidate: template<class _InputIterator> void std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::insert(_InputIterator, _InputIterator) [with _InputIterator = _InputIterator; _Key = coords::VecExpr; _Tp = domain::VecExpr*; _Hash = coords::CoordsHasher; _Pred = std::equal_to<coords::VecExpr>; _Alloc = std::allocator<std::pair<const coords::VecExpr, domain::VecExpr*> >]
  insert(_InputIterator __first, _InputIterator __last)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:646:2: note:   template argument deduction/substitution failed:
CoordsToDomain.cpp:91:50: note:   candidate expects 2 arguments, 1 provided
     interpExpression.insert(std::make_pair(*c, d));
                                                  ^
CoordsToDomain.cpp: In member function 'domain::Vector* coords2domain::CoordsToDomain::getVector(coords::Vector_Expr*) const':
CoordsToDomain.cpp:95:29: error: no match for 'operator[]' (operand types are 'const std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>' and 'coords::Vector_Expr')
      return interpExpression[*c];
                             ^
CoordsToDomain.cpp: At global scope:
CoordsToDomain.cpp:98:71: error: expected ',' or '...' before 'const'
 coords::Vector_Expr *CoordsToDomain::getVector(domain::Vector_Expr* d const) {
                                                                       ^~~~~
CoordsToDomain.cpp:98:22: error: prototype for 'coords::Vector_Expr* coords2domain::CoordsToDomain::getVector(domain::Vector_Expr*)' does not match any in class 'coords2domain::CoordsToDomain'
 coords::Vector_Expr *CoordsToDomain::getVector(domain::Vector_Expr* d const) {
                      ^~~~~~~~~~~~~~
In file included from CoordsToDomain.cpp:1:0:
CoordsToDomain.h:62:18: error: candidates are: coords::Vector* coords2domain::CoordsToDomain::getVector(domain::Vector_Expr*)
  coords::Vector *getVector(domain::Vector_Expr* d const);
                  ^~~~~~~~~
CoordsToDomain.cpp:94:17: error:                 domain::Vector* coords2domain::CoordsToDomain::getVector(coords::Vector_Expr*) const
 domain::Vector *CoordsToDomain::getVector(coords::Vector_Expr* c) const {
                 ^~~~~~~~~~~~~~
In file included from CoordsToDomain.cpp:1:0:
CoordsToDomain.h:58:18: error:                 coords::Vector* coords2domain::CoordsToDomain::getVector(domain::Vector_Lit*) const
  coords::Vector *getVector(domain::Vector_Lit* d) const;
                  ^~~~~~~~~
CoordsToDomain.h:57:18: error:                 domain::Vector* coords2domain::CoordsToDomain::getVector(coords::Vector_Lit*) const
  domain::Vector *getVector(coords::Vector_Lit* c) const;
                  ^~~~~~~~~
CoordsToDomain.cpp: In member function 'void coords2domain::CoordsToDomain::putVector_Def(coords::Vector_Def*, domain::Vector_Def*)':
CoordsToDomain.cpp:105:50: error: no matching function for call to 'std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>::insert(std::pair<coords::Vector_Def, domain::Vector_Def*>)'
     interpExpression.insert(std::make_pair(*c, d));
                                                  ^
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/AST/AST.h:17,
                 from AST.h:4,
                 from Coords.h:4,
                 from CoordsToDomain.h:5,
                 from CoordsToDomain.cpp:1:
/usr/include/c++/7/bits/unordered_map.h:646:2: note: candidate: template<class _InputIterator> void std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::insert(_InputIterator, _InputIterator) [with _InputIterator = _InputIterator; _Key = coords::VecExpr; _Tp = domain::VecExpr*; _Hash = coords::CoordsHasher; _Pred = std::equal_to<coords::VecExpr>; _Alloc = std::allocator<std::pair<const coords::VecExpr, domain::VecExpr*> >]
  insert(_InputIterator __first, _InputIterator __last)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:646:2: note:   template argument deduction/substitution failed:
CoordsToDomain.cpp:105:50: note:   candidate expects 2 arguments, 1 provided
     interpExpression.insert(std::make_pair(*c, d));
                                                  ^
CoordsToDomain.cpp: At global scope:
CoordsToDomain.cpp:108:58: error: non-member function 'domain::Vector_Def* getVector_Def(coords::Vector_Def*)' cannot have cv-qualifier
 domain::Vector_Def *getVector_Def(coords::Vector_Def* c) const {
                                                          ^~~~~
CoordsToDomain.cpp: In function 'domain::Vector_Def* getVector_Def(coords::Vector_Def*)':
CoordsToDomain.cpp:109:11: error: 'interpExpression' was not declared in this scope
    return interpExpression[*c];
           ^~~~~~~~~~~~~~~~
CoordsToDomain.cpp: At global scope:
CoordsToDomain.cpp:112:58: error: non-member function 'coords::Vector_Def* getVector_Def(domain::Vector_Def*)' cannot have cv-qualifier
 coords::Vector_Def *getVector_Def(domain::Vector_Def* d) const {
                                                          ^~~~~
CoordsToDomain.cpp: In function 'coords::Vector_Def* getVector_Def(domain::Vector_Def*)':
CoordsToDomain.cpp:113:24: error: invalid conversion from 'const coords::Vector_Def*' to 'coords::Vector_Def*' [-fpermissive]
     return d->getCoords();
            ~~~~~~~~~~~~^~
CoordsToDomain.cpp: At global scope:
CoordsToDomain.cpp:117:6: error: prototype for 'void coords2domain::CoordsToDomain::dump() const' does not match any in class 'coords2domain::CoordsToDomain'
 void CoordsToDomain::dump() const {
      ^~~~~~~~~~~~~~
In file included from CoordsToDomain.cpp:1:0:
CoordsToDomain.h:70:7: error: candidate is: void coords2domain::CoordsToDomain::dump()
  void dump();
       ^~~~
In file included from Interpretation.h:7:0,
                 from main.cpp:15:
ASTToCoords.h:1:7: error: stray '#' in program
 VecVec#ifndef ASTTOCOORDS_H
       ^
ASTToCoords.h:73:2: error: #endif without #if
 #endif
  ^~~~~
In file included from Interpretation.h:6:0,
                 from main.cpp:15:
Coords.h:154:50: error: 'Scalar' has not been declared
   Vector_Lit(const clang::CXXConstructExpr *ast, Scalar a);
                                                  ^~~~~~
In file included from Interpretation.h:7:0,
                 from main.cpp:15:
ASTToCoords.h:1:1: error: 'VecVec' does not name a type
 VecVec#ifndef ASTTOCOORDS_H
 ^~~~~~
In file included from Oracle.h:7:0,
                 from Interpretation.h:8,
                 from main.cpp:15:
Domain.h:50:48: error: 'VecLitExpr' in namespace 'coords' does not name a type
  VecExpr* mkVecLitExpr(Space& s, const coords::VecLitExpr* e);
                                                ^~~~~~~~~~
Domain.h:51:48: error: 'VecLitExpr' in namespace 'coords' does not name a type
  VecExpr* mkVecVarExpr(Space& s, const coords::VecLitExpr* e);  // KEVIN
                                                ^~~~~~~~~~
Domain.h:101:2: error: 'ToCoordscoords' does not name a type; did you mean 'ToCoords'?
  ToCoordscoords::Coords *c) : coords_(c) {}
  ^~~~~~~~~~~~~~
  ToCoords
Domain.h:105:2: error: expected ';' after class definition
 }
  ^
  ;
Domain.h:111:32: error: expected class-name before '{' token
 class VecIdent : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecIdent::VecIdent(domain::Space&, const coords::VecIdent*)':
Domain.h:113:54: error: type 'domain::ToCoords' is not a direct base of 'domain::VecIdent'
  VecIdent(Space& space, const coords::VecIdent* c) : ToCoords(c), space_(&space) {}
                                                      ^~~~~~~~
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:21: error: expected '<' before '<:' token
   return static_cast<:VecIdent*>getBaseCoords();
                     ^~
Domain.h:116:21: error: expected type-specifier before '<:' token
Domain.h:116:21: error: expected '>' before '<:' token
Domain.h:116:21: error: expected '(' before '<:' token
Domain.h:116:23: error: capture of non-variable 'domain::VecIdent::VecIdent' 
   return static_cast<:VecIdent*>getBaseCoords();
                       ^~~~~~~~
Domain.h:111:32: note: 'class domain::VecIdent domain::VecIdent::VecIdent' declared here
 class VecIdent : public ToCode {
                                ^
Domain.h:116:31: error: expected ',' before '*' token
   return static_cast<:VecIdent*>getBaseCoords();
                               ^
Domain.h:116:31: error: expected identifier before '*' token
Domain.h:116:48: error: expected ']' before ';' token
   return static_cast<:VecIdent*>getBaseCoords();
                                                ^
Domain.h: In lambda function:
Domain.h:116:48: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:48: error: expected ')' before ';' token
Domain.h: At global scope:
Domain.h:125:32: error: expected class-name before '{' token
 class VecExpr  : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)':
Domain.h:127:57: error: type 'domain::ToCoords' is not a direct base of 'domain::VecExpr'
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
                                                         ^~~~~~~~
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:21: error: expected '<' before '<:' token
   return static_cast<:VecExpr*>getBaseCoords();
                     ^~
Domain.h:129:21: error: expected type-specifier before '<:' token
Domain.h:129:21: error: expected '>' before '<:' token
Domain.h:129:21: error: expected '(' before '<:' token
Domain.h:129:23: error: capture of non-variable 'domain::VecExpr::VecExpr' 
   return static_cast<:VecExpr*>getBaseCoords();
                       ^~~~~~~
Domain.h:125:32: note: 'class domain::VecExpr domain::VecExpr::VecExpr' declared here
 class VecExpr  : public ToCode {
                                ^
Domain.h:129:30: error: expected ',' before '*' token
   return static_cast<:VecExpr*>getBaseCoords();
                              ^
Domain.h:129:30: error: expected identifier before '*' token
Domain.h:129:47: error: expected ']' before ';' token
   return static_cast<:VecExpr*>getBaseCoords();
                                               ^
Domain.h: In lambda function:
Domain.h:129:47: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:47: error: expected ')' before ';' token
Domain.h: In member function 'virtual std::__cxx11::string domain::VecExpr::toString() const':
Domain.h:133:7: error: 'ast_' was not declared in this scope
   if (ast_ != NULL) {
       ^~~~
Domain.h:133:7: note: suggested alternative: 'asin'
   if (ast_ != NULL) {
       ^~~~
       asin
Domain.h: At global scope:
Domain.h:147:37: error: expected ';' after class definition
 class VecLitExpr : public VecExpr {}
                                     ^
                                     ;
Domain.h: In member function 'virtual std::__cxx11::string domain::VecVarExpr::toString() const':
Domain.h:154:16: error: 'ast_' was not declared in this scope
   return "(" + ast_->toString() + " )";
                ^~~~
Domain.h:154:16: note: suggested alternative: 'asin'
   return "(" + ast_->toString() + " )";
                ^~~~
                asin
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVarExpr::getCoords()':
Domain.h:157:34: error: expected '(' before 'coords_'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
Domain.h:157:34: error: 'coords_' was not declared in this scope
Domain.h:157:34: note: suggested alternative: 'Coords'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
                                  Coords
Domain.h:157:41: error: expected ')' before ';' token
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                         ^
Domain.h: At global scope:
Domain.h:166:33: error: 'VecAddAddExpr' in namespace 'coords' does not name a type
         Space& s, const coords::VecAddAddExpr* c, domain::VecExpr *mem, domain::VecExpr *arg) :
                                 ^~~~~~~~~~~~~
Domain.h: In constructor 'domain::VecVecAddExpr::VecVecAddExpr(domain::Space&, const int*, domain::VecExpr*, domain::VecExpr*)':
Domain.h:167:46: error: no matching function for call to 'domain::VecExpr::VecExpr(domain::Space&, const int*&)'
    domain::VecExpr(s, c), arg_(arg), mem_(mem) {
                                              ^
Domain.h:127:5: note: candidate: domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
     ^~~~~~~
Domain.h:127:5: note:   no known conversion for argument 2 from 'const int*' to 'const coords::VecExpr*'
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(const domain::VecExpr&)
 class VecExpr  : public ToCode {
       ^~~~~~~
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(domain::VecExpr&&)
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVecAddExpr::getCoords()':
Domain.h:172:37: error: expected '(' before 'coords_'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
Domain.h:172:37: error: 'coords_' was not declared in this scope
Domain.h:172:37: note: suggested alternative: 'Coords'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
                                     Coords
Domain.h:172:44: error: expected ')' before ';' token
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                            ^
Domain.h: At global scope:
Domain.h:188:32: error: expected class-name before '{' token
 class Vector : public ToCode   {
                                ^
Domain.h:190:55: error: 'VecCtorType' has not been declared
  Vector(const Space& s, const coords::Vector* coords, VecCtorType tag) :
                                                       ^~~~~~~~~~~
Domain.h:207:2: error: 'VecCtorType' does not name a type; did you mean 'Vector'?
  VecCtorType tag_;
  ^~~~~~~~~~~
  Vector
Domain.h: In constructor 'domain::Vector::Vector(const domain::Space&, const coords::Vector*, int)':
Domain.h:191:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector'
   ToCoords(c), space_(&s), tag_(tag) {
   ^~~~~~~~
Domain.h:191:12: error: 'c' was not declared in this scope
   ToCoords(c), space_(&s), tag_(tag) {
            ^
Domain.h:191:28: error: class 'domain::Vector' does not have any field named 'tag_'
   ToCoords(c), space_(&s), tag_(tag) {
                            ^~~~
Domain.h: In member function 'bool domain::Vector::isLit()':
Domain.h:193:25: error: 'tag_' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
Domain.h:193:25: note: suggested alternative: 'tanl'
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
                         tanl
Domain.h:193:33: error: 'VEC_LIT' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                                 ^~~~~~~
Domain.h: In member function 'bool domain::Vector::isExpr()':
Domain.h:194:26: error: 'tag_' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
Domain.h:194:26: note: suggested alternative: 'tanl'
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
                          tanl
Domain.h:194:34: error: 'VEC_EXPR' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                                  ^~~~~~~~
Domain.h: In member function 'bool domain::Vector::isVar()':
Domain.h:195:25: error: 'tag_' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
Domain.h:195:25: note: suggested alternative: 'tanl'
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
                         tanl
Domain.h:195:33: error: 'VEC_VAR' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                                 ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector::getCoords() const':
Domain.h:200:30: error: expected '(' before 'coords_'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
Domain.h:200:30: error: 'coords_' was not declared in this scope
Domain.h:200:30: note: suggested alternative: 'ToCoords'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
                              ToCoords
Domain.h:200:37: error: expected ')' before ';' token
   return static_cast<Vector*>coords_;
                                     ^
Domain.h: In constructor 'domain::Vector_Lit::Vector_Lit(const domain::Space&, const coords::Vector*)':
Domain.h:215:16: error: 'VEC_LIT' was not declared in this scope
   Vector(s, c, VEC_LIT) {
                ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Lit::getCoords() const':
Domain.h:218:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
Domain.h:218:34: error: 'coords_' was not declared in this scope
Domain.h:218:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:218:41: error: expected ')' before ';' token
   return static_cast<Vector_Lit*>coords_;
                                         ^
Domain.h: In constructor 'domain::Vector_Expr::Vector_Expr(const domain::Space&, const coords::Vector*, domain::VecExpr*)':
Domain.h:234:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Expr'
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
   ^~~~~~~~
Domain.h:234:32: error: expected primary-expression before ',' token
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                ^
Domain.h:234:34: error: 'VEC_EXPR' was not declared in this scope
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                  ^~~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Expr::getCoords() const':
Domain.h:238:35: error: expected '(' before 'coords_'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
Domain.h:238:35: error: 'coords_' was not declared in this scope
Domain.h:238:35: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
                                   ToCoords
Domain.h:238:42: error: expected ')' before ';' token
   return static_cast<Vector_Expr*>coords_;
                                          ^
Domain.h: At global scope:
Domain.h:248:36: error: expected ';' after class definition
 class Vector_Var : public Vector {}
                                    ^
                                    ;
Domain.h:255:35: error: expected class-name before '{' token
 class Vector_Def : public ToCode  {
                                   ^
Domain.h: In constructor 'domain::Vector_Def::Vector_Def(const coords::Vector_Def*, const domain::VecIdent*, const domain::VecExpr*)':
Domain.h:258:4: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Def'
    ToCoords(c), identifier_(identifier), expr_(expr) {}
    ^~~~~~~~
Domain.h: In member function 'const coords::Vector_Def* domain::Vector_Def::getCoords() const':
Domain.h:263:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
Domain.h:263:34: error: 'coords_' was not declared in this scope
Domain.h:263:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:263:41: error: expected ')' before ';' token
   return static_cast<Vector_Def*>coords_;
                                         ^
In file included from Interpretation.h:10:0,
                 from main.cpp:15:
CoordsToDomain.h: At global scope:
CoordsToDomain.h:42:29: error: 'coords::VecLitExpr' has not been declared
  void putVecLitExpr(coords::VecLitExpr n, domain::VecLitExpr &v);
                             ^~~~~~~~~~
CoordsToDomain.h:43:22: error: expected ';' at end of member declaration
  domain::VecLitExpr *getLitInterp(coords::VecLitExpr c) const;
                      ^~~~~~~~~~~~
CoordsToDomain.h:43:54: error: expected ')' before 'c'
  domain::VecLitExpr *getLitInterp(coords::VecLitExpr c) const;
                                                      ^
CoordsToDomain.h:44:10: error: 'VecLitExpr' in namespace 'coords' does not name a type
  coords::VecLitExpr *getLitInterp(domain::VecLitExpr d) const;
          ^~~~~~~~~~
CoordsToDomain.h:62:51: error: expected ',' or '...' before 'const'
  coords::Vector *getVector(domain::Vector_Expr* d const);
                                                   ^~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:47,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from main.cpp:4:
/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of 'struct std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher>':
/usr/include/c++/7/type_traits:143:12:   required from 'struct std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> >'
/usr/include/c++/7/type_traits:154:31:   required from 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecIdent, domain::VecIdent*, coords::CoordsHasher>'
CoordsToDomain.h:85:81:   required from here
/usr/include/c++/7/bits/hashtable_policy.h:87:34: error: no match for call to '(const coords::CoordsHasher) (const coords::VecIdent&)'
  noexcept(declval<const _Hash&>()(declval<const _Key&>()))>
           ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/ios:39,
                 from /usr/include/c++/7/ostream:38,
                 from /usr/include/c++/7/iostream:39,
                 from main.cpp:1:
/usr/include/c++/7/type_traits: In instantiation of 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >':
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecIdent, domain::VecIdent*, coords::CoordsHasher>'
CoordsToDomain.h:85:81:   required from here
/usr/include/c++/7/type_traits:154:31: error: 'value' is not a member of 'std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> >'
     : public __bool_constant<!bool(_Pp::value)>
                               ^~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:47,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from main.cpp:4:
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<coords::VecIdent, domain::VecIdent*, coords::CoordsHasher>':
CoordsToDomain.h:85:81:   required from here
/usr/include/c++/7/bits/unordered_map.h:103:66: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
                                                                  ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:110:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_type key_type;
                                             ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:111:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::value_type value_type;
                                               ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:112:48: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:113:43: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::hasher hasher;
                                           ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:114:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_equal key_equal;
                                              ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:115:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::allocator_type allocator_type;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:120:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::pointer  pointer;
                                             ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:121:50: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_pointer const_pointer;
                                                  ^~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:122:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::reference  reference;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:123:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_reference const_reference;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:124:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::iterator  iterator;
                                              ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:125:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_iterator const_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:126:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::local_iterator local_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:127:57: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_local_iterator const_local_iterator;
                                                         ^~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:128:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::size_type  size_type;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:129:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::difference_type difference_type;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:288:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       operator=(initializer_list<value_type> __l)
       ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:386:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  emplace(_Args&&... __args)
  ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:578:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:584:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(value_type&& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:591:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  insert(_Pair&& __x)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:657:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:953:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x)
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:957:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x) const
       ^~~~~~~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:47,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from main.cpp:4:
/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of 'struct std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher>':
/usr/include/c++/7/type_traits:143:12:   required from 'struct std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> >'
/usr/include/c++/7/type_traits:154:31:   required from 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>'
CoordsToDomain.h:86:79:   required from here
/usr/include/c++/7/bits/hashtable_policy.h:87:34: error: no match for call to '(const coords::CoordsHasher) (const coords::VecExpr&)'
  noexcept(declval<const _Hash&>()(declval<const _Key&>()))>
           ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/ios:39,
                 from /usr/include/c++/7/ostream:38,
                 from /usr/include/c++/7/iostream:39,
                 from main.cpp:1:
/usr/include/c++/7/type_traits: In instantiation of 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >':
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>'
CoordsToDomain.h:86:79:   required from here
/usr/include/c++/7/type_traits:154:31: error: 'value' is not a member of 'std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> >'
     : public __bool_constant<!bool(_Pp::value)>
                               ^~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:47,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from main.cpp:4:
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<coords::VecExpr, domain::VecExpr*, coords::CoordsHasher>':
CoordsToDomain.h:86:79:   required from here
/usr/include/c++/7/bits/unordered_map.h:103:66: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
                                                                  ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:110:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_type key_type;
                                             ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:111:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::value_type value_type;
                                               ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:112:48: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:113:43: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::hasher hasher;
                                           ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:114:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_equal key_equal;
                                              ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:115:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::allocator_type allocator_type;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:120:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::pointer  pointer;
                                             ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:121:50: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_pointer const_pointer;
                                                  ^~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:122:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::reference  reference;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:123:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_reference const_reference;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:124:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::iterator  iterator;
                                              ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:125:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_iterator const_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:126:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::local_iterator local_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:127:57: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_local_iterator const_local_iterator;
                                                         ^~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:128:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::size_type  size_type;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:129:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       typedef typename _Hashtable::difference_type difference_type;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:288:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       operator=(initializer_list<value_type> __l)
       ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:386:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
  emplace(_Args&&... __args)
  ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:578:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       insert(const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:584:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       insert(value_type&& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:591:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
  insert(_Pair&& __x)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:657:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       insert(initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:953:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       equal_range(const key_type& __x)
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:957:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecExpr, coords::CoordsHasher> > >'
       equal_range(const key_type& __x) const
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<coords::VecIdent, domain::Vector*, coords::CoordsHasher>':
CoordsToDomain.h:87:79:   required from here
/usr/include/c++/7/bits/unordered_map.h:103:66: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
                                                                  ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:110:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_type key_type;
                                             ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:111:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::value_type value_type;
                                               ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:112:48: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:113:43: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::hasher hasher;
                                           ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:114:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_equal key_equal;
                                              ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:115:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::allocator_type allocator_type;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:120:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::pointer  pointer;
                                             ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:121:50: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_pointer const_pointer;
                                                  ^~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:122:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::reference  reference;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:123:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_reference const_reference;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:124:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::iterator  iterator;
                                              ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:125:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_iterator const_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:126:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::local_iterator local_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:127:57: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_local_iterator const_local_iterator;
                                                         ^~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:128:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::size_type  size_type;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:129:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       typedef typename _Hashtable::difference_type difference_type;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:288:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       operator=(initializer_list<value_type> __l)
       ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:386:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  emplace(_Args&&... __args)
  ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:578:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:584:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(value_type&& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:591:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
  insert(_Pair&& __x)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:657:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       insert(initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:953:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x)
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:957:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::VecIdent, coords::CoordsHasher> > >'
       equal_range(const key_type& __x) const
       ^~~~~~~~~~~
In file included from /usr/include/c++/7/bits/hashtable.h:35:0,
                 from /usr/include/c++/7/unordered_map:47,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:47,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from main.cpp:4:
/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of 'struct std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher>':
/usr/include/c++/7/type_traits:143:12:   required from 'struct std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> >'
/usr/include/c++/7/type_traits:154:31:   required from 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::Vector_Def, domain::Vector_Def*, coords::CoordsHasher>'
CoordsToDomain.h:88:85:   required from here
/usr/include/c++/7/bits/hashtable_policy.h:87:34: error: no match for call to '(const coords::CoordsHasher) (const coords::Vector_Def&)'
  noexcept(declval<const _Hash&>()(declval<const _Key&>()))>
           ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/bits/move.h:54:0,
                 from /usr/include/c++/7/bits/nested_exception.h:40,
                 from /usr/include/c++/7/exception:143,
                 from /usr/include/c++/7/ios:39,
                 from /usr/include/c++/7/ostream:38,
                 from /usr/include/c++/7/iostream:39,
                 from main.cpp:1:
/usr/include/c++/7/type_traits: In instantiation of 'struct std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >':
/usr/include/c++/7/bits/unordered_map.h:103:66:   required from 'class std::unordered_map<coords::Vector_Def, domain::Vector_Def*, coords::CoordsHasher>'
CoordsToDomain.h:88:85:   required from here
/usr/include/c++/7/type_traits:154:31: error: 'value' is not a member of 'std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> >'
     : public __bool_constant<!bool(_Pp::value)>
                               ^~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/unordered_map:48:0,
                 from /llvm/include/llvm/Support/TrigramIndex.h:33,
                 from /llvm/include/llvm/Support/SpecialCaseList.h:57,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerSpecialCaseList.h:19,
                 from /llvm/tools/clang/include/clang/Basic/SanitizerBlacklist.h:17,
                 from /llvm/tools/clang/include/clang/AST/ASTContext.h:41,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchers.h:47,
                 from /llvm/tools/clang/include/clang/ASTMatchers/ASTMatchFinder.h:43,
                 from main.cpp:4:
/usr/include/c++/7/bits/unordered_map.h: In instantiation of 'class std::unordered_map<coords::Vector_Def, domain::Vector_Def*, coords::CoordsHasher>':
CoordsToDomain.h:88:85:   required from here
/usr/include/c++/7/bits/unordered_map.h:103:66: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
                                                                  ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:110:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_type key_type;
                                             ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:111:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::value_type value_type;
                                               ^~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:112:48: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::mapped_type mapped_type;
                                                ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:113:43: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::hasher hasher;
                                           ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:114:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::key_equal key_equal;
                                              ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:115:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::allocator_type allocator_type;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:120:45: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::pointer  pointer;
                                             ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:121:50: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_pointer const_pointer;
                                                  ^~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:122:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::reference  reference;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:123:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_reference const_reference;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:124:46: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::iterator  iterator;
                                              ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:125:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_iterator const_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:126:51: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::local_iterator local_iterator;
                                                   ^~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:127:57: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::const_local_iterator const_local_iterator;
                                                         ^~~~~~~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:128:47: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::size_type  size_type;
                                               ^~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:129:52: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       typedef typename _Hashtable::difference_type difference_type;
                                                    ^~~~~~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:288:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       operator=(initializer_list<value_type> __l)
       ^~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:386:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
  emplace(_Args&&... __args)
  ^~~~~~~
/usr/include/c++/7/bits/unordered_map.h:578:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       insert(const value_type& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:584:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       insert(value_type&& __x)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:591:2: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
  insert(_Pair&& __x)
  ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:657:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       insert(initializer_list<value_type> __l)
       ^~~~~~
/usr/include/c++/7/bits/unordered_map.h:953:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       equal_range(const key_type& __x)
       ^~~~~~~~~~~
/usr/include/c++/7/bits/unordered_map.h:957:7: error: 'value' is not a member of 'std::__not_<std::__and_<std::__is_fast_hash<coords::CoordsHasher>, std::__detail::__is_noexcept_hash<coords::Vector_Def, coords::CoordsHasher> > >'
       equal_range(const key_type& __x) const
       ^~~~~~~~~~~
In file included from main.cpp:15:0:
Interpretation.h:49:5: error: 'ast2coords' does not name a type
     ast2coords::ASTToCoords *ast2coords_;
     ^~~~~~~~~~
Interpretation.h: In member function 'domain::VecExpr* interp::Interpretation::getVecExpr(ast::VecExpr*)':
Interpretation.h:37:64: error: no matching function for call to 'coords::VecExpr::VecExpr(ast::VecExpr*&)'
         const coords::VecExpr *coords = new coords::VecExpr(ast);
                                                                ^
In file included from Interpretation.h:6:0,
                 from main.cpp:15:
Coords.h:100:3: note: candidate: coords::VecExpr::VecExpr(clang::Expr)
   VecExpr(const clang::Expr v);
   ^~~~~~~
Coords.h:100:3: note:   no known conversion for argument 1 from 'ast::VecExpr* {aka const clang::Expr*}' to 'clang::Expr'
Coords.h:98:7: note: candidate: constexpr coords::VecExpr::VecExpr(const coords::VecExpr&)
 class VecExpr : public Coords {
       ^~~~~~~
Coords.h:98:7: note:   no known conversion for argument 1 from 'ast::VecExpr* {aka const clang::Expr*}' to 'const coords::VecExpr&'
Coords.h:98:7: note: candidate: constexpr coords::VecExpr::VecExpr(coords::VecExpr&&)
Coords.h:98:7: note:   no known conversion for argument 1 from 'ast::VecExpr* {aka const clang::Expr*}' to 'coords::VecExpr&&'
In file included from main.cpp:15:0:
Interpretation.h:38:62: error: invalid conversion from 'const coords::VecExpr*' to 'coords::VecExpr*' [-fpermissive]
         domain::VecExpr* dom = coords2dom_->getVecExpr(coords);
                                                              ^
In file included from Interpretation.h:10:0,
                 from main.cpp:15:
CoordsToDomain.h:39:19: note:   initializing argument 1 of 'domain::VecExpr* coords2domain::CoordsToDomain::getVecExpr(coords::VecExpr*)'
  domain::VecExpr *getVecExpr(coords::VecExpr* c);
                   ^~~~~~~~~~
main.cpp: In function 'const domain::VecExpr* handleMemberCallExpr(const clang::CXXMemberCallExpr*, clang::ASTContext*, clang::SourceManager&)':
main.cpp:90:49: error: invalid conversion from 'const domain::VecExpr*' to 'domain::VecExpr*' [-fpermissive]
   interp_.mkVecVecAddExpr(ast, left_br, right_br);
                                                 ^
In file included from main.cpp:15:0:
Interpretation.h:23:10: note:   initializing argument 2 of 'void interp::Interpretation::mkVecVecAddExpr(ast::VecVecAddExpr*, domain::VecExpr*, domain::VecExpr*)'
     void mkVecVecAddExpr(ast::VecVecAddExpr *ast, domain::VecExpr *mem,
          ^~~~~~~~~~~~~~~
main.cpp:90:49: error: invalid conversion from 'const domain::VecExpr*' to 'domain::VecExpr*' [-fpermissive]
   interp_.mkVecVecAddExpr(ast, left_br, right_br);
                                                 ^
In file included from main.cpp:15:0:
Interpretation.h:23:10: note:   initializing argument 3 of 'void interp::Interpretation::mkVecVecAddExpr(ast::VecVecAddExpr*, domain::VecExpr*, domain::VecExpr*)'
     void mkVecVecAddExpr(ast::VecVecAddExpr *ast, domain::VecExpr *mem,
          ^~~~~~~~~~~~~~~
main.cpp: In member function 'virtual void HandlerForCXXMemberCallExprRight_DeclRefExpr::run(const clang::ast_matchers::MatchFinder::MatchResult&)':
main.cpp:107:12: error: base operand of '->' has non-pointer type 'interp::Interpretation'
     interp_->mkVecVarExpr(declRefExpr);
            ^~
main.cpp: In member function 'virtual void HandlerForCXXConstructAddExpr::run(const clang::ast_matchers::MatchFinder::MatchResult&)':
main.cpp:166:9: error: 'vec_vec_add_ctor_ast' was not declared in this scope
     if (vec_vec_add_ctor_ast == NULL)
         ^~~~~~~~~~~~~~~~~~~~
main.cpp:166:9: note: suggested alternative: 'vec_vec_add_member_call_ast'
     if (vec_vec_add_ctor_ast == NULL)
         ^~~~~~~~~~~~~~~~~~~~
         vec_vec_add_member_call_ast
main.cpp:180:86: error: no matching function for call to 'interp::Interpretation::mkVector_Expr(const clang::CXXMemberCallExpr*&, const domain::VecExpr*&, clang::ASTContext*&)'
     return interp_.mkVector_Expr(vec_vec_add_member_call_ast, memberCallExpr, context);
                                                                                      ^
In file included from main.cpp:15:0:
Interpretation.h:26:10: note: candidate: void interp::Interpretation::mkVector_Expr(ast::VecLitExpr*, clang::ASTContext*)
     void mkVector_Expr(ast::VecLitExpr *ast, clang::ASTContext *context);
          ^~~~~~~~~~~~~
Interpretation.h:26:10: note:   candidate expects 2 arguments, 3 provided
main.cpp:180:86: error: return-statement with a value, in function returning 'void' [-fpermissive]
     return interp_.mkVector_Expr(vec_vec_add_member_call_ast, memberCallExpr, context);
                                                                                      ^
main.cpp: In function 'const domain::VecExpr* handle_arg0_of_add_call(const clang::Expr*, clang::ASTContext&, clang::SourceManager&)':
main.cpp:238:17: error: base operand of '->' has non-pointer type 'interp::Interpretation'
   return interp_->getVecExpr(arg);
                 ^~
main.cpp: In member function 'void CXXMemberCallExprMemberExprMatcher::match(const clang::Expr&, clang::ASTContext&)':
main.cpp:277:7: error: expected ';' before 'call_rhs'
       call_rhs.dump();
       ^~~~~~~~
main.cpp: In function 'domain::VecExpr* handle_member_expr_of_add_call(const clang::Expr*, clang::ASTContext&, clang::SourceManager&)':
main.cpp:294:18: error: ambiguating new declaration of 'domain::VecExpr* handle_member_expr_of_add_call(const clang::Expr*, clang::ASTContext&, clang::SourceManager&)'
 domain::VecExpr *handle_member_expr_of_add_call(const clang::Expr *memexpr, ASTContext &context, SourceManager &sm)
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.cpp:67:24: note: old declaration 'const domain::VecExpr* handle_member_expr_of_add_call(const clang::Expr*, clang::ASTContext&, clang::SourceManager&)'
 const domain::VecExpr *handle_member_expr_of_add_call(const clang::Expr *left, ASTContext &context, SourceManager &sm);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.cpp:319:34: error: base operand of '->' has non-pointer type 'interp::Interpretation'
   domain::VecExpr *expr = interp_->getVecExpr(memexpr);
                                  ^~
main.cpp: At global scope:
main.cpp:408:48: error: 'clang' is a namespace
 const domain::VecExpr *handleCXXDeclStmt(const clang:: *consdecl, ASTContext *context, SourceManager &sm)
                                                ^~~~~
main.cpp:408:57: error: ISO C++ forbids declaration of 'consdecl' with no type [-fpermissive]
 const domain::VecExpr *handleCXXDeclStmt(const clang:: *consdecl, ASTContext *context, SourceManager &sm)
                                                         ^~~~~~~~
main.cpp: In function 'const domain::VecExpr* handleCXXDeclStmt(const int*, clang::ASTContext*, clang::SourceManager&)':
main.cpp:412:34: error: no matching function for call to 'CXXConstructExprMatcher::match(const int*&, clang::ASTContext*&)'
   matcher.match(consdecl, context);
                                  ^
main.cpp:342:8: note: candidate: void CXXConstructExprMatcher::match(const clang::CXXConstructExpr*, clang::ASTContext*)
   void match(const clang::CXXConstructExpr *consdecl, ASTContext *context)
        ^~~~~
main.cpp:342:8: note:   no known conversion for argument 1 from 'const int*' to 'const clang::CXXConstructExpr*'
main.cpp:417:39: error: expected primary-expression before '->' token
   const domain::VecExpr *expr = interp->getVecExpr(consdecl);
                                       ^~
main.cpp: In member function 'virtual void VectorDeclStmtHandler::run(const clang::ast_matchers::MatchFinder::MatchResult&)':
main.cpp:440:5: error: 'declstmt' was not declared in this scope
     declstmt->dump();
     ^~~~~~~~
main.cpp:440:5: note: suggested alternative: 'decltype'
     declstmt->dump();
     ^~~~~~~~
     decltype
main.cpp:451:35: error: base operand of '->' has non-pointer type 'interp::Interpretation'
     domain::VecIdent *id = interp_->mkVecIdent(vardecl);
                                   ^~
main.cpp:472:41: error: expected primary-expression before '->' token
     const domain::VecExpr *expr = interp->getVecExpr(consdecl);
                                         ^~
main.cpp:476:12: error: base operand of '->' has non-pointer type 'interp::Interpretation'
     interp_->mkVector_Def(declstmt, id, expr);
            ^~
main.cpp:447:20: warning: unused variable 'sm' [-Wunused-variable]
     SourceManager &sm = context->getSourceManager();
                    ^~
main.cpp: In member function 'virtual void MyFrontendAction::EndSourceFileAction()':
main.cpp:530:23: error: 'domain_domain' was not declared in this scope
     bool consistent = domain_domain->isConsistent();
                       ^~~~~~~~~~~~~
main.cpp: In function 'int main(int, const char**)':
main.cpp:549:10: error: base operand of '->' has non-pointer type 'interp::Interpretation'
   interp_->addSpace("S1");
          ^~
main.cpp:550:10: error: base operand of '->' has non-pointer type 'interp::Interpretation'
   interp_->addSpace("S2");
          ^~
In file included from Domain.h:9:0,
                 from Checker.h:4,
                 from Domain.cpp:3:
Coords.h:154:50: error: 'Scalar' has not been declared
   Vector_Lit(const clang::CXXConstructExpr *ast, Scalar a);
                                                  ^~~~~~
In file included from Checker.h:4:0,
                 from Domain.cpp:3:
Domain.h:50:48: error: 'VecLitExpr' in namespace 'coords' does not name a type
  VecExpr* mkVecLitExpr(Space& s, const coords::VecLitExpr* e);
                                                ^~~~~~~~~~
Domain.h:51:48: error: 'VecLitExpr' in namespace 'coords' does not name a type
  VecExpr* mkVecVarExpr(Space& s, const coords::VecLitExpr* e);  // KEVIN
                                                ^~~~~~~~~~
Domain.h:101:2: error: 'ToCoordscoords' does not name a type; did you mean 'ToCoords'?
  ToCoordscoords::Coords *c) : coords_(c) {}
  ^~~~~~~~~~~~~~
  ToCoords
Domain.h:105:2: error: expected ';' after class definition
 }
  ^
  ;
Domain.h:111:32: error: expected class-name before '{' token
 class VecIdent : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecIdent::VecIdent(domain::Space&, const coords::VecIdent*)':
Domain.h:113:54: error: type 'domain::ToCoords' is not a direct base of 'domain::VecIdent'
  VecIdent(Space& space, const coords::VecIdent* c) : ToCoords(c), space_(&space) {}
                                                      ^~~~~~~~
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:21: error: expected '<' before '<:' token
   return static_cast<:VecIdent*>getBaseCoords();
                     ^~
Domain.h:116:21: error: expected type-specifier before '<:' token
Domain.h:116:21: error: expected '>' before '<:' token
Domain.h:116:21: error: expected '(' before '<:' token
Domain.h:116:23: error: capture of non-variable 'domain::VecIdent::VecIdent' 
   return static_cast<:VecIdent*>getBaseCoords();
                       ^~~~~~~~
Domain.h:111:32: note: 'class domain::VecIdent domain::VecIdent::VecIdent' declared here
 class VecIdent : public ToCode {
                                ^
Domain.h:116:31: error: expected ',' before '*' token
   return static_cast<:VecIdent*>getBaseCoords();
                               ^
Domain.h:116:31: error: expected identifier before '*' token
Domain.h:116:48: error: expected ']' before ';' token
   return static_cast<:VecIdent*>getBaseCoords();
                                                ^
Domain.h: In lambda function:
Domain.h:116:48: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecIdent* domain::VecIdent::getCoords() const':
Domain.h:116:48: error: expected ')' before ';' token
Domain.h: At global scope:
Domain.h:125:32: error: expected class-name before '{' token
 class VecExpr  : public ToCode {
                                ^
Domain.h: In constructor 'domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)':
Domain.h:127:57: error: type 'domain::ToCoords' is not a direct base of 'domain::VecExpr'
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
                                                         ^~~~~~~~
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:21: error: expected '<' before '<:' token
   return static_cast<:VecExpr*>getBaseCoords();
                     ^~
Domain.h:129:21: error: expected type-specifier before '<:' token
Domain.h:129:21: error: expected '>' before '<:' token
Domain.h:129:21: error: expected '(' before '<:' token
Domain.h:129:23: error: capture of non-variable 'domain::VecExpr::VecExpr' 
   return static_cast<:VecExpr*>getBaseCoords();
                       ^~~~~~~
Domain.h:125:32: note: 'class domain::VecExpr domain::VecExpr::VecExpr' declared here
 class VecExpr  : public ToCode {
                                ^
Domain.h:129:30: error: expected ',' before '*' token
   return static_cast<:VecExpr*>getBaseCoords();
                              ^
Domain.h:129:30: error: expected identifier before '*' token
Domain.h:129:47: error: expected ']' before ';' token
   return static_cast<:VecExpr*>getBaseCoords();
                                               ^
Domain.h: In lambda function:
Domain.h:129:47: error: expected '{' before ';' token
Domain.h: In member function 'const coords::VecExpr* domain::VecExpr::Coords() const':
Domain.h:129:47: error: expected ')' before ';' token
Domain.h: In member function 'virtual std::__cxx11::string domain::VecExpr::toString() const':
Domain.h:133:7: error: 'ast_' was not declared in this scope
   if (ast_ != NULL) {
       ^~~~
Domain.h:133:7: note: suggested alternative: 'asin'
   if (ast_ != NULL) {
       ^~~~
       asin
Domain.h: At global scope:
Domain.h:147:37: error: expected ';' after class definition
 class VecLitExpr : public VecExpr {}
                                     ^
                                     ;
Domain.h: In member function 'virtual std::__cxx11::string domain::VecVarExpr::toString() const':
Domain.h:154:16: error: 'ast_' was not declared in this scope
   return "(" + ast_->toString() + " )";
                ^~~~
Domain.h:154:16: note: suggested alternative: 'asin'
   return "(" + ast_->toString() + " )";
                ^~~~
                asin
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVarExpr::getCoords()':
Domain.h:157:34: error: expected '(' before 'coords_'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
Domain.h:157:34: error: 'coords_' was not declared in this scope
Domain.h:157:34: note: suggested alternative: 'Coords'
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                  ^~~~~~~
                                  Coords
Domain.h:157:41: error: expected ')' before ';' token
   return static_cast<VecVarExpr*>coords_; // from VecExpr superclass
                                         ^
Domain.h: At global scope:
Domain.h:166:33: error: 'VecAddAddExpr' in namespace 'coords' does not name a type
         Space& s, const coords::VecAddAddExpr* c, domain::VecExpr *mem, domain::VecExpr *arg) :
                                 ^~~~~~~~~~~~~
Domain.h: In constructor 'domain::VecVecAddExpr::VecVecAddExpr(domain::Space&, const int*, domain::VecExpr*, domain::VecExpr*)':
Domain.h:167:46: error: no matching function for call to 'domain::VecExpr::VecExpr(domain::Space&, const int*&)'
    domain::VecExpr(s, c), arg_(arg), mem_(mem) {
                                              ^
Domain.h:127:5: note: candidate: domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
     ^~~~~~~
Domain.h:127:5: note:   no known conversion for argument 2 from 'const int*' to 'const coords::VecExpr*'
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(const domain::VecExpr&)
 class VecExpr  : public ToCode {
       ^~~~~~~
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(domain::VecExpr&&)
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h: In member function 'const coords::VecVarExpr* domain::VecVecAddExpr::getCoords()':
Domain.h:172:37: error: expected '(' before 'coords_'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
Domain.h:172:37: error: 'coords_' was not declared in this scope
Domain.h:172:37: note: suggested alternative: 'Coords'
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                     ^~~~~~~
                                     Coords
Domain.h:172:44: error: expected ')' before ';' token
   return static_cast<VecVecAddExpr*>coords_; // from VecExpr superclass
                                            ^
Domain.h: At global scope:
Domain.h:188:32: error: expected class-name before '{' token
 class Vector : public ToCode   {
                                ^
Domain.h:190:55: error: 'VecCtorType' has not been declared
  Vector(const Space& s, const coords::Vector* coords, VecCtorType tag) :
                                                       ^~~~~~~~~~~
Domain.h:207:2: error: 'VecCtorType' does not name a type; did you mean 'Vector'?
  VecCtorType tag_;
  ^~~~~~~~~~~
  Vector
Domain.h: In constructor 'domain::Vector::Vector(const domain::Space&, const coords::Vector*, int)':
Domain.h:191:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector'
   ToCoords(c), space_(&s), tag_(tag) {
   ^~~~~~~~
Domain.h:191:12: error: 'c' was not declared in this scope
   ToCoords(c), space_(&s), tag_(tag) {
            ^
Domain.h:191:28: error: class 'domain::Vector' does not have any field named 'tag_'
   ToCoords(c), space_(&s), tag_(tag) {
                            ^~~~
Domain.h: In member function 'bool domain::Vector::isLit()':
Domain.h:193:25: error: 'tag_' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
Domain.h:193:25: note: suggested alternative: 'tanl'
  bool isLit() { return (tag_ == VEC_LIT); }
                         ^~~~
                         tanl
Domain.h:193:33: error: 'VEC_LIT' was not declared in this scope
  bool isLit() { return (tag_ == VEC_LIT); }
                                 ^~~~~~~
Domain.h: In member function 'bool domain::Vector::isExpr()':
Domain.h:194:26: error: 'tag_' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
Domain.h:194:26: note: suggested alternative: 'tanl'
  bool isExpr() { return (tag_ == VEC_EXPR); }
                          ^~~~
                          tanl
Domain.h:194:34: error: 'VEC_EXPR' was not declared in this scope
  bool isExpr() { return (tag_ == VEC_EXPR); }
                                  ^~~~~~~~
Domain.h: In member function 'bool domain::Vector::isVar()':
Domain.h:195:25: error: 'tag_' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
Domain.h:195:25: note: suggested alternative: 'tanl'
  bool isVar() { return (tag_ == VEC_VAR); }
                         ^~~~
                         tanl
Domain.h:195:33: error: 'VEC_VAR' was not declared in this scope
  bool isVar() { return (tag_ == VEC_VAR); }
                                 ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector::getCoords() const':
Domain.h:200:30: error: expected '(' before 'coords_'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
Domain.h:200:30: error: 'coords_' was not declared in this scope
Domain.h:200:30: note: suggested alternative: 'ToCoords'
   return static_cast<Vector*>coords_;
                              ^~~~~~~
                              ToCoords
Domain.h:200:37: error: expected ')' before ';' token
   return static_cast<Vector*>coords_;
                                     ^
Domain.h: In constructor 'domain::Vector_Lit::Vector_Lit(const domain::Space&, const coords::Vector*)':
Domain.h:215:16: error: 'VEC_LIT' was not declared in this scope
   Vector(s, c, VEC_LIT) {
                ^~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Lit::getCoords() const':
Domain.h:218:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
Domain.h:218:34: error: 'coords_' was not declared in this scope
Domain.h:218:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Lit*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:218:41: error: expected ')' before ';' token
   return static_cast<Vector_Lit*>coords_;
                                         ^
Domain.h: In constructor 'domain::Vector_Expr::Vector_Expr(const domain::Space&, const coords::Vector*, domain::VecExpr*)':
Domain.h:234:3: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Expr'
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
   ^~~~~~~~
Domain.h:234:32: error: expected primary-expression before ',' token
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                ^
Domain.h:234:34: error: 'VEC_EXPR' was not declared in this scope
   ToCoords(c), Vector(s, coords, VEC_EXPR), expr_(expr) {
                                  ^~~~~~~~
Domain.h: In member function 'const coords::Vector* domain::Vector_Expr::getCoords() const':
Domain.h:238:35: error: expected '(' before 'coords_'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
Domain.h:238:35: error: 'coords_' was not declared in this scope
Domain.h:238:35: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Expr*>coords_;
                                   ^~~~~~~
                                   ToCoords
Domain.h:238:42: error: expected ')' before ';' token
   return static_cast<Vector_Expr*>coords_;
                                          ^
Domain.h: At global scope:
Domain.h:248:36: error: expected ';' after class definition
 class Vector_Var : public Vector {}
                                    ^
                                    ;
Domain.h:255:35: error: expected class-name before '{' token
 class Vector_Def : public ToCode  {
                                   ^
Domain.h: In constructor 'domain::Vector_Def::Vector_Def(const coords::Vector_Def*, const domain::VecIdent*, const domain::VecExpr*)':
Domain.h:258:4: error: type 'domain::ToCoords' is not a direct base of 'domain::Vector_Def'
    ToCoords(c), identifier_(identifier), expr_(expr) {}
    ^~~~~~~~
Domain.h: In member function 'const coords::Vector_Def* domain::Vector_Def::getCoords() const':
Domain.h:263:34: error: expected '(' before 'coords_'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
Domain.h:263:34: error: 'coords_' was not declared in this scope
Domain.h:263:34: note: suggested alternative: 'ToCoords'
   return static_cast<Vector_Def*>coords_;
                                  ^~~~~~~
                                  ToCoords
Domain.h:263:41: error: expected ')' before ';' token
   return static_cast<Vector_Def*>coords_;
                                         ^
Domain.cpp: In member function 'std::__cxx11::string domain::VecIdent::getName() const':
Domain.cpp:64:75: error: 'vardecl_' was not declared in this scope
     std::cerr << "VecIdent::getName(): vardecl_  addr is " << std::hex << vardecl_->getVarDecl() << "\n";
                                                                           ^~~~~~~~
Domain.cpp: At global scope:
Domain.cpp:73:63: error: 'VecLitExpr' in namespace 'coords' does not name a type
 domain::VecExpr *Domain::mkVecLitExpr(Space &s, const coords::VecLitExpr *e)
                                                               ^~~~~~~~~~
Domain.cpp: In member function 'domain::VecExpr* domain::Domain::mkVecLitExpr(domain::Space&, const int*)':
Domain.cpp:75:51: error: no matching function for call to 'domain::VecExpr::VecExpr(domain::Space&, const int*&)'
     domain::VecExpr *be = new domain::VecExpr(s, e);
                                                   ^
In file included from Checker.h:4:0,
                 from Domain.cpp:3:
Domain.h:127:5: note: candidate: domain::VecExpr::VecExpr(const domain::Space&, const coords::VecExpr*)
     VecExpr(const Space& s, const coords::VecExpr* c) : ToCoords(c), space_(s) {}
     ^~~~~~~
Domain.h:127:5: note:   no known conversion for argument 2 from 'const int*' to 'const coords::VecExpr*'
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(const domain::VecExpr&)
 class VecExpr  : public ToCode {
       ^~~~~~~
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.h:125:7: note: candidate: constexpr domain::VecExpr::VecExpr(domain::VecExpr&&)
Domain.h:125:7: note:   candidate expects 1 argument, 2 provided
Domain.cpp: In member function 'domain::VecExpr* domain::Domain::mkVecVecAddExpr(domain::Space&, coords::VecVecAddExpr*, domain::VecExpr*, domain::VecExpr*)':
Domain.cpp:97:67: error: no matching function for call to 'domain::VecVecAddExpr::VecVecAddExpr(domain::Space&, coords::VecVecAddExpr*&, domain::VecExpr*&, domain::VecExpr*&)'
     domain::VecExpr *be = new domain::VecVecAddExpr(s, e, mem, arg);
                                                                   ^
In file included from Checker.h:4:0,
                 from Domain.cpp:3:
Domain.h:165:4: note: candidate: domain::VecVecAddExpr::VecVecAddExpr(domain::Space&, const int*, domain::VecExpr*, domain::VecExpr*)
    VecVecAddExpr(
    ^~~~~~~~~~~~~
Domain.h:165:4: note:   no known conversion for argument 2 from 'coords::VecVecAddExpr*' to 'const int*'
Domain.h:163:7: note: candidate: constexpr domain::VecVecAddExpr::VecVecAddExpr(const domain::VecVecAddExpr&)
 class VecVecAddExpr : public VecExpr {
       ^~~~~~~~~~~~~
Domain.h:163:7: note:   candidate expects 1 argument, 4 provided
Domain.h:163:7: note: candidate: constexpr domain::VecVecAddExpr::VecVecAddExpr(domain::VecVecAddExpr&&)
Domain.h:163:7: note:   candidate expects 1 argument, 4 provided
Domain.cpp:102:13: error: cannot convert 'domain::VecExpr' to 'domain::VecExpr*' in return
     return *be;
             ^~
Domain.cpp: At global scope:
Domain.cpp:105:60: error: no 'const domain::VecExpr& domain::VecVecAddExpr::getVecVecAddExprArgL()' member function declared in class 'domain::VecVecAddExpr'
 const domain::VecExpr &VecVecAddExpr::getVecVecAddExprArgL()
                                                            ^
Domain.cpp:110:60: error: no 'const domain::VecExpr& domain::VecVecAddExpr::getVecVecAddExprArgR()' member function declared in class 'domain::VecVecAddExpr'
 const domain::VecExpr &VecVecAddExpr::getVecVecAddExprArgR()
                                                            ^
Domain.cpp:119:9: error: prototype for 'domain::Vector* domain::Domain::mkVector_Lit(domain::Space&, coords::Vector*)' does not match any in class 'domain::Domain'
 Vector* Domain::mkVector_Lit(Space& space, coords::Vector* coords) {
         ^~~~~~
In file included from Checker.h:4:0,
                 from Domain.cpp:3:
Domain.h:56:10: error: candidate is: domain::Vector* domain::Domain::mkVector_Lit(coords::Vector*)
  Vector* mkVector_Lit(coords::Vector* v/*, domain::VecExpr *vec*/);
          ^~~~~~~~~~~~
Domain.cpp:125:73: error: 'domain::Expr' has not been declared
 Vector* Domain::mkVector_Expr(Space& s, coords::Vector* coords, domain::Expr* exp) {
                                                                         ^~~~
Domain.cpp:125:9: error: prototype for 'domain::Vector* domain::Domain::mkVector_Expr(domain::Space&, coords::Vector*, int*)' does not match any in class 'domain::Domain'
 Vector* Domain::mkVector_Expr(Space& s, coords::Vector* coords, domain::Expr* exp) {
         ^~~~~~
In file included from Checker.h:4:0,
                 from Domain.cpp:3:
Domain.h:58:10: error: candidate is: domain::Vector* domain::Domain::mkVector_Expr(coords::Vector*, domain::VecExpr*)
  Vector* mkVector_Expr(coords::Vector* v, domain::VecExpr *vec);
          ^~~~~~~~~~~~~
Domain.cpp:163:30: error: no 'void domain::Domain::dumpIdentifiers()' member function declared in class 'domain::Domain'
 void Domain::dumpIdentifiers()
                              ^
Makefile:110: recipe for target '../build/ASTMatcher' failed
make: *** [../build/ASTMatcher] Error 1
