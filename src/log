Error while trying to load a compilation database:
Could not auto-detect compilation database for file "../inputs/temp.7.cpp"
No compilation database found in /peirce/src/../inputs or any parent directory
fixed-compilation-database: Error while opening fixed database: No such file or directory
json-compilation-database: Error while opening JSON database: No such file or directory
Running without flags.
VectorDeclStmtHandler:: Decl Statement is 
DeclStmt 0x55d210029c78
`-VarDecl 0x55d210029958  used v1 'class Vec' callinit
  `-CXXConstructExpr 0x55d210029c38 'class Vec' 'void (float, float, float)'
    |-ImplicitCastExpr 0x55d210029bf0 'float' <FloatingCast>
    | `-FloatingLiteral 0x55d2100299b8 'double' 1.000000e+00
    |-ImplicitCastExpr 0x55d210029c08 'float' <FloatingCast>
    | `-FloatingLiteral 0x55d2100299d8 'double' 1.000000e+00
    `-ImplicitCastExpr 0x55d210029c20 'float' <FloatingCast>
      `-FloatingLiteral 0x55d2100299f8 'double' 1.000000e+00
Space for identifier?
Available spaces:	
0. S1
1. S2
Space? VectorDeclStmtHandler: matching on consdecl
START: Pattern Matching on CXXConstructExpr (Lit | Add): Start
HandlerForCXXConstructLitExpr. AST:
Space for literal?
CXXConstructExpr 0x55d210029c38 'class Vec' 'void (float, float, float)'
|-ImplicitCastExpr 0x55d210029bf0 'float' <FloatingCast>
| `-FloatingLiteral 0x55d2100299b8 'double' 1.000000e+00
|-ImplicitCastExpr 0x55d210029c08 'float' <FloatingCast>
| `-FloatingLiteral 0x55d2100299d8 'double' 1.000000e+00
`-ImplicitCastExpr 0x55d210029c20 'float' <FloatingCast>
  `-FloatingLiteral 0x55d2100299f8 'double' 1.000000e+00
Available spaces:	
0. S1
1. S2
Space? END HandlerForCXXConstructLitExpr
DONE: Pattern Matching on CXXConstructExpr (Lit | Add): Start
Bridge::addBinding identifier is (v1 : S2) expression is ((mk_vector 0) : S2)
VectorDeclStmtHandler:: Post Bridge State 
Bridge expressions:
((mk_vector 0) : S2)
Bridge Identifiers
(v1 : S2)
Bridge Bindings
def (v1 : S2) := ((mk_vector 0) : S2)
InterpExpressions
InterpExpr!

VectorDeclStmtHandler:: Decl Statement is 
DeclStmt 0x55d210029e18
`-VarDecl 0x55d210029ca0  used v2 'class Vec' callinit
  `-CXXConstructExpr 0x55d210029dd8 'class Vec' 'void (float, float, float)'
    |-ImplicitCastExpr 0x55d210029d90 'float' <FloatingCast>
    | `-FloatingLiteral 0x55d210029d00 'double' 2.000000e+00
    |-ImplicitCastExpr 0x55d210029da8 'float' <FloatingCast>
    | `-FloatingLiteral 0x55d210029d20 'double' 2.000000e+00
    `-ImplicitCastExpr 0x55d210029dc0 'float' <FloatingCast>
      `-FloatingLiteral 0x55d210029d40 'double' 2.000000e+00
Space for identifier?
Available spaces:	
0. S1
1. S2
Space? VectorDeclStmtHandler: matching on consdecl
START: Pattern Matching on CXXConstructExpr (Lit | Add): Start
HandlerForCXXConstructLitExpr. AST:
Space for literal?
CXXConstructExpr 0x55d210029dd8 'class Vec' 'void (float, float, float)'
|-ImplicitCastExpr 0x55d210029d90 'float' <FloatingCast>
| `-FloatingLiteral 0x55d210029d00 'double' 2.000000e+00
|-ImplicitCastExpr 0x55d210029da8 'float' <FloatingCast>
| `-FloatingLiteral 0x55d210029d20 'double' 2.000000e+00
`-ImplicitCastExpr 0x55d210029dc0 'float' <FloatingCast>
  `-FloatingLiteral 0x55d210029d40 'double' 2.000000e+00
Available spaces:	
0. S1
1. S2
Space? END HandlerForCXXConstructLitExpr
DONE: Pattern Matching on CXXConstructExpr (Lit | Add): Start
Bridge::addBinding identifier is (v2 : S2) expression is ((mk_vector 0) : S2)
VectorDeclStmtHandler:: Post Bridge State 
Bridge expressions:
((mk_vector 0) : S2)
((mk_vector 0) : S2)
Bridge Identifiers
(v1 : S2)
(v2 : S2)
Bridge Bindings
def (v1 : S2) := ((mk_vector 0) : S2)
def (v2 : S2) := ((mk_vector 0) : S2)
InterpExpressions
InterpExpr!
InterpExpr!

VectorDeclStmtHandler:: Decl Statement is 
DeclStmt 0x55d21002aa38
`-VarDecl 0x55d210029e40  used v3 'class Vec' callinit
  `-CXXConstructExpr 0x55d21002a9f8 'class Vec' 'void (float, float, float)'
    |-ImplicitCastExpr 0x55d21002a9b0 'float' <FloatingCast>
    | `-FloatingLiteral 0x55d210029ea0 'double' 3.000000e+00
    |-ImplicitCastExpr 0x55d21002a9c8 'float' <FloatingCast>
    | `-FloatingLiteral 0x55d210029ec0 'double' 3.000000e+00
    `-ImplicitCastExpr 0x55d21002a9e0 'float' <FloatingCast>
      `-FloatingLiteral 0x55d210029ee0 'double' 3.000000e+00
Space for identifier?
Available spaces:	
0. S1
1. S2
Space? VectorDeclStmtHandler: matching on consdecl
START: Pattern Matching on CXXConstructExpr (Lit | Add): Start
HandlerForCXXConstructLitExpr. AST:
Space for literal?
CXXConstructExpr 0x55d21002a9f8 'class Vec' 'void (float, float, float)'
|-ImplicitCastExpr 0x55d21002a9b0 'float' <FloatingCast>
| `-FloatingLiteral 0x55d210029ea0 'double' 3.000000e+00
|-ImplicitCastExpr 0x55d21002a9c8 'float' <FloatingCast>
| `-FloatingLiteral 0x55d210029ec0 'double' 3.000000e+00
`-ImplicitCastExpr 0x55d21002a9e0 'float' <FloatingCast>
  `-FloatingLiteral 0x55d210029ee0 'double' 3.000000e+00
Available spaces:	
0. S1
1. S2
Space? END HandlerForCXXConstructLitExpr
DONE: Pattern Matching on CXXConstructExpr (Lit | Add): Start
Bridge::addBinding identifier is (v3 : S2) expression is ((mk_vector 0) : S2)
VectorDeclStmtHandler:: Post Bridge State 
Bridge expressions:
((mk_vector 0) : S2)
((mk_vector 0) : S2)
((mk_vector 0) : S2)
Bridge Identifiers
(v1 : S2)
(v2 : S2)
(v3 : S2)
Bridge Bindings
def (v1 : S2) := ((mk_vector 0) : S2)
def (v2 : S2) := ((mk_vector 0) : S2)
def (v3 : S2) := ((mk_vector 0) : S2)
InterpExpressions
InterpExpr!
InterpExpr!
InterpExpr!

VectorDeclStmtHandler:: Decl Statement is 
DeclStmt 0x55d21002ae90
`-VarDecl 0x55d21002aa60  v4 'class Vec' cinit
  `-CXXConstructExpr 0x55d21002ae60 'class Vec' 'void (const class Vec &) noexcept'
    `-ImplicitCastExpr 0x55d21002abf0 'const class Vec' lvalue <NoOp>
      `-CXXMemberCallExpr 0x55d21002abc8 'class Vec' lvalue
        |-MemberExpr 0x55d21002ab78 '<bound member function type>' .vec_add 0x55d20fffa678
        | `-ParenExpr 0x55d21002ab58 'class Vec' lvalue
        |   `-CXXMemberCallExpr 0x55d21002ab30 'class Vec' lvalue
        |     |-MemberExpr 0x55d21002aae0 '<bound member function type>' .vec_add 0x55d20fffa678
        |     | `-DeclRefExpr 0x55d21002aac0 'class Vec' lvalue Var 0x55d210029958 'v1' 'class Vec'
        |     `-DeclRefExpr 0x55d21002ab10 'class Vec' lvalue Var 0x55d210029ca0 'v2' 'class Vec'
        `-DeclRefExpr 0x55d21002aba8 'class Vec' lvalue Var 0x55d210029e40 'v3' 'class Vec'
Space for identifier?
Available spaces:	
0. S1
1. S2
Space? VectorDeclStmtHandler: matching on consdecl
START: Pattern Matching on CXXConstructExpr (Lit | Add): Start
START HandlerForCXXConstructAddExpr.
START: handle_member_expr_of_add_call by matching: 0x55d21002ab58
ParenExpr 0x55d21002ab58 'class Vec' lvalue
`-CXXMemberCallExpr 0x55d21002ab30 'class Vec' lvalue
  |-MemberExpr 0x55d21002aae0 '<bound member function type>' .vec_add 0x55d20fffa678
  | `-DeclRefExpr 0x55d21002aac0 'class Vec' lvalue Var 0x55d210029958 'v1' 'class Vec'
  `-DeclRefExpr 0x55d21002ab10 'class Vec' lvalue Var 0x55d210029ca0 'v2' 'class Vec'
Foo Matching on memexpr:
ParenExpr 0x55d21002ab58 'class Vec' lvalue
`-CXXMemberCallExpr 0x55d21002ab30 'class Vec' lvalue
  |-MemberExpr 0x55d21002aae0 '<bound member function type>' .vec_add 0x55d20fffa678
  | `-DeclRefExpr 0x55d21002aac0 'class Vec' lvalue Var 0x55d210029958 'v1' 'class Vec'
  `-DeclRefExpr 0x55d21002ab10 'class Vec' lvalue Var 0x55d210029ca0 'v2' 'class Vec'
START CXXMemberCallExprMemberExprMatcher::match start
ParenExpr 0x55d21002ab58 'class Vec' lvalue
`-CXXMemberCallExpr 0x55d21002ab30 'class Vec' lvalue
  |-MemberExpr 0x55d21002aae0 '<bound member function type>' .vec_add 0x55d20fffa678
  | `-DeclRefExpr 0x55d21002aac0 'class Vec' lvalue Var 0x55d210029958 'v1' 'class Vec'
  `-DeclRefExpr 0x55d21002ab10 'class Vec' lvalue Var 0x55d210029ca0 'v2' 'class Vec'
HandlerForCXXAddMemberCall.
START: handle_member_expr_of_add_call by matching: 0x55d21002aac0
DeclRefExpr 0x55d21002aac0 'class Vec' lvalue Var 0x55d210029958 'v1' 'class Vec'
Foo Matching on memexpr:
DeclRefExpr 0x55d21002aac0 'class Vec' lvalue Var 0x55d210029958 'v1' 'class Vec'
START CXXMemberCallExprMemberExprMatcher::match start
DeclRefExpr 0x55d21002aac0 'class Vec' lvalue Var 0x55d210029958 'v1' 'class Vec'
HandlerForCXXMemberCallExprRight_DeclRefExpr: Got declRefExpr = 0x55d21002aac0
Adding Vec Var Expr to domain, address 0x55d210030ab0: (v1 : _)
DONE CXXMemberCallExprMemberExprMatcher::match end
Now looking it up at 0x55d21002aac0
handle_arg0_of_add_call (match).
DeclRefExpr 0x55d21002ab10 'class Vec' lvalue Var 0x55d210029ca0 'v2' 'class Vec'
CXXMemberCallExprArg0Matcher::match start
HandlerForCXXMemberCallExprRight_DeclRefExpr: Got declRefExpr = 0x55d21002ab10
Adding Vec Var Expr to domain, address 0x55d210030140: (v2 : _)
CXXMemberCallExprArg0Matcher::match finish
START: adding member call expression to system
Left child is (v1 : _) 
Right child is (v2 : _)
Added add expr at 0x55d21002ab30 to expr_wrappers
Expression added was 
CXXMemberCallExpr 0x55d21002ab30 'class Vec' lvalue
|-MemberExpr 0x55d21002aae0 '<bound member function type>' .vec_add 0x55d20fffa678
| `-DeclRefExpr 0x55d21002aac0 'class Vec' lvalue Var 0x55d210029958 'v1' 'class Vec'
`-DeclRefExpr 0x55d21002ab10 'class Vec' lvalue Var 0x55d210029ca0 'v2' 'class Vec'
Space for add expression?
Available spaces:	
0. S1
1. S2
Space? Bridge::addVecAddExpr:: Adding Vec ADD Expr to expressions, address 0x55d210030200
Bridge::addVecAddExpr:: Add Expr added is (add (v1 : _) (v2 : _))
Bridge::addVecAddExpr:: Done adding Add Expr to expressions
New expression now adding is (add (v1 : _) (v2 : _))
FINISHED: adding member call expression to system
DONE CXXMemberCallExprMemberExprMatcher::match end
Now looking it up at 0x55d21002ab58
Oops
